

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 11 14:42:55 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	idataCOMRAM
    31  000B6E                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for HD44780_CursorSet@F4227
    35  000B6E  00                 	db	0
    36  000B6F  40                 	db	64
    37  000B70  14                 	db	20
    38  000B71  54                 	db	84
    39  0000                     _PORTBbits	set	3969
    40  0000                     _PORTDbits	set	3971
    41  0000                     _TRISBbits	set	3987
    42  0000                     _TRISDbits	set	3989
    43                           
    44                           	psect	smallconst
    45  000600                     __psmallconst:
    46                           	opt stack 0
    47  000600  00                 	db	0
    48  000601                     STR_1:
    49  000601  4B                 	db	75	;'K'
    50  000602  65                 	db	101	;'e'
    51  000603  79                 	db	121	;'y'
    52  000604  20                 	db	32
    53  000605  56                 	db	86	;'V'
    54  000606  61                 	db	97	;'a'
    55  000607  6C                 	db	108	;'l'
    56  000608  75                 	db	117	;'u'
    57  000609  65                 	db	101	;'e'
    58  00060A  20                 	db	32
    59  00060B  69                 	db	105	;'i'
    60  00060C  73                 	db	115	;'s'
    61  00060D  3A                 	db	58	;':'
    62  00060E  00                 	db	0
    63  00060F                     STR_2:
    64  00060F  25                 	db	37
    65  000610  63                 	db	99	;'c'
    66  000611  00                 	db	0
    67                           
    68                           ; #config settings
    69  000612  00                 	db	0	; dummy byte at the end
    70  0000                     
    71                           	psect	cinit
    72  000A58                     __pcinit:
    73                           	opt stack 0
    74  000A58                     start_initialization:
    75                           	opt stack 0
    76  000A58                     __initialization:
    77                           	opt stack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (7 bytes)
    80  000A58  EE00  F01B         	lfsr	0,__pbssCOMRAM
    81  000A5C  0E07               	movlw	7
    82  000A5E                     clear_0:
    83  000A5E  6AEE               	clrf	postinc0,c
    84  000A60  06E8               	decf	wreg,f,c
    85  000A62  E1FD               	bnz	clear_0
    86                           
    87                           ; Initialize objects allocated to COMRAM (4 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  000A64  0E6E               	movlw	low __pidataCOMRAM
    90  000A66  6EF6               	movwf	tblptrl,c
    91  000A68  0E0B               	movlw	high __pidataCOMRAM
    92  000A6A  6EF7               	movwf	tblptrh,c
    93  000A6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  000A6E  6EF8               	movwf	tblptru,c
    95  000A70  EE00  F022         	lfsr	0,__pdataCOMRAM
    96  000A74  EE10 F004          	lfsr	1,4
    97  000A78                     copy_data0:
    98  000A78  0009               	tblrd		*+
    99  000A7A  CFF5 FFEE          	movff	tablat,postinc0
   100  000A7E  50E5               	movf	postdec1,w,c
   101  000A80  50E1               	movf	fsr1l,w,c
   102  000A82  E1FA               	bnz	copy_data0
   103  000A84                     end_of_initialization:
   104                           	opt stack 0
   105  000A84                     __end_of__initialization:
   106                           	opt stack 0
   107  000A84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  000A86  6EF8               	movwf	tblptru,c
   109  000A88  0100               	movlb	0
   110  000A8A  EF34  F004         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           postdec1	equ	0xFE5
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	bssCOMRAM
   121  00001B                     __pbssCOMRAM:
   122                           	opt stack 0
   123  00001B                     _HD44780_Opts:
   124                           	opt stack 0
   125  00001B                     	ds	7
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           tblptrl	equ	0xFF6
   129                           tablat	equ	0xFF5
   130                           postinc0	equ	0xFEE
   131                           wreg	equ	0xFE8
   132                           postdec1	equ	0xFE5
   133                           fsr1l	equ	0xFE1
   134                           
   135                           	psect	dataCOMRAM
   136  000022                     __pdataCOMRAM:
   137                           	opt stack 0
   138  000022                     HD44780_CursorSet@F4227:
   139                           	opt stack 0
   140  000022                     	ds	4
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           	psect	cstackCOMRAM
   151  000001                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000001                     ?_KEYPAD_Read:
   154                           	opt stack 0
   155  000001                     Delayms@ms:
   156                           	opt stack 0
   157  000001                     KEYPAD_KeytoASCII@KeyNumber:
   158                           	opt stack 0
   159  000001                     HD44780_Delay@us:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x0
   163  000001                     	ds	2
   164  000003                     ??_Delayms:
   165  000003                     ??_HD44780_Delay:
   166                           
   167                           ; 1 bytes @ 0x2
   168  000003                     	ds	1
   169  000004                     Delayms@i:
   170                           	opt stack 0
   171  000004                     HD44780_Delay@i:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0x3
   175  000004                     	ds	2
   176  000006                     ??_HD44780_Cmd4bit:
   177                           
   178                           ; 1 bytes @ 0x5
   179  000006                     	ds	1
   180  000007                     HD44780_Cmd4bit@cmd:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x6
   184  000007                     	ds	1
   185  000008                     HD44780_Cmd@cmd:
   186                           	opt stack 0
   187  000008                     HD44780_Data@data:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x7
   191  000008                     	ds	1
   192  000009                     HD44780_Init@rows:
   193                           	opt stack 0
   194  000009                     HD44780_CursorSet@row:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x8
   198  000009                     	ds	1
   199  00000A                     HD44780_Init@cols:
   200                           	opt stack 0
   201  00000A                     HD44780_CursorSet@row_offsets:
   202                           	opt stack 0
   203                           
   204                           ; 4 bytes @ 0x9
   205  00000A                     	ds	4
   206  00000E                     HD44780_CursorSet@col:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0xD
   210  00000E                     	ds	1
   211  00000F                     putch@c:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0xE
   215  00000F                     	ds	1
   216  000010                     ?_printf:
   217                           	opt stack 0
   218  000010                     printf@f:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0xF
   222  000010                     	ds	4
   223  000014                     printf@flag:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x13
   227  000014                     	ds	1
   228  000015                     printf@ap:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x14
   232  000015                     	ds	2
   233  000017                     printf@c:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x16
   237  000017                     	ds	1
   238  000018                     main@char_key:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x17
   242  000018                     	ds	1
   243  000019                     main@int_key:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x18
   247  000019                     	ds	2
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           postdec1	equ	0xFE5
   255                           fsr1l	equ	0xFE1
   256                           
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 14 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  int_key         2   24[COMRAM] int 
   267 ;;  char_key        1   23[COMRAM] unsigned char 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   277 ;;      Params:         0       0       0       0       0       0       0
   278 ;;      Locals:         3       0       0       0       0       0       0
   279 ;;      Temps:          0       0       0       0       0       0       0
   280 ;;      Totals:         3       0       0       0       0       0       0
   281 ;;Total ram usage:        3 bytes
   282 ;; Hardware stack levels required when called:    6
   283 ;; This function calls:
   284 ;;		_Delayms
   285 ;;		_HD44780_Clear
   286 ;;		_HD44780_CursorSet
   287 ;;		_HD44780_Init
   288 ;;		_KEYPAD_Init
   289 ;;		_KEYPAD_KeytoASCII
   290 ;;		_KEYPAD_Read
   291 ;;		_printf
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298  000868                     __ptext0:
   299                           	opt stack 0
   300  000868                     _main:
   301                           	opt stack 25
   302                           
   303                           ;main.c: 16: int int_key = 0xFF;
   304                           
   305                           ;incstack = 0
   306  000868  0E00               	movlw	0
   307  00086A  6E1A               	movwf	main@int_key+1,c
   308  00086C  6819               	setf	main@int_key,c
   309                           
   310                           ;main.c: 17: char char_key;
   311                           ;main.c: 20: HD44780_Init(16, 2);
   312  00086E  0E02               	movlw	2
   313  000870  6E09               	movwf	HD44780_Init@rows,c
   314  000872  0E10               	movlw	16
   315  000874  EC9E  F003         	call	_HD44780_Init
   316                           
   317                           ;main.c: 23: KEYPAD_Init();
   318  000878  EC73  F005         	call	_KEYPAD_Init	;wreg free
   319  00087C                     l1518:
   320                           
   321                           ;main.c: 27: int_key = KEYPAD_Read();
   322  00087C  EC0A  F003         	call	_KEYPAD_Read	;wreg free
   323  000880  C001  F019         	movff	?_KEYPAD_Read,main@int_key
   324  000884  C002  F01A         	movff	?_KEYPAD_Read+1,main@int_key+1
   325                           
   326                           ;main.c: 29: char_key = (char)KEYPAD_KeytoASCII(int_key);
   327  000888  C019  F001         	movff	main@int_key,KEYPAD_KeytoASCII@KeyNumber
   328  00088C  C01A  F002         	movff	main@int_key+1,KEYPAD_KeytoASCII@KeyNumber+1
   329  000890  ECAD  F004         	call	_KEYPAD_KeytoASCII	;wreg free
   330  000894  6E18               	movwf	main@char_key,c
   331                           
   332                           ;main.c: 31: if (int_key != 0xFF) {
   333  000896  2819               	incf	main@int_key,w,c
   334  000898  101A               	iorwf	main@int_key+1,w,c
   335  00089A  B4D8               	btfsc	status,2,c
   336  00089C  D7EF               	goto	l1518
   337                           
   338                           ;main.c: 32: HD44780_Clear();
   339  00089E  ECA7  F005         	call	_HD44780_Clear	;wreg free
   340                           
   341                           ;main.c: 33: HD44780_CursorSet(0,0);
   342  0008A2  0E00               	movlw	0
   343  0008A4  6E09               	movwf	HD44780_CursorSet@row,c
   344  0008A6  0E00               	movlw	0
   345  0008A8  EC0B  F005         	call	_HD44780_CursorSet
   346                           
   347                           ;main.c: 34: printf("Key Value is:");
   348  0008AC  0E01               	movlw	low STR_1
   349  0008AE  6E10               	movwf	printf@f,c
   350  0008B0  0E06               	movlw	high STR_1
   351  0008B2  6E11               	movwf	printf@f+1,c
   352  0008B4  EC71  F004         	call	_printf	;wreg free
   353                           
   354                           ;main.c: 35: HD44780_CursorSet(0,1);
   355  0008B8  0E01               	movlw	1
   356  0008BA  6E09               	movwf	HD44780_CursorSet@row,c
   357  0008BC  0E00               	movlw	0
   358  0008BE  EC0B  F005         	call	_HD44780_CursorSet
   359                           
   360                           ;main.c: 36: printf("%c", char_key);
   361  0008C2  0E0F               	movlw	low STR_2
   362  0008C4  6E10               	movwf	printf@f,c
   363  0008C6  0E06               	movlw	high STR_2
   364  0008C8  6E11               	movwf	printf@f+1,c
   365  0008CA  C018  F012         	movff	main@char_key,?_printf+2
   366  0008CE  6A13               	clrf	?_printf+3,c
   367  0008D0  EC71  F004         	call	_printf	;wreg free
   368                           
   369                           ;main.c: 37: Delayms(100);
   370  0008D4  0E00               	movlw	0
   371  0008D6  6E02               	movwf	Delayms@ms+1,c
   372  0008D8  0E64               	movlw	100
   373  0008DA  6E01               	movwf	Delayms@ms,c
   374  0008DC  EC47  F005         	call	_Delayms	;wreg free
   375  0008E0  D7CD               	goto	l1518
   376  0008E2                     __end_of_main:
   377                           	opt stack 0
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           status	equ	0xFD8
   387                           
   388 ;; *************** function _printf *****************
   389 ;; Defined at:
   390 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  f               2   15[COMRAM] PTR const unsigned char 
   393 ;;		 -> STR_2(3), STR_1(14), 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  tmpval          4    0        struct .
   396 ;;  cp              3    0        PTR const unsigned char 
   397 ;;  ap              2   20[COMRAM] PTR void [1]
   398 ;;		 -> ?_printf(2), 
   399 ;;  len             2    0        unsigned int 
   400 ;;  val             2    0        unsigned int 
   401 ;;  c               1   22[COMRAM] char 
   402 ;;  flag            1   19[COMRAM] unsigned char 
   403 ;;  prec            1    0        char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2   15[COMRAM] int 
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   413 ;;      Params:         4       0       0       0       0       0       0
   414 ;;      Locals:         4       0       0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0
   416 ;;      Totals:         8       0       0       0       0       0       0
   417 ;;Total ram usage:        8 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    5
   420 ;; This function calls:
   421 ;;		_putch
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text1
   428  0008E2                     __ptext1:
   429                           	opt stack 0
   430  0008E2                     _printf:
   431                           	opt stack 25
   432                           
   433                           ;doprnt.c: 466: va_list ap;
   434                           ;doprnt.c: 499: signed char c;
   435                           ;doprnt.c: 506: signed char prec;
   436                           ;doprnt.c: 508: unsigned char flag;
   437                           ;doprnt.c: 523: union {
   438                           ;doprnt.c: 524: unsigned long vd;
   439                           ;doprnt.c: 525: double integ;
   440                           ;doprnt.c: 526: } tmpval;
   441                           ;doprnt.c: 528: unsigned int val;
   442                           ;doprnt.c: 529: unsigned len;
   443                           ;doprnt.c: 530: const char * cp;
   444                           ;doprnt.c: 533: *ap = __va_start();
   445                           
   446                           ;incstack = 0
   447  0008E2  0E12               	movlw	low (?_printf+2)
   448  0008E4  6E15               	movwf	printf@ap,c
   449  0008E6  0E00               	movlw	high (?_printf+2)
   450  0008E8  6E16               	movwf	printf@ap+1,c
   451                           
   452                           ;doprnt.c: 536: while(c = *f++) {
   453  0008EA  D02A               	goto	l1510
   454  0008EC                     l1494:
   455                           
   456                           ;doprnt.c: 538: if(c != '%')
   457  0008EC  0E25               	movlw	37
   458  0008EE  1817               	xorwf	printf@c,w,c
   459  0008F0  B4D8               	btfsc	status,2,c
   460  0008F2  D004               	goto	l1498
   461                           
   462                           ;doprnt.c: 540: {
   463                           ;doprnt.c: 541: (putch(c) );
   464  0008F4  5017               	movf	printf@c,w,c
   465  0008F6  ECE4  F004         	call	_putch
   466                           
   467                           ;doprnt.c: 542: continue;
   468  0008FA  D022               	goto	l1510
   469  0008FC                     l1498:
   470                           
   471                           ;doprnt.c: 543: }
   472                           ;doprnt.c: 548: flag = 0;
   473  0008FC  0E00               	movlw	0
   474  0008FE  6E14               	movwf	printf@flag,c
   475                           
   476                           ;doprnt.c: 635: switch(c = *f++) {
   477  000900  D00E               	goto	l1508
   478  000902                     l1500:
   479                           
   480                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   481  000902  C015  FFD9         	movff	printf@ap,fsr2l
   482  000906  C016  FFDA         	movff	printf@ap+1,fsr2h
   483  00090A  50DF               	movf	indf2,w,c
   484  00090C  6E17               	movwf	printf@c,c
   485  00090E  0E02               	movlw	2
   486  000910  2615               	addwf	printf@ap,f,c
   487  000912  0E00               	movlw	0
   488  000914  2216               	addwfc	printf@ap+1,f,c
   489  000916                     l1504:
   490                           
   491                           ;doprnt.c: 809: (putch(c) );
   492  000916  5017               	movf	printf@c,w,c
   493  000918  ECE4  F004         	call	_putch
   494                           
   495                           ;doprnt.c: 822: }
   496                           
   497                           ;doprnt.c: 810: continue;
   498  00091C  D011               	goto	l1510
   499  00091E                     l1508:
   500  00091E  C010  FFF6         	movff	printf@f,tblptrl
   501  000922  C011  FFF7         	movff	printf@f+1,tblptrh
   502  000926  4A10               	infsnz	printf@f,f,c
   503  000928  2A11               	incf	printf@f+1,f,c
   504  00092A                     	if	0	;tblptru may be non-zero
   505  00092A                     	endif
   506  00092A                     	if	0	;tblptru may be non-zero
   507  00092A                     	endif
   508  00092A  0008               	tblrd		*
   509  00092C  CFF5 F017          	movff	tablat,printf@c
   510  000930  5017               	movf	printf@c,w,c
   511                           
   512                           ; Switch size 1, requested type "space"
   513                           ; Number of cases is 2, Range of values is 0 to 99
   514                           ; switch strategies available:
   515                           ; Name         Instructions Cycles
   516                           ; simple_byte            7     4 (average)
   517                           ;	Chosen strategy is simple_byte
   518  000932  0A00               	xorlw	0	; case 0
   519  000934  B4D8               	btfsc	status,2,c
   520  000936  0012               	return	
   521  000938  0A63               	xorlw	99	; case 99
   522  00093A  B4D8               	btfsc	status,2,c
   523  00093C  D7E2               	goto	l1500
   524  00093E  D7EB               	goto	l1504
   525  000940                     l1510:
   526  000940  C010  FFF6         	movff	printf@f,tblptrl
   527  000944  C011  FFF7         	movff	printf@f+1,tblptrh
   528  000948  4A10               	infsnz	printf@f,f,c
   529  00094A  2A11               	incf	printf@f+1,f,c
   530  00094C                     	if	0	;tblptru may be non-zero
   531  00094C                     	endif
   532  00094C                     	if	0	;tblptru may be non-zero
   533  00094C                     	endif
   534  00094C  0008               	tblrd		*
   535  00094E  CFF5 F017          	movff	tablat,printf@c
   536  000952  5017               	movf	printf@c,w,c
   537  000954  B4D8               	btfsc	status,2,c
   538  000956  0012               	return	
   539  000958  D7C9               	goto	l1494
   540  00095A                     __end_of_printf:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           indf2	equ	0xFDF
   551                           fsr2h	equ	0xFDA
   552                           fsr2l	equ	0xFD9
   553                           status	equ	0xFD8
   554                           
   555 ;; *************** function _putch *****************
   556 ;; Defined at:
   557 ;;		line 87 in file "hd44780.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  c               1    wreg     unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  c               1   14[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   571 ;;      Params:         0       0       0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0
   574 ;;      Totals:         1       0       0       0       0       0       0
   575 ;;Total ram usage:        1 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    4
   578 ;; This function calls:
   579 ;;		_HD44780_CursorSet
   580 ;;		_HD44780_Data
   581 ;; This function is called by:
   582 ;;		_printf
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text2
   587  0009C8                     __ptext2:
   588                           	opt stack 0
   589  0009C8                     _putch:
   590                           	opt stack 25
   591                           
   592                           ;incstack = 0
   593                           ;putch@c stored from wreg
   594  0009C8  6E0F               	movwf	putch@c,c
   595                           
   596                           ;hd44780.c: 89: if (HD44780_Opts.currentX >= HD44780_Opts.Cols) {
   597  0009CA  501F               	movf	_HD44780_Opts+4,w,c
   598  0009CC  5C20               	subwf	_HD44780_Opts+5,w,c
   599  0009CE  A0D8               	btfss	status,0,c
   600  0009D0  D008               	goto	l1266
   601                           
   602                           ;hd44780.c: 90: HD44780_Opts.currentX = 0;
   603  0009D2  0E00               	movlw	0
   604  0009D4  6E20               	movwf	_HD44780_Opts+5,c
   605                           
   606                           ;hd44780.c: 91: HD44780_Opts.currentY++;
   607  0009D6  2A21               	incf	_HD44780_Opts+6,f,c
   608                           
   609                           ;hd44780.c: 92: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.currentY);
   610  0009D8  C021  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
   611  0009DC  5020               	movf	_HD44780_Opts+5,w,c
   612  0009DE  EC0B  F005         	call	_HD44780_CursorSet
   613  0009E2                     l1266:
   614                           
   615                           ;hd44780.c: 93: }
   616                           ;hd44780.c: 94: if (c == '\n') {
   617  0009E2  0E0A               	movlw	10
   618  0009E4  180F               	xorwf	putch@c,w,c
   619  0009E6  A4D8               	btfss	status,2,c
   620  0009E8  D007               	goto	l1272
   621                           
   622                           ;hd44780.c: 95: HD44780_Opts.currentY++;
   623  0009EA  2A21               	incf	_HD44780_Opts+6,f,c
   624                           
   625                           ;hd44780.c: 96: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.currentY);
   626  0009EC  C021  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
   627  0009F0  5020               	movf	_HD44780_Opts+5,w,c
   628  0009F2  EC0B  F005         	call	_HD44780_CursorSet
   629                           
   630                           ;hd44780.c: 97: } else if (c == '\r') {
   631  0009F6  0012               	return	
   632  0009F8                     l1272:
   633  0009F8  0E0D               	movlw	13
   634  0009FA  180F               	xorwf	putch@c,w,c
   635  0009FC  A4D8               	btfss	status,2,c
   636  0009FE  D006               	goto	l1276
   637                           
   638                           ;hd44780.c: 98: HD44780_CursorSet(0, HD44780_Opts.currentY);
   639  000A00  C021  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
   640  000A04  0E00               	movlw	0
   641  000A06  EC0B  F005         	call	_HD44780_CursorSet
   642                           
   643                           ;hd44780.c: 99: } else {
   644  000A0A  0012               	return	
   645  000A0C                     l1276:
   646                           
   647                           ;hd44780.c: 100: HD44780_Data(c);
   648  000A0C  500F               	movf	putch@c,w,c
   649  000A0E  EC91  F005         	call	_HD44780_Data
   650                           
   651                           ;hd44780.c: 101: HD44780_Opts.currentX++;
   652  000A12  2A20               	incf	_HD44780_Opts+5,f,c
   653  000A14  0012               	return	
   654  000A16                     __end_of_putch:
   655                           	opt stack 0
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           indf2	equ	0xFDF
   665                           fsr2h	equ	0xFDA
   666                           fsr2l	equ	0xFD9
   667                           status	equ	0xFD8
   668                           
   669 ;; *************** function _HD44780_Data *****************
   670 ;; Defined at:
   671 ;;		line 273 in file "hd44780.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  data            1    wreg     unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  data            1    7[COMRAM] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         0       0       0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0
   688 ;;      Totals:         1       0       0       0       0       0       0
   689 ;;Total ram usage:        1 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    2
   692 ;; This function calls:
   693 ;;		_HD44780_Cmd4bit
   694 ;; This function is called by:
   695 ;;		_putch
   696 ;;		_HD44780_Puts
   697 ;;		_HD44780_CreateChar
   698 ;;		_HD44780_PutCustom
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text3
   703  000B22                     __ptext3:
   704                           	opt stack 0
   705  000B22                     _HD44780_Data:
   706                           	opt stack 26
   707                           
   708                           ;incstack = 0
   709                           ;HD44780_Data@data stored from wreg
   710  000B22  6E08               	movwf	HD44780_Data@data,c
   711                           
   712                           ;hd44780.c: 275: PORTBbits.RB2 = 1;
   713  000B24  8481               	bsf	3969,2,c	;volatile
   714                           
   715                           ;hd44780.c: 278: HD44780_Cmd4bit(data >> 4);
   716  000B26  3808               	swapf	HD44780_Data@data,w,c
   717  000B28  0B0F               	andlw	15
   718  000B2A  ECF0  F003         	call	_HD44780_Cmd4bit
   719                           
   720                           ;hd44780.c: 280: HD44780_Cmd4bit(data & 0x0F);
   721  000B2E  5008               	movf	HD44780_Data@data,w,c
   722  000B30  0B0F               	andlw	15
   723  000B32  ECF0  F003         	call	_HD44780_Cmd4bit
   724  000B36  0012               	return		;funcret
   725  000B38                     __end_of_HD44780_Data:
   726                           	opt stack 0
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           indf2	equ	0xFDF
   736                           fsr2h	equ	0xFDA
   737                           fsr2l	equ	0xFD9
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _HD44780_CursorSet *****************
   741 ;; Defined at:
   742 ;;		line 246 in file "hd44780.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  col             1    wreg     unsigned char 
   745 ;;  row             1    8[COMRAM] unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  col             1   13[COMRAM] unsigned char 
   748 ;;  row_offsets     4    9[COMRAM] unsigned char [4]
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   758 ;;      Params:         1       0       0       0       0       0       0
   759 ;;      Locals:         5       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0
   761 ;;      Totals:         6       0       0       0       0       0       0
   762 ;;Total ram usage:        6 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		_HD44780_Cmd
   767 ;; This function is called by:
   768 ;;		_main
   769 ;;		_putch
   770 ;;		_HD44780_Puts
   771 ;;		_HD44780_PutCustom
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text4
   776  000A16                     __ptext4:
   777                           	opt stack 0
   778  000A16                     _HD44780_CursorSet:
   779                           	opt stack 25
   780                           
   781                           ;incstack = 0
   782                           ;HD44780_CursorSet@col stored from wreg
   783  000A16  6E0E               	movwf	HD44780_CursorSet@col,c
   784                           
   785                           ;hd44780.c: 247: char row_offsets[] = {0x00, 0x40, 0x14, 0x54};
   786  000A18  C022  F00A         	movff	HD44780_CursorSet@F4227,HD44780_CursorSet@row_offsets
   787  000A1C  C023  F00B         	movff	HD44780_CursorSet@F4227+1,HD44780_CursorSet@row_offsets+1
   788  000A20  C024  F00C         	movff	HD44780_CursorSet@F4227+2,HD44780_CursorSet@row_offsets+2
   789  000A24  C025  F00D         	movff	HD44780_CursorSet@F4227+3,HD44780_CursorSet@row_offsets+3
   790                           
   791                           ;hd44780.c: 250: if (row >= HD44780_Opts.Rows) {
   792  000A28  501E               	movf	_HD44780_Opts+3,w,c
   793  000A2A  5C09               	subwf	HD44780_CursorSet@row,w,c
   794  000A2C  A0D8               	btfss	status,0,c
   795  000A2E  D002               	goto	l1246
   796                           
   797                           ;hd44780.c: 251: row = 0;
   798  000A30  0E00               	movlw	0
   799  000A32  6E09               	movwf	HD44780_CursorSet@row,c
   800  000A34                     l1246:
   801                           
   802                           ;hd44780.c: 252: }
   803                           ;hd44780.c: 255: HD44780_Opts.currentX = col;
   804  000A34  C00E  F020         	movff	HD44780_CursorSet@col,_HD44780_Opts+5
   805                           
   806                           ;hd44780.c: 256: HD44780_Opts.currentY = row;
   807  000A38  C009  F021         	movff	HD44780_CursorSet@row,_HD44780_Opts+6
   808                           
   809                           ;hd44780.c: 259: HD44780_Cmd(0x80 | (col + row_offsets[row]));
   810  000A3C  5009               	movf	HD44780_CursorSet@row,w,c
   811  000A3E  0D01               	mullw	1
   812  000A40  0E0A               	movlw	low HD44780_CursorSet@row_offsets
   813  000A42  24F3               	addwf	prodl,w,c
   814  000A44  6ED9               	movwf	fsr2l,c
   815  000A46  0E00               	movlw	high HD44780_CursorSet@row_offsets
   816  000A48  20F4               	addwfc	prodh,w,c
   817  000A4A  6EDA               	movwf	fsr2h,c
   818  000A4C  50DF               	movf	indf2,w,c
   819  000A4E  240E               	addwf	HD44780_CursorSet@col,w,c
   820  000A50  0980               	iorlw	128
   821  000A52  EC9C  F005         	call	_HD44780_Cmd
   822  000A56  0012               	return		;funcret
   823  000A58                     __end_of_HD44780_CursorSet:
   824                           	opt stack 0
   825                           tblptru	equ	0xFF8
   826                           tblptrh	equ	0xFF7
   827                           tblptrl	equ	0xFF6
   828                           tablat	equ	0xFF5
   829                           prodh	equ	0xFF4
   830                           prodl	equ	0xFF3
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           postdec1	equ	0xFE5
   834                           fsr1l	equ	0xFE1
   835                           indf2	equ	0xFDF
   836                           fsr2h	equ	0xFDA
   837                           fsr2l	equ	0xFD9
   838                           status	equ	0xFD8
   839                           
   840 ;; *************** function _KEYPAD_Read *****************
   841 ;; Defined at:
   842 ;;		line 28 in file "keypad.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2    0[COMRAM] int 
   849 ;; Registers used:
   850 ;;		wreg, status,2
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   856 ;;      Params:         2       0       0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0
   859 ;;      Totals:         2       0       0       0       0       0       0
   860 ;;Total ram usage:        2 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;;		_KEYPAD_WaitUntilRelease
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text5
   871  000614                     __ptext5:
   872                           	opt stack 0
   873  000614                     _KEYPAD_Read:
   874                           	opt stack 30
   875                           
   876                           ;keypad.c: 32: PORTDbits.RD3=1; PORTDbits.RD2=0;
   877                           
   878                           ;incstack = 0
   879  000614  8683               	bsf	3971,3,c	;volatile
   880  000616  9483               	bcf	3971,2,c	;volatile
   881                           
   882                           ;keypad.c: 33: PORTDbits.RD1=0; PORTDbits.RD0=0;
   883  000618  9283               	bcf	3971,1,c	;volatile
   884  00061A  9083               	bcf	3971,0,c	;volatile
   885                           
   886                           ;keypad.c: 34: if(PORTDbits.RD7) return 1; if(PORTDbits.RD6) return 4;
   887  00061C  AE83               	btfss	3971,7,c	;volatile
   888  00061E  D005               	goto	l47
   889  000620  0E00               	movlw	0
   890  000622  6E02               	movwf	?_KEYPAD_Read+1,c
   891  000624  0E01               	movlw	1
   892  000626  6E01               	movwf	?_KEYPAD_Read,c
   893  000628  0012               	return	
   894  00062A                     l47:
   895  00062A  AC83               	btfss	3971,6,c	;volatile
   896  00062C  D005               	goto	l49
   897  00062E  0E00               	movlw	0
   898  000630  6E02               	movwf	?_KEYPAD_Read+1,c
   899  000632  0E04               	movlw	4
   900  000634  6E01               	movwf	?_KEYPAD_Read,c
   901  000636  0012               	return	
   902  000638                     l49:
   903                           
   904                           ;keypad.c: 35: if(PORTDbits.RD5) return 7; if(PORTDbits.RD4) return 14;
   905  000638  AA83               	btfss	3971,5,c	;volatile
   906  00063A  D005               	goto	l50
   907  00063C  0E00               	movlw	0
   908  00063E  6E02               	movwf	?_KEYPAD_Read+1,c
   909  000640  0E07               	movlw	7
   910  000642  6E01               	movwf	?_KEYPAD_Read,c
   911  000644  0012               	return	
   912  000646                     l50:
   913  000646  A883               	btfss	3971,4,c	;volatile
   914  000648  D005               	goto	l1356
   915  00064A  0E00               	movlw	0
   916  00064C  6E02               	movwf	?_KEYPAD_Read+1,c
   917  00064E  0E0E               	movlw	14
   918  000650  6E01               	movwf	?_KEYPAD_Read,c
   919  000652  0012               	return	
   920  000654                     l1356:
   921                           
   922                           ;keypad.c: 36: _delay((unsigned long)((10)*(8000000/4000000.0)));
   923  000654  0E06               	movlw	6
   924  000656                     u1007:
   925  000656  2EE8               	decfsz	wreg,f,c
   926  000658  D7FE               	goto	u1007
   927  00065A  D000               	nop2		;nop
   928                           
   929                           ;keypad.c: 38: PORTDbits.RD3=0; PORTDbits.RD2=1;
   930  00065C  9683               	bcf	3971,3,c	;volatile
   931  00065E  8483               	bsf	3971,2,c	;volatile
   932                           
   933                           ;keypad.c: 39: PORTDbits.RD1=0; PORTDbits.RD0=0;
   934  000660  9283               	bcf	3971,1,c	;volatile
   935  000662  9083               	bcf	3971,0,c	;volatile
   936                           
   937                           ;keypad.c: 40: if(PORTDbits.RD7) return 2; if(PORTDbits.RD6) return 5;
   938  000664  AE83               	btfss	3971,7,c	;volatile
   939  000666  D005               	goto	l52
   940  000668  0E00               	movlw	0
   941  00066A  6E02               	movwf	?_KEYPAD_Read+1,c
   942  00066C  0E02               	movlw	2
   943  00066E  6E01               	movwf	?_KEYPAD_Read,c
   944  000670  0012               	return	
   945  000672                     l52:
   946  000672  AC83               	btfss	3971,6,c	;volatile
   947  000674  D005               	goto	l53
   948  000676  0E00               	movlw	0
   949  000678  6E02               	movwf	?_KEYPAD_Read+1,c
   950  00067A  0E05               	movlw	5
   951  00067C  6E01               	movwf	?_KEYPAD_Read,c
   952  00067E  0012               	return	
   953  000680                     l53:
   954                           
   955                           ;keypad.c: 41: if(PORTDbits.RD5) return 8; if(PORTDbits.RD4) return 0;
   956  000680  AA83               	btfss	3971,5,c	;volatile
   957  000682  D005               	goto	l54
   958  000684  0E00               	movlw	0
   959  000686  6E02               	movwf	?_KEYPAD_Read+1,c
   960  000688  0E08               	movlw	8
   961  00068A  6E01               	movwf	?_KEYPAD_Read,c
   962  00068C  0012               	return	
   963  00068E                     l54:
   964  00068E  A883               	btfss	3971,4,c	;volatile
   965  000690  D005               	goto	l1384
   966  000692  0E00               	movlw	0
   967  000694  6E02               	movwf	?_KEYPAD_Read+1,c
   968  000696  0E00               	movlw	0
   969  000698  6E01               	movwf	?_KEYPAD_Read,c
   970  00069A  0012               	return	
   971  00069C                     l1384:
   972                           
   973                           ;keypad.c: 42: _delay((unsigned long)((10)*(8000000/4000000.0)));
   974  00069C  0E06               	movlw	6
   975  00069E                     u1017:
   976  00069E  2EE8               	decfsz	wreg,f,c
   977  0006A0  D7FE               	goto	u1017
   978  0006A2  D000               	nop2		;nop
   979                           
   980                           ;keypad.c: 44: PORTDbits.RD3=0; PORTDbits.RD2=0;
   981  0006A4  9683               	bcf	3971,3,c	;volatile
   982  0006A6  9483               	bcf	3971,2,c	;volatile
   983                           
   984                           ;keypad.c: 45: PORTDbits.RD1=1; PORTDbits.RD0=0;
   985  0006A8  8283               	bsf	3971,1,c	;volatile
   986  0006AA  9083               	bcf	3971,0,c	;volatile
   987                           
   988                           ;keypad.c: 46: if(PORTDbits.RD7) return 3; if(PORTDbits.RD6) return 6;
   989  0006AC  AE83               	btfss	3971,7,c	;volatile
   990  0006AE  D005               	goto	l56
   991  0006B0  0E00               	movlw	0
   992  0006B2  6E02               	movwf	?_KEYPAD_Read+1,c
   993  0006B4  0E03               	movlw	3
   994  0006B6  6E01               	movwf	?_KEYPAD_Read,c
   995  0006B8  0012               	return	
   996  0006BA                     l56:
   997  0006BA  AC83               	btfss	3971,6,c	;volatile
   998  0006BC  D005               	goto	l57
   999  0006BE  0E00               	movlw	0
  1000  0006C0  6E02               	movwf	?_KEYPAD_Read+1,c
  1001  0006C2  0E06               	movlw	6
  1002  0006C4  6E01               	movwf	?_KEYPAD_Read,c
  1003  0006C6  0012               	return	
  1004  0006C8                     l57:
  1005                           
  1006                           ;keypad.c: 47: if(PORTDbits.RD5) return 9; if(PORTDbits.RD4) return 15;
  1007  0006C8  AA83               	btfss	3971,5,c	;volatile
  1008  0006CA  D005               	goto	l58
  1009  0006CC  0E00               	movlw	0
  1010  0006CE  6E02               	movwf	?_KEYPAD_Read+1,c
  1011  0006D0  0E09               	movlw	9
  1012  0006D2  6E01               	movwf	?_KEYPAD_Read,c
  1013  0006D4  0012               	return	
  1014  0006D6                     l58:
  1015  0006D6  A883               	btfss	3971,4,c	;volatile
  1016  0006D8  D005               	goto	l1412
  1017  0006DA  0E00               	movlw	0
  1018  0006DC  6E02               	movwf	?_KEYPAD_Read+1,c
  1019  0006DE  0E0F               	movlw	15
  1020  0006E0  6E01               	movwf	?_KEYPAD_Read,c
  1021  0006E2  0012               	return	
  1022  0006E4                     l1412:
  1023                           
  1024                           ;keypad.c: 48: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1025  0006E4  0E06               	movlw	6
  1026  0006E6                     u1027:
  1027  0006E6  2EE8               	decfsz	wreg,f,c
  1028  0006E8  D7FE               	goto	u1027
  1029  0006EA  D000               	nop2		;nop
  1030                           
  1031                           ;keypad.c: 50: PORTDbits.RD3=0; PORTDbits.RD2=0;
  1032  0006EC  9683               	bcf	3971,3,c	;volatile
  1033  0006EE  9483               	bcf	3971,2,c	;volatile
  1034                           
  1035                           ;keypad.c: 51: PORTDbits.RD1=0; PORTDbits.RD0=1;
  1036  0006F0  9283               	bcf	3971,1,c	;volatile
  1037  0006F2  8083               	bsf	3971,0,c	;volatile
  1038                           
  1039                           ;keypad.c: 52: if(PORTDbits.RD7) return 10; if(PORTDbits.RD6) return 11;
  1040  0006F4  AE83               	btfss	3971,7,c	;volatile
  1041  0006F6  D005               	goto	l60
  1042  0006F8  0E00               	movlw	0
  1043  0006FA  6E02               	movwf	?_KEYPAD_Read+1,c
  1044  0006FC  0E0A               	movlw	10
  1045  0006FE  6E01               	movwf	?_KEYPAD_Read,c
  1046  000700  0012               	return	
  1047  000702                     l60:
  1048  000702  AC83               	btfss	3971,6,c	;volatile
  1049  000704  D005               	goto	l61
  1050  000706  0E00               	movlw	0
  1051  000708  6E02               	movwf	?_KEYPAD_Read+1,c
  1052  00070A  0E0B               	movlw	11
  1053  00070C  6E01               	movwf	?_KEYPAD_Read,c
  1054  00070E  0012               	return	
  1055  000710                     l61:
  1056                           
  1057                           ;keypad.c: 53: if(PORTDbits.RD5) return 12; if(PORTDbits.RD4) return 13;
  1058  000710  AA83               	btfss	3971,5,c	;volatile
  1059  000712  D005               	goto	l62
  1060  000714  0E00               	movlw	0
  1061  000716  6E02               	movwf	?_KEYPAD_Read+1,c
  1062  000718  0E0C               	movlw	12
  1063  00071A  6E01               	movwf	?_KEYPAD_Read,c
  1064  00071C  0012               	return	
  1065  00071E                     l62:
  1066  00071E  A883               	btfss	3971,4,c	;volatile
  1067  000720  D005               	goto	l1440
  1068  000722  0E00               	movlw	0
  1069  000724  6E02               	movwf	?_KEYPAD_Read+1,c
  1070  000726  0E0D               	movlw	13
  1071  000728  6E01               	movwf	?_KEYPAD_Read,c
  1072  00072A  0012               	return	
  1073  00072C                     l1440:
  1074                           
  1075                           ;keypad.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1076  00072C  0E06               	movlw	6
  1077  00072E                     u1037:
  1078  00072E  2EE8               	decfsz	wreg,f,c
  1079  000730  D7FE               	goto	u1037
  1080  000732  D000               	nop2		;nop
  1081                           
  1082                           ;keypad.c: 56: return 0xFF;
  1083  000734  0E00               	movlw	0
  1084  000736  6E02               	movwf	?_KEYPAD_Read+1,c
  1085  000738  6801               	setf	?_KEYPAD_Read,c
  1086  00073A  0012               	return	
  1087  00073C                     __end_of_KEYPAD_Read:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           prodh	equ	0xFF4
  1094                           prodl	equ	0xFF3
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           fsr1l	equ	0xFE1
  1099                           indf2	equ	0xFDF
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _KEYPAD_KeytoASCII *****************
  1105 ;; Defined at:
  1106 ;;		line 59 in file "keypad.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  KeyNumber       2    0[COMRAM] int 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      unsigned char 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1120 ;;      Params:         2       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0
  1123 ;;      Totals:         2       0       0       0       0       0       0
  1124 ;;Total ram usage:        2 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text6
  1134  00095A                     __ptext6:
  1135                           	opt stack 0
  1136  00095A                     _KEYPAD_KeytoASCII:
  1137                           	opt stack 30
  1138                           
  1139                           ;keypad.c: 62: if (KeyNumber < 10) return KeyNumber + 0x30;
  1140                           
  1141                           ;incstack = 0
  1142  00095A  BE02               	btfsc	KEYPAD_KeytoASCII@KeyNumber+1,7,c
  1143  00095C  D006               	goto	l1448
  1144  00095E  5002               	movf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1145  000960  E107               	bnz	l1452
  1146  000962  0E0A               	movlw	10
  1147  000964  5C01               	subwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1148  000966  B0D8               	btfsc	status,0,c
  1149  000968  D003               	goto	l1452
  1150  00096A                     l1448:
  1151  00096A  5001               	movf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1152  00096C  0F30               	addlw	48
  1153  00096E  0012               	return	
  1154  000970                     l1452:
  1155                           
  1156                           ;keypad.c: 64: if (KeyNumber == 10) return 'A';
  1157  000970  0E0A               	movlw	10
  1158  000972  1801               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1159  000974  1002               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1160  000976  A4D8               	btfss	status,2,c
  1161  000978  D002               	goto	l1458
  1162  00097A  0E41               	movlw	65
  1163  00097C  0012               	return	
  1164  00097E                     l1458:
  1165                           
  1166                           ;keypad.c: 65: if (KeyNumber == 11) return 'B';
  1167  00097E  0E0B               	movlw	11
  1168  000980  1801               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1169  000982  1002               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1170  000984  A4D8               	btfss	status,2,c
  1171  000986  D002               	goto	l1464
  1172  000988  0E42               	movlw	66
  1173  00098A  0012               	return	
  1174  00098C                     l1464:
  1175                           
  1176                           ;keypad.c: 66: if (KeyNumber == 12) return 'C';
  1177  00098C  0E0C               	movlw	12
  1178  00098E  1801               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1179  000990  1002               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1180  000992  A4D8               	btfss	status,2,c
  1181  000994  D002               	goto	l1470
  1182  000996  0E43               	movlw	67
  1183  000998  0012               	return	
  1184  00099A                     l1470:
  1185                           
  1186                           ;keypad.c: 67: if (KeyNumber == 13) return 'D';
  1187  00099A  0E0D               	movlw	13
  1188  00099C  1801               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1189  00099E  1002               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1190  0009A0  A4D8               	btfss	status,2,c
  1191  0009A2  D002               	goto	l1476
  1192  0009A4  0E44               	movlw	68
  1193  0009A6  0012               	return	
  1194  0009A8                     l1476:
  1195                           
  1196                           ;keypad.c: 68: if (KeyNumber == 14) return '*';
  1197  0009A8  0E0E               	movlw	14
  1198  0009AA  1801               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1199  0009AC  1002               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1200  0009AE  A4D8               	btfss	status,2,c
  1201  0009B0  D002               	goto	l1482
  1202  0009B2  0E2A               	movlw	42
  1203  0009B4  0012               	return	
  1204  0009B6                     l1482:
  1205                           
  1206                           ;keypad.c: 69: if (KeyNumber == 15) return '#';
  1207  0009B6  0E0F               	movlw	15
  1208  0009B8  1801               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  1209  0009BA  1002               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  1210  0009BC  A4D8               	btfss	status,2,c
  1211  0009BE  D002               	goto	l1488
  1212  0009C0  0E23               	movlw	35
  1213  0009C2  0012               	return	
  1214  0009C4                     l1488:
  1215                           
  1216                           ;keypad.c: 70: return 0;
  1217  0009C4  0E00               	movlw	0
  1218  0009C6  0012               	return	
  1219  0009C8                     __end_of_KEYPAD_KeytoASCII:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           prodh	equ	0xFF4
  1226                           prodl	equ	0xFF3
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           indf2	equ	0xFDF
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function _KEYPAD_Init *****************
  1237 ;; Defined at:
  1238 ;;		line 5 in file "keypad.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		None
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1252 ;;      Params:         0       0       0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0
  1255 ;;      Totals:         0       0       0       0       0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text7
  1266  000AE6                     __ptext7:
  1267                           	opt stack 0
  1268  000AE6                     _KEYPAD_Init:
  1269                           	opt stack 30
  1270                           
  1271                           ;keypad.c: 8: TRISDbits.RD7 = 1;
  1272                           
  1273                           ;incstack = 0
  1274  000AE6  8E95               	bsf	3989,7,c	;volatile
  1275                           
  1276                           ;keypad.c: 9: TRISDbits.RD6 = 1;
  1277  000AE8  8C95               	bsf	3989,6,c	;volatile
  1278                           
  1279                           ;keypad.c: 10: TRISDbits.RD5 = 1;
  1280  000AEA  8A95               	bsf	3989,5,c	;volatile
  1281                           
  1282                           ;keypad.c: 11: TRISDbits.RD4 = 1;
  1283  000AEC  8895               	bsf	3989,4,c	;volatile
  1284                           
  1285                           ;keypad.c: 13: TRISDbits.RD3 = 0;
  1286  000AEE  9695               	bcf	3989,3,c	;volatile
  1287                           
  1288                           ;keypad.c: 14: TRISDbits.RD2 = 0;
  1289  000AF0  9495               	bcf	3989,2,c	;volatile
  1290                           
  1291                           ;keypad.c: 15: TRISDbits.RD1 = 0;
  1292  000AF2  9295               	bcf	3989,1,c	;volatile
  1293                           
  1294                           ;keypad.c: 16: TRISDbits.RD0 = 0;
  1295  000AF4  9095               	bcf	3989,0,c	;volatile
  1296                           
  1297                           ;keypad.c: 18: PORTDbits.RD7 = 0;
  1298  000AF6  9E83               	bcf	3971,7,c	;volatile
  1299                           
  1300                           ;keypad.c: 19: PORTDbits.RD6 = 0;
  1301  000AF8  9C83               	bcf	3971,6,c	;volatile
  1302                           
  1303                           ;keypad.c: 20: PORTDbits.RD5 = 0;
  1304  000AFA  9A83               	bcf	3971,5,c	;volatile
  1305                           
  1306                           ;keypad.c: 21: PORTDbits.RD4 = 0;
  1307  000AFC  9883               	bcf	3971,4,c	;volatile
  1308                           
  1309                           ;keypad.c: 22: PORTDbits.RD3 = 0;
  1310  000AFE  9683               	bcf	3971,3,c	;volatile
  1311                           
  1312                           ;keypad.c: 23: PORTDbits.RD2 = 0;
  1313  000B00  9483               	bcf	3971,2,c	;volatile
  1314                           
  1315                           ;keypad.c: 24: PORTDbits.RD1 = 0;
  1316  000B02  9283               	bcf	3971,1,c	;volatile
  1317                           
  1318                           ;keypad.c: 25: PORTDbits.RD0 = 0;
  1319  000B04  9083               	bcf	3971,0,c	;volatile
  1320  000B06  0012               	return		;funcret
  1321  000B08                     __end_of_KEYPAD_Init:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           prodh	equ	0xFF4
  1328                           prodl	equ	0xFF3
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           postdec1	equ	0xFE5
  1332                           fsr1l	equ	0xFE1
  1333                           indf2	equ	0xFDF
  1334                           fsr2h	equ	0xFDA
  1335                           fsr2l	equ	0xFD9
  1336                           status	equ	0xFD8
  1337                           
  1338 ;; *************** function _HD44780_Init *****************
  1339 ;; Defined at:
  1340 ;;		line 111 in file "hd44780.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  cols            1    wreg     unsigned char 
  1343 ;;  rows            1    8[COMRAM] unsigned char 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  cols            1    9[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1355 ;;      Params:         1       0       0       0       0       0       0
  1356 ;;      Locals:         1       0       0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0
  1358 ;;      Totals:         2       0       0       0       0       0       0
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    4
  1362 ;; This function calls:
  1363 ;;		_HD44780_Clear
  1364 ;;		_HD44780_Cmd
  1365 ;;		_HD44780_Cmd4bit
  1366 ;;		_HD44780_Delay
  1367 ;;		_HD44780_DisplayOn
  1368 ;;		_HD44780_InitPins
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text8
  1375  00073C                     __ptext8:
  1376                           	opt stack 0
  1377  00073C                     _HD44780_Init:
  1378                           	opt stack 26
  1379                           
  1380                           ;incstack = 0
  1381                           ;HD44780_Init@cols stored from wreg
  1382  00073C  6E0A               	movwf	HD44780_Init@cols,c
  1383                           
  1384                           ;hd44780.c: 114: HD44780_InitPins();
  1385  00073E  EC84  F005         	call	_HD44780_InitPins	;wreg free
  1386                           
  1387                           ;hd44780.c: 117: HD44780_Delay(45000);
  1388  000742  0EAF               	movlw	175
  1389  000744  6E02               	movwf	HD44780_Delay@us+1,c
  1390  000746  0EC8               	movlw	200
  1391  000748  6E01               	movwf	HD44780_Delay@us,c
  1392  00074A  EC60  F005         	call	_HD44780_Delay	;wreg free
  1393                           
  1394                           ;hd44780.c: 120: HD44780_Opts.Rows = rows;
  1395  00074E  C009  F01E         	movff	HD44780_Init@rows,_HD44780_Opts+3
  1396                           
  1397                           ;hd44780.c: 121: HD44780_Opts.Cols = cols;
  1398  000752  C00A  F01F         	movff	HD44780_Init@cols,_HD44780_Opts+4
  1399                           
  1400                           ;hd44780.c: 124: HD44780_Opts.currentX = 0;
  1401  000756  0E00               	movlw	0
  1402  000758  6E20               	movwf	_HD44780_Opts+5,c
  1403                           
  1404                           ;hd44780.c: 125: HD44780_Opts.currentY = 0;
  1405  00075A  0E00               	movlw	0
  1406  00075C  6E21               	movwf	_HD44780_Opts+6,c
  1407                           
  1408                           ;hd44780.c: 127: HD44780_Opts.DisplayFunction = 0x00 | 0x00 | 0x00;
  1409  00075E  0E00               	movlw	0
  1410  000760  6E1C               	movwf	_HD44780_Opts+1,c
  1411                           
  1412                           ;hd44780.c: 128: if (rows > 1) {
  1413  000762  0E01               	movlw	1
  1414  000764  6409               	cpfsgt	HD44780_Init@rows,c
  1415  000766  D001               	goto	l1308
  1416                           
  1417                           ;hd44780.c: 129: HD44780_Opts.DisplayFunction |= 0x08;
  1418  000768  861C               	bsf	_HD44780_Opts+1,3,c
  1419  00076A                     l1308:
  1420                           
  1421                           ;hd44780.c: 130: }
  1422                           ;hd44780.c: 133: HD44780_Cmd4bit(0x03);
  1423  00076A  0E03               	movlw	3
  1424  00076C  ECF0  F003         	call	_HD44780_Cmd4bit
  1425                           
  1426                           ;hd44780.c: 134: HD44780_Delay(4500);
  1427  000770  0E11               	movlw	17
  1428  000772  6E02               	movwf	HD44780_Delay@us+1,c
  1429  000774  0E94               	movlw	148
  1430  000776  6E01               	movwf	HD44780_Delay@us,c
  1431  000778  EC60  F005         	call	_HD44780_Delay	;wreg free
  1432                           
  1433                           ;hd44780.c: 137: HD44780_Cmd4bit(0x03);
  1434  00077C  0E03               	movlw	3
  1435  00077E  ECF0  F003         	call	_HD44780_Cmd4bit
  1436                           
  1437                           ;hd44780.c: 138: HD44780_Delay(4500);
  1438  000782  0E11               	movlw	17
  1439  000784  6E02               	movwf	HD44780_Delay@us+1,c
  1440  000786  0E94               	movlw	148
  1441  000788  6E01               	movwf	HD44780_Delay@us,c
  1442  00078A  EC60  F005         	call	_HD44780_Delay	;wreg free
  1443                           
  1444                           ;hd44780.c: 141: HD44780_Cmd4bit(0x03);
  1445  00078E  0E03               	movlw	3
  1446  000790  ECF0  F003         	call	_HD44780_Cmd4bit
  1447                           
  1448                           ;hd44780.c: 142: HD44780_Delay(4500);
  1449  000794  0E11               	movlw	17
  1450  000796  6E02               	movwf	HD44780_Delay@us+1,c
  1451  000798  0E94               	movlw	148
  1452  00079A  6E01               	movwf	HD44780_Delay@us,c
  1453  00079C  EC60  F005         	call	_HD44780_Delay	;wreg free
  1454                           
  1455                           ;hd44780.c: 145: HD44780_Cmd4bit(0x02);
  1456  0007A0  0E02               	movlw	2
  1457  0007A2  ECF0  F003         	call	_HD44780_Cmd4bit
  1458                           
  1459                           ;hd44780.c: 146: HD44780_Delay(100);
  1460  0007A6  0E00               	movlw	0
  1461  0007A8  6E02               	movwf	HD44780_Delay@us+1,c
  1462  0007AA  0E64               	movlw	100
  1463  0007AC  6E01               	movwf	HD44780_Delay@us,c
  1464  0007AE  EC60  F005         	call	_HD44780_Delay	;wreg free
  1465                           
  1466                           ;hd44780.c: 149: HD44780_Cmd(0x20 | HD44780_Opts.DisplayFunction);
  1467  0007B2  501C               	movf	_HD44780_Opts+1,w,c
  1468  0007B4  0920               	iorlw	32
  1469  0007B6  EC9C  F005         	call	_HD44780_Cmd
  1470                           
  1471                           ;hd44780.c: 152: HD44780_Opts.DisplayControl = 0x04;
  1472  0007BA  0E04               	movlw	4
  1473  0007BC  6E1B               	movwf	_HD44780_Opts,c
  1474                           
  1475                           ;hd44780.c: 153: HD44780_DisplayOn();
  1476  0007BE  ECB1  F005         	call	_HD44780_DisplayOn	;wreg free
  1477                           
  1478                           ;hd44780.c: 156: HD44780_Clear();
  1479  0007C2  ECA7  F005         	call	_HD44780_Clear	;wreg free
  1480                           
  1481                           ;hd44780.c: 159: HD44780_Opts.DisplayMode = 0x02 | 0x00;
  1482  0007C6  0E02               	movlw	2
  1483  0007C8  6E1D               	movwf	_HD44780_Opts+2,c
  1484                           
  1485                           ;hd44780.c: 160: HD44780_Cmd(0x04 | HD44780_Opts.DisplayMode);
  1486  0007CA  501D               	movf	_HD44780_Opts+2,w,c
  1487  0007CC  0904               	iorlw	4
  1488  0007CE  EC9C  F005         	call	_HD44780_Cmd
  1489                           
  1490                           ;hd44780.c: 163: HD44780_Delay(4500);
  1491  0007D2  0E11               	movlw	17
  1492  0007D4  6E02               	movwf	HD44780_Delay@us+1,c
  1493  0007D6  0E94               	movlw	148
  1494  0007D8  6E01               	movwf	HD44780_Delay@us,c
  1495  0007DA  EC60  F005         	call	_HD44780_Delay	;wreg free
  1496  0007DE  0012               	return		;funcret
  1497  0007E0                     __end_of_HD44780_Init:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           postdec1	equ	0xFE5
  1508                           fsr1l	equ	0xFE1
  1509                           indf2	equ	0xFDF
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _HD44780_InitPins *****************
  1515 ;; Defined at:
  1516 ;;		line 292 in file "hd44780.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		None
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1530 ;;      Params:         0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_HD44780_Init
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text9
  1544  000B08                     __ptext9:
  1545                           	opt stack 0
  1546  000B08                     _HD44780_InitPins:
  1547                           	opt stack 29
  1548                           
  1549                           ;hd44780.c: 294: TRISBbits.RB2 = 0;
  1550                           
  1551                           ;incstack = 0
  1552  000B08  9493               	bcf	3987,2,c	;volatile
  1553                           
  1554                           ;hd44780.c: 295: TRISBbits.RB3 = 0;
  1555  000B0A  9693               	bcf	3987,3,c	;volatile
  1556                           
  1557                           ;hd44780.c: 296: TRISBbits.RB4 = 0;
  1558  000B0C  9893               	bcf	3987,4,c	;volatile
  1559                           
  1560                           ;hd44780.c: 297: TRISBbits.RB5 = 0;
  1561  000B0E  9A93               	bcf	3987,5,c	;volatile
  1562                           
  1563                           ;hd44780.c: 298: TRISBbits.RB6 = 0;
  1564  000B10  9C93               	bcf	3987,6,c	;volatile
  1565                           
  1566                           ;hd44780.c: 299: TRISBbits.RB7 = 0;
  1567  000B12  9E93               	bcf	3987,7,c	;volatile
  1568                           
  1569                           ;hd44780.c: 302: PORTBbits.RB2 = 0;
  1570  000B14  9481               	bcf	3969,2,c	;volatile
  1571                           
  1572                           ;hd44780.c: 303: PORTBbits.RB3 = 0;
  1573  000B16  9681               	bcf	3969,3,c	;volatile
  1574                           
  1575                           ;hd44780.c: 304: PORTBbits.RB4 = 0;
  1576  000B18  9881               	bcf	3969,4,c	;volatile
  1577                           
  1578                           ;hd44780.c: 305: PORTBbits.RB5 = 0;
  1579  000B1A  9A81               	bcf	3969,5,c	;volatile
  1580                           
  1581                           ;hd44780.c: 306: PORTBbits.RB6 = 0;
  1582  000B1C  9C81               	bcf	3969,6,c	;volatile
  1583                           
  1584                           ;hd44780.c: 307: PORTBbits.RB7 = 0;
  1585  000B1E  9E81               	bcf	3969,7,c	;volatile
  1586  000B20  0012               	return		;funcret
  1587  000B22                     __end_of_HD44780_InitPins:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           indf2	equ	0xFDF
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _HD44780_DisplayOn *****************
  1605 ;; Defined at:
  1606 ;;		line 192 in file "hd44780.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1620 ;;      Params:         0       0       0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    3
  1627 ;; This function calls:
  1628 ;;		_HD44780_Cmd
  1629 ;; This function is called by:
  1630 ;;		_HD44780_Init
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text10
  1635  000B62                     __ptext10:
  1636                           	opt stack 0
  1637  000B62                     _HD44780_DisplayOn:
  1638                           	opt stack 26
  1639                           
  1640                           ;hd44780.c: 193: HD44780_Opts.DisplayControl |= 0x04;
  1641                           
  1642                           ;incstack = 0
  1643  000B62  841B               	bsf	_HD44780_Opts,2,c
  1644                           
  1645                           ;hd44780.c: 194: HD44780_Cmd(0x08 | HD44780_Opts.DisplayControl);
  1646  000B64  501B               	movf	_HD44780_Opts,w,c
  1647  000B66  0908               	iorlw	8
  1648  000B68  EC9C  F005         	call	_HD44780_Cmd
  1649  000B6C  0012               	return		;funcret
  1650  000B6E                     __end_of_HD44780_DisplayOn:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           prodh	equ	0xFF4
  1657                           prodl	equ	0xFF3
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           postdec1	equ	0xFE5
  1661                           fsr1l	equ	0xFE1
  1662                           indf2	equ	0xFDF
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _HD44780_Clear *****************
  1668 ;; Defined at:
  1669 ;;		line 166 in file "hd44780.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1683 ;;      Params:         0       0       0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		_HD44780_Cmd
  1692 ;;		_HD44780_Delay
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;;		_HD44780_Init
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text11
  1700  000B4E                     __ptext11:
  1701                           	opt stack 0
  1702  000B4E                     _HD44780_Clear:
  1703                           	opt stack 26
  1704                           
  1705                           ;hd44780.c: 167: HD44780_Cmd(0x01);
  1706                           
  1707                           ;incstack = 0
  1708  000B4E  0E01               	movlw	1
  1709  000B50  EC9C  F005         	call	_HD44780_Cmd
  1710                           
  1711                           ;hd44780.c: 168: HD44780_Delay(3000);
  1712  000B54  0E0B               	movlw	11
  1713  000B56  6E02               	movwf	HD44780_Delay@us+1,c
  1714  000B58  0EB8               	movlw	184
  1715  000B5A  6E01               	movwf	HD44780_Delay@us,c
  1716  000B5C  EC60  F005         	call	_HD44780_Delay	;wreg free
  1717  000B60  0012               	return		;funcret
  1718  000B62                     __end_of_HD44780_Clear:
  1719                           	opt stack 0
  1720                           tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           prodh	equ	0xFF4
  1725                           prodl	equ	0xFF3
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           indf2	equ	0xFDF
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _HD44780_Cmd *****************
  1736 ;; Defined at:
  1737 ;;		line 263 in file "hd44780.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  cmd             1    wreg     unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  cmd             1    7[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1751 ;;      Params:         0       0       0       0       0       0       0
  1752 ;;      Locals:         1       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0
  1754 ;;      Totals:         1       0       0       0       0       0       0
  1755 ;;Total ram usage:        1 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    2
  1758 ;; This function calls:
  1759 ;;		_HD44780_Cmd4bit
  1760 ;; This function is called by:
  1761 ;;		_HD44780_Init
  1762 ;;		_HD44780_Clear
  1763 ;;		_HD44780_DisplayOn
  1764 ;;		_HD44780_CursorSet
  1765 ;;		_HD44780_DisplayOff
  1766 ;;		_HD44780_BlinkOn
  1767 ;;		_HD44780_BlinkOff
  1768 ;;		_HD44780_CursorOn
  1769 ;;		_HD44780_CursorOff
  1770 ;;		_HD44780_ScrollLeft
  1771 ;;		_HD44780_ScrollRight
  1772 ;;		_HD44780_CreateChar
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text12
  1777  000B38                     __ptext12:
  1778                           	opt stack 0
  1779  000B38                     _HD44780_Cmd:
  1780                           	opt stack 25
  1781                           
  1782                           ;incstack = 0
  1783                           ;HD44780_Cmd@cmd stored from wreg
  1784  000B38  6E08               	movwf	HD44780_Cmd@cmd,c
  1785                           
  1786                           ;hd44780.c: 265: PORTBbits.RB2 = 0;
  1787  000B3A  9481               	bcf	3969,2,c	;volatile
  1788                           
  1789                           ;hd44780.c: 268: HD44780_Cmd4bit(cmd >> 4);
  1790  000B3C  3808               	swapf	HD44780_Cmd@cmd,w,c
  1791  000B3E  0B0F               	andlw	15
  1792  000B40  ECF0  F003         	call	_HD44780_Cmd4bit
  1793                           
  1794                           ;hd44780.c: 270: HD44780_Cmd4bit(cmd & 0x0F);
  1795  000B44  5008               	movf	HD44780_Cmd@cmd,w,c
  1796  000B46  0B0F               	andlw	15
  1797  000B48  ECF0  F003         	call	_HD44780_Cmd4bit
  1798  000B4C  0012               	return		;funcret
  1799  000B4E                     __end_of_HD44780_Cmd:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           postdec1	equ	0xFE5
  1810                           fsr1l	equ	0xFE1
  1811                           indf2	equ	0xFDF
  1812                           fsr2h	equ	0xFDA
  1813                           fsr2l	equ	0xFD9
  1814                           status	equ	0xFD8
  1815                           
  1816 ;; *************** function _HD44780_Cmd4bit *****************
  1817 ;; Defined at:
  1818 ;;		line 283 in file "hd44780.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  cmd             1    wreg     unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  cmd             1    6[COMRAM] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1832 ;;      Params:         0       0       0       0       0       0       0
  1833 ;;      Locals:         1       0       0       0       0       0       0
  1834 ;;      Temps:          1       0       0       0       0       0       0
  1835 ;;      Totals:         2       0       0       0       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    1
  1839 ;; This function calls:
  1840 ;;		_HD44780_Delay
  1841 ;; This function is called by:
  1842 ;;		_HD44780_Init
  1843 ;;		_HD44780_Cmd
  1844 ;;		_HD44780_Data
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text13
  1849  0007E0                     __ptext13:
  1850                           	opt stack 0
  1851  0007E0                     _HD44780_Cmd4bit:
  1852                           	opt stack 26
  1853                           
  1854                           ;incstack = 0
  1855                           ;HD44780_Cmd4bit@cmd stored from wreg
  1856  0007E0  6E07               	movwf	HD44780_Cmd4bit@cmd,c
  1857                           
  1858                           ;hd44780.c: 285: PORTBbits.RB7 = (cmd & 0x08) ? 1 : 0;
  1859  0007E2  A607               	btfss	HD44780_Cmd4bit@cmd,3,c
  1860  0007E4  D003               	goto	u520
  1861  0007E6  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1862  0007E8  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  1863  0007EA  D001               	goto	u538
  1864  0007EC                     u520:
  1865  0007EC  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1866  0007EE                     u538:
  1867  0007EE  3206               	rrcf	??_HD44780_Cmd4bit,f,c
  1868  0007F0  3206               	rrcf	??_HD44780_Cmd4bit,f,c
  1869  0007F2  5081               	movf	3969,w,c	;volatile
  1870  0007F4  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1871  0007F6  0B7F               	andlw	-129
  1872  0007F8  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1873  0007FA  6E81               	movwf	3969,c	;volatile
  1874                           
  1875                           ;hd44780.c: 286: PORTBbits.RB6 = (cmd & 0x04) ? 1 : 0;
  1876  0007FC  A407               	btfss	HD44780_Cmd4bit@cmd,2,c
  1877  0007FE  D003               	goto	u540
  1878  000800  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1879  000802  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  1880  000804  D001               	goto	u558
  1881  000806                     u540:
  1882  000806  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1883  000808                     u558:
  1884  000808  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  1885  00080A  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  1886  00080C  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  1887  00080E  5081               	movf	3969,w,c	;volatile
  1888  000810  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1889  000812  0BBF               	andlw	-65
  1890  000814  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1891  000816  6E81               	movwf	3969,c	;volatile
  1892                           
  1893                           ;hd44780.c: 287: PORTBbits.RB5 = (cmd & 0x02) ? 1 : 0;
  1894  000818  A207               	btfss	HD44780_Cmd4bit@cmd,1,c
  1895  00081A  D003               	goto	u560
  1896  00081C  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1897  00081E  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  1898  000820  D001               	goto	u578
  1899  000822                     u560:
  1900  000822  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1901  000824                     u578:
  1902  000824  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  1903  000826  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  1904  000828  5081               	movf	3969,w,c	;volatile
  1905  00082A  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1906  00082C  0BDF               	andlw	-33
  1907  00082E  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1908  000830  6E81               	movwf	3969,c	;volatile
  1909                           
  1910                           ;hd44780.c: 288: PORTBbits.RB4 = (cmd & 0x01) ? 1 : 0;
  1911  000832  A007               	btfss	HD44780_Cmd4bit@cmd,0,c
  1912  000834  D003               	goto	u580
  1913  000836  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1914  000838  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  1915  00083A  D001               	goto	u598
  1916  00083C                     u580:
  1917  00083C  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  1918  00083E                     u598:
  1919  00083E  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  1920  000840  5081               	movf	3969,w,c	;volatile
  1921  000842  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1922  000844  0BEF               	andlw	-17
  1923  000846  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  1924  000848  6E81               	movwf	3969,c	;volatile
  1925                           
  1926                           ;hd44780.c: 289: PORTBbits.RB3 = 1; HD44780_Delay(20); PORTBbits.RB3 = 0; HD44780_Delay(
      +                          20);
  1927  00084A  8681               	bsf	3969,3,c	;volatile
  1928  00084C  0E00               	movlw	0
  1929  00084E  6E02               	movwf	HD44780_Delay@us+1,c
  1930  000850  0E14               	movlw	20
  1931  000852  6E01               	movwf	HD44780_Delay@us,c
  1932  000854  EC60  F005         	call	_HD44780_Delay	;wreg free
  1933  000858  9681               	bcf	3969,3,c	;volatile
  1934  00085A  0E00               	movlw	0
  1935  00085C  6E02               	movwf	HD44780_Delay@us+1,c
  1936  00085E  0E14               	movlw	20
  1937  000860  6E01               	movwf	HD44780_Delay@us,c
  1938  000862  EC60  F005         	call	_HD44780_Delay	;wreg free
  1939  000866  0012               	return		;funcret
  1940  000868                     __end_of_HD44780_Cmd4bit:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           prodh	equ	0xFF4
  1947                           prodl	equ	0xFF3
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           indf2	equ	0xFDF
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _HD44780_Delay *****************
  1958 ;; Defined at:
  1959 ;;		line 106 in file "hd44780.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  us              2    0[COMRAM] int 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  i               2    3[COMRAM] int 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         2       0       0       0       0       0       0
  1974 ;;      Locals:         2       0       0       0       0       0       0
  1975 ;;      Temps:          1       0       0       0       0       0       0
  1976 ;;      Totals:         5       0       0       0       0       0       0
  1977 ;;Total ram usage:        5 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_HD44780_Init
  1983 ;;		_HD44780_Clear
  1984 ;;		_HD44780_Cmd4bit
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text14
  1989  000AC0                     __ptext14:
  1990                           	opt stack 0
  1991  000AC0                     _HD44780_Delay:
  1992                           	opt stack 26
  1993                           
  1994                           ;hd44780.c: 108: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(8000000/4000000.0)
      +                          ));
  1995                           
  1996                           ;incstack = 0
  1997  000AC0  0E00               	movlw	0
  1998  000AC2  6E05               	movwf	HD44780_Delay@i+1,c
  1999  000AC4  0E00               	movlw	0
  2000  000AC6  6E04               	movwf	HD44780_Delay@i,c
  2001  000AC8  D003               	goto	l1224
  2002  000ACA                     l115:
  2003  000ACA  D000               	nop2		;2 cycle nop
  2004  000ACC  4A04               	infsnz	HD44780_Delay@i,f,c
  2005  000ACE  2A05               	incf	HD44780_Delay@i+1,f,c
  2006  000AD0                     l1224:
  2007  000AD0  5001               	movf	HD44780_Delay@us,w,c
  2008  000AD2  5C04               	subwf	HD44780_Delay@i,w,c
  2009  000AD4  5005               	movf	HD44780_Delay@i+1,w,c
  2010  000AD6  0A80               	xorlw	128
  2011  000AD8  6E03               	movwf	??_HD44780_Delay& (0+255),c
  2012  000ADA  5002               	movf	HD44780_Delay@us+1,w,c
  2013  000ADC  0A80               	xorlw	128
  2014  000ADE  5803               	subwfb	??_HD44780_Delay& (0+255),w,c
  2015  000AE0  B0D8               	btfsc	status,0,c
  2016  000AE2  0012               	return	
  2017  000AE4  D7F2               	goto	l115
  2018  000AE6                     __end_of_HD44780_Delay:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           prodh	equ	0xFF4
  2025                           prodl	equ	0xFF3
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1l	equ	0xFE1
  2030                           indf2	equ	0xFDF
  2031                           fsr2h	equ	0xFDA
  2032                           fsr2l	equ	0xFD9
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _Delayms *****************
  2036 ;; Defined at:
  2037 ;;		line 10 in file "delay.h"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  ms              2    0[COMRAM] int 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  i               2    3[COMRAM] int 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2051 ;;      Params:         2       0       0       0       0       0       0
  2052 ;;      Locals:         2       0       0       0       0       0       0
  2053 ;;      Temps:          1       0       0       0       0       0       0
  2054 ;;      Totals:         5       0       0       0       0       0       0
  2055 ;;Total ram usage:        5 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text15
  2065  000A8E                     __ptext15:
  2066                           	opt stack 0
  2067  000A8E                     _Delayms:
  2068                           	opt stack 30
  2069                           
  2070                           ;delay.h: 12: for(int i=0; i<ms ; i++) _delay((unsigned long)((1)*(8000000/4000.0)));
  2071                           
  2072                           ;incstack = 0
  2073  000A8E  0E00               	movlw	0
  2074  000A90  6E05               	movwf	Delayms@i+1,c
  2075  000A92  0E00               	movlw	0
  2076  000A94  6E04               	movwf	Delayms@i,c
  2077  000A96  D009               	goto	l19
  2078  000A98                     l1286:
  2079  000A98  0E03               	movlw	3
  2080  000A9A  6E03               	movwf	??_Delayms& (0+255),c
  2081  000A9C  0E98               	movlw	152
  2082  000A9E                     u1047:
  2083  000A9E  2EE8               	decfsz	wreg,f,c
  2084  000AA0  D7FE               	goto	u1047
  2085  000AA2  2E03               	decfsz	??_Delayms& (0+255),f,c
  2086  000AA4  D7FC               	goto	u1047
  2087  000AA6  4A04               	infsnz	Delayms@i,f,c
  2088  000AA8  2A05               	incf	Delayms@i+1,f,c
  2089  000AAA                     l19:
  2090  000AAA  5001               	movf	Delayms@ms,w,c
  2091  000AAC  5C04               	subwf	Delayms@i,w,c
  2092  000AAE  5005               	movf	Delayms@i+1,w,c
  2093  000AB0  0A80               	xorlw	128
  2094  000AB2  6E03               	movwf	??_Delayms& (0+255),c
  2095  000AB4  5002               	movf	Delayms@ms+1,w,c
  2096  000AB6  0A80               	xorlw	128
  2097  000AB8  5803               	subwfb	??_Delayms& (0+255),w,c
  2098  000ABA  B0D8               	btfsc	status,0,c
  2099  000ABC  0012               	return	
  2100  000ABE  D7EC               	goto	l1286
  2101  000AC0                     __end_of_Delayms:
  2102                           	opt stack 0
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           prodh	equ	0xFF4
  2108                           prodl	equ	0xFF3
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           prodh	equ	0xFF4
  2122                           prodl	equ	0xFF3
  2123                           postinc0	equ	0xFEE
  2124                           wreg	equ	0xFE8
  2125                           postdec1	equ	0xFE5
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           fsr2h	equ	0xFDA
  2129                           fsr2l	equ	0xFD9
  2130                           status	equ	0xFD8
  2131                           
  2132                           	psect	rparam
  2133  0000                     tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           postdec1	equ	0xFE5
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        4
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      37
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _putch->_HD44780_CursorSet
    _HD44780_Data->_HD44780_Cmd4bit
    _HD44780_CursorSet->_HD44780_Cmd
    _HD44780_Init->_HD44780_Cmd
    _HD44780_DisplayOn->_HD44780_Cmd
    _HD44780_Clear->_HD44780_Cmd
    _HD44780_Cmd->_HD44780_Cmd4bit
    _HD44780_Cmd4bit->_HD44780_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10285
                                             23 COMRAM     3     3      0
                            _Delayms
                      _HD44780_Clear
                  _HD44780_CursorSet
                       _HD44780_Init
                        _KEYPAD_Init
                  _KEYPAD_KeytoASCII
                        _KEYPAD_Read
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4    2615
                                             15 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0    2349
                                             14 COMRAM     1     1      0
                  _HD44780_CursorSet
                       _HD44780_Data
 ---------------------------------------------------------------------------------
 (3) _HD44780_Data                                         1     1      0     754
                                              7 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (3) _HD44780_CursorSet                                    6     5      1    1529
                                              8 COMRAM     6     5      1
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_Read                                          2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_KeytoASCII                                    2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HD44780_Init                                         2     1      1    4346
                                              8 COMRAM     2     1      1
                      _HD44780_Clear
                        _HD44780_Cmd
                    _HD44780_Cmd4bit
                      _HD44780_Delay
                  _HD44780_DisplayOn
                   _HD44780_InitPins
 ---------------------------------------------------------------------------------
 (2) _HD44780_InitPins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HD44780_DisplayOn                                    0     0      0     754
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (2) _HD44780_Clear                                        0     0      0    1376
                        _HD44780_Cmd
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd                                          1     1      0     754
                                              7 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd4bit                                      2     2      0     710
                                              5 COMRAM     2     2      0
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (5) _HD44780_Delay                                        5     3      2     622
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              5     3      2     110
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delayms
   _HD44780_Clear
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
     _HD44780_Delay
   _HD44780_CursorSet
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
   _HD44780_Init
     _HD44780_Clear
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
       _HD44780_Delay
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
     _HD44780_Cmd4bit
       _HD44780_Delay
     _HD44780_Delay
     _HD44780_DisplayOn
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
     _HD44780_InitPins
   _KEYPAD_Init
   _KEYPAD_KeytoASCII
   _KEYPAD_Read
   _printf
     _putch
       _HD44780_CursorSet
         _HD44780_Cmd
           _HD44780_Cmd4bit
             _HD44780_Delay
       _HD44780_Data
         _HD44780_Cmd4bit
           _HD44780_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      25       1       29.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      15        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 11 14:42:55 2016

                          l50 0646                            l19 0AAA                            l60 0702  
                          l52 0672                            l61 0710                            l53 0680  
                          l62 071E                            l54 068E                            l47 062A  
                          l56 06BA                            l57 06C8                            l49 0638  
                          l58 06D6                   __CFG_BORV$2 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                           l115 0ACA                  __CFG_CPB$OFF 000000  
                         u520 07EC                  __CFG_CPD$OFF 000000                           u540 0806  
                         u560 0822                           u538 07EE                           u580 083C  
                         u558 0808                           u578 0824                           u598 083E  
                         prod 000FF3                           wreg 000FE8                  ?_KEYPAD_Init 0001  
                ?_KEYPAD_Read 0001                  __CFG_LVP$OFF 000000      __size_of_HD44780_Cmd4bit 0088  
                __CFG_WDT$OFF 000000                          l1224 0AD0                          l1308 076A  
                        l1412 06E4                          l1500 0902                          l1246 0A34  
                        l1510 0940                          l1440 072C                          l1272 09F8  
                        l1504 0916                          l1266 09E2                          l1452 0970  
                        l1356 0654                          l1276 0A0C                          l1508 091E  
                        l1286 0A98                          l1470 099A                          l1518 087C  
                        l1464 098C                          l1448 096A                          l1384 069C  
                        l1482 09B6                          l1458 097E                          l1476 09A8  
                        l1494 08EC                          l1488 09C4                          l1498 08FC  
                        STR_1 0601                          STR_2 060F                          u1007 0656  
                        u1017 069E                          u1027 06E6                          u1037 072E  
                        u1047 0A9E                   main@int_key 0019               ??_HD44780_Delay 0003  
             ??_HD44780_Clear 0009                          _main 0868                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
               __CFG_BOREN$ON 000000                          prodl 000FF3                          start 0000  
               __CFG_IESO$OFF 000000               __end_of_Delayms 0AC0                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010                  main@char_key 0018                         ?_main 0001  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _putch 09C8  
                       tablat 000FF5                         status 000FD8               __initialization 0A58  
    __end_of_HD44780_InitPins 0B22                  __end_of_main 08E2                        ??_main 0018  
               __activetblptr 000002                        ?_putch 0001                     ??_Delayms 0003  
           ??_HD44780_Cmd4bit 0006                __CFG_XINST$OFF 000000                __CFG_STVREN$ON 000000  
                      clear_0 0A5E                        _printf 08E2                  __pdataCOMRAM 0022  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 000F          __size_of_KEYPAD_Init 0022  
        __size_of_KEYPAD_Read 0128                    __accesstop 0080       __end_of__initialization 0A84  
             __CFG_PBADEN$OFF 000000             _KEYPAD_KeytoASCII 095A                 ___rparam_used 000001  
               ??_HD44780_Cmd 0008            ?_KEYPAD_KeytoASCII 0001                __pcstackCOMRAM 0001  
         ??_KEYPAD_KeytoASCII 0003                 __end_of_putch 0A16                       ??_putch 000F  
   __end_of_KEYPAD_KeytoASCII 09C8           __end_of_HD44780_Cmd 0B4E                       ?_printf 0010  
                     _Delayms 0A8E         __end_of_HD44780_Delay 0AE6         __end_of_HD44780_Clear 0B62  
                     __Hparam 0000                       __Lparam 0000             ?_HD44780_InitPins 0001  
                __psmallconst 0600            ??_HD44780_InitPins 0001                       __pcinit 0A58  
                     __ramtop 0600                       __ptext0 0868                       __ptext1 08E2  
                     __ptext2 09C8                       __ptext3 0B22                       __ptext4 0A16  
                     __ptext5 0614                       __ptext6 095A                       __ptext7 0AE6  
                     __ptext8 073C                       __ptext9 0B08               __size_of_printf 0078  
             _HD44780_Cmd4bit 07E0          end_of_initialization 0A84    __size_of_KEYPAD_KeytoASCII 006E  
               __Lmediumconst 0000                     Delayms@ms 0001                 ?_HD44780_Data 0001  
               ?_HD44780_Init 0009                   _HD44780_Cmd 0B38                       printf@c 0017  
                     printf@f 0010                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTBbits 000F81                     _PORTDbits 000F83          HD44780_CursorSet@col 000E  
        HD44780_CursorSet@row 0009                     _TRISBbits 000F93                     _TRISDbits 000F95  
              ??_HD44780_Data 0008                ??_HD44780_Init 000A                 __pidataCOMRAM 0B6E  
     __end_of_HD44780_Cmd4bit 0868                __end_of_printf 095A           start_initialization 0A58  
               ??_KEYPAD_Init 0001                 ??_KEYPAD_Read 0003            HD44780_Cmd4bit@cmd 0007  
            __CFG_LPT1OSC$OFF 000000                      ??_printf 0014                   __pbssCOMRAM 001B  
                    ?_Delayms 0001           __end_of_KEYPAD_Init 0B08           __end_of_KEYPAD_Read 073C  
           __CFG_CCP2MX$PORTC 000000              ?_HD44780_Cmd4bit 0001                   __smallconst 0600  
        __end_of_HD44780_Data 0B38          __end_of_HD44780_Init 07E0     __size_of_HD44780_InitPins 001A  
              __size_of_putch 004E                      Delayms@i 0004                  ?_HD44780_Cmd 0001  
            __CFG_WDTPS$32768 000000    KEYPAD_KeytoASCII@KeyNumber 0001                    printf@flag 0014  
      __size_of_HD44780_Delay 0026        __size_of_HD44780_Clear 0014                   _KEYPAD_Init 0AE6  
                 _KEYPAD_Read 0614                     copy_data0 0A78  HD44780_CursorSet@row_offsets 000A  
           _HD44780_DisplayOn 0B62              __size_of_Delayms 0032            ?_HD44780_DisplayOn 0001  
                    __Hrparam 0000                      __Lrparam 0000             _HD44780_CursorSet 0A16  
         ??_HD44780_DisplayOn 0009            ?_HD44780_CursorSet 0009           ??_HD44780_CursorSet 000A  
                    __ptext10 0B62                      __ptext11 0B4E                      __ptext12 0B38  
                    __ptext13 07E0                      __ptext14 0AC0                      __ptext15 0A8E  
   __end_of_HD44780_DisplayOn 0B6E                 __size_of_main 007A                 _HD44780_Delay 0AC0  
               _HD44780_Clear 0B4E     __end_of_HD44780_CursorSet 0A58         __size_of_HD44780_Data 0016  
       __size_of_HD44780_Init 00A4              _HD44780_InitPins 0B08              HD44780_Data@data 0008  
              ?_HD44780_Delay 0001                ?_HD44780_Clear 0001        HD44780_CursorSet@F4227 0022  
                _HD44780_Data 0B22                  _HD44780_Init 073C                  _HD44780_Opts 001B  
                    printf@ap 0015          __size_of_HD44780_Cmd 0016              HD44780_Init@cols 000A  
            HD44780_Init@rows 0009               HD44780_Delay@us 0001    __size_of_HD44780_DisplayOn 000C  
              HD44780_Cmd@cmd 0008                HD44780_Delay@i 0004    __size_of_HD44780_CursorSet 0042  
