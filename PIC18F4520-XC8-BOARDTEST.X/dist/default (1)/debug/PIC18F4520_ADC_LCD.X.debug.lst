

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 11 14:43:25 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  001220                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for HD44780_CursorSet@F4227
    47  001220  00                 	db	0
    48  001221  40                 	db	64
    49  001222  14                 	db	20
    50  001223  54                 	db	84
    51                           
    52                           ;initializer for _lamda
    53                           ;main.c: 14: double dcf = 0;
    54  001224  CD                 	db	205
    55  001225  4C                 	db	76
    56  001226  3D                 	db	61
    57                           
    58                           	psect	smallconst
    59  000600                     __psmallconst:
    60                           	opt stack 0
    61  000600  00                 	db	0
    62  000601                     _dpowers:
    63                           	opt stack 0
    64  000601  0001               	dw	1
    65  000603  000A               	dw	10
    66  000605  0064               	dw	100
    67  000607  03E8               	dw	1000
    68  000609  2710               	dw	10000
    69  00060B                     __end_of_dpowers:
    70                           	opt stack 0
    71  0000                     _ADCON0	set	4034
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON1	set	4033
    74  0000                     _ADCON2	set	4032
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _PIE1bits	set	3997
    78  0000                     _PIR1bits	set	3998
    79  0000                     _PORTBbits	set	3969
    80  0000                     _TRISBbits	set	3987
    81  0000                     _INTCONbits	set	4082
    82  00060B                     STR_1:
    83  00060B  41                 	db	65	;'A'
    84  00060C  44                 	db	68	;'D'
    85  00060D  43                 	db	67	;'C'
    86  00060E  20                 	db	32
    87  00060F  56                 	db	86	;'V'
    88  000610  61                 	db	97	;'a'
    89  000611  6C                 	db	108	;'l'
    90  000612  75                 	db	117	;'u'
    91  000613  65                 	db	101	;'e'
    92  000614  3A                 	db	58	;':'
    93  000615  00                 	db	0
    94  000616                     STR_2:
    95  000616  25                 	db	37
    96  000617  34                 	db	52	;'4'
    97  000618  64                 	db	100	;'d'
    98  000619  00                 	db	0
    99                           
   100                           ; #config settings
   101  00061A  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           	psect	cinit
   104  001084                     __pcinit:
   105                           	opt stack 0
   106  001084                     start_initialization:
   107                           	opt stack 0
   108  001084                     __initialization:
   109                           	opt stack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (10 bytes)
   112  001084  EE00  F02D         	lfsr	0,__pbssCOMRAM
   113  001088  0E0A               	movlw	10
   114  00108A                     clear_0:
   115  00108A  6AEE               	clrf	postinc0,c
   116  00108C  06E8               	decf	wreg,f,c
   117  00108E  E1FD               	bnz	clear_0
   118                           
   119                           ; Initialize objects allocated to COMRAM (7 bytes)
   120                           ; load TBLPTR registers with __pidataCOMRAM
   121  001090  0E20               	movlw	low __pidataCOMRAM
   122  001092  6EF6               	movwf	tblptrl,c
   123  001094  0E12               	movlw	high __pidataCOMRAM
   124  001096  6EF7               	movwf	tblptrh,c
   125  001098  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   126  00109A  6EF8               	movwf	tblptru,c
   127  00109C  EE00  F037         	lfsr	0,__pdataCOMRAM
   128  0010A0  EE10 F007          	lfsr	1,7
   129  0010A4                     copy_data0:
   130  0010A4  0009               	tblrd		*+
   131  0010A6  CFF5 FFEE          	movff	tablat,postinc0
   132  0010AA  50E5               	movf	postdec1,w,c
   133  0010AC  50E1               	movf	fsr1l,w,c
   134  0010AE  E1FA               	bnz	copy_data0
   135  0010B0                     end_of_initialization:
   136                           	opt stack 0
   137  0010B0                     __end_of__initialization:
   138                           	opt stack 0
   139  0010B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   140  0010B2  6EF8               	movwf	tblptru,c
   141  0010B4  0100               	movlb	0
   142  0010B6  EFE4  F004         	goto	_main	;jump to C main() function
   143                           tblptru	equ	0xFF8
   144                           tblptrh	equ	0xFF7
   145                           tblptrl	equ	0xFF6
   146                           tablat	equ	0xFF5
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           postdec1	equ	0xFE5
   150                           fsr1l	equ	0xFE1
   151                           
   152                           	psect	bssCOMRAM
   153  00002D                     __pbssCOMRAM:
   154                           	opt stack 0
   155  00002D                     _HD44780_Opts:
   156                           	opt stack 0
   157  00002D                     	ds	7
   158  000034                     _dcf:
   159                           	opt stack 0
   160  000034                     	ds	3
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           postdec1	equ	0xFE5
   168                           fsr1l	equ	0xFE1
   169                           
   170                           	psect	dataCOMRAM
   171  000037                     __pdataCOMRAM:
   172                           	opt stack 0
   173  000037                     HD44780_CursorSet@F4227:
   174                           	opt stack 0
   175  000037                     	ds	4
   176  00003B                     _lamda:
   177                           	opt stack 0
   178  00003B                     	ds	3
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           postdec1	equ	0xFE5
   186                           fsr1l	equ	0xFE1
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_isdigit:
   192  000001                     ?_ReadADC:
   193                           	opt stack 0
   194  000001                     ?___wmul:
   195                           	opt stack 0
   196  000001                     ?___lwdiv:
   197                           	opt stack 0
   198  000001                     ?___ftpack:
   199                           	opt stack 0
   200  000001                     ?___ftneg:
   201                           	opt stack 0
   202  000001                     ?___fttol:
   203                           	opt stack 0
   204  000001                     OpenADC@config2:
   205                           	opt stack 0
   206  000001                     Delayms@ms:
   207                           	opt stack 0
   208  000001                     Delay@us:
   209                           	opt stack 0
   210  000001                     HD44780_Delay@us:
   211                           	opt stack 0
   212  000001                     ___wmul@multiplier:
   213                           	opt stack 0
   214  000001                     ___lwdiv@dividend:
   215                           	opt stack 0
   216  000001                     ___ftpack@arg:
   217                           	opt stack 0
   218  000001                     ___ftneg@f1:
   219                           	opt stack 0
   220  000001                     ___fttol@f1:
   221                           	opt stack 0
   222                           
   223                           ; 3 bytes @ 0x0
   224  000001                     	ds	1
   225  000002                     OpenADC@portconfig:
   226                           	opt stack 0
   227  000002                     _isdigit$901:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x1
   231  000002                     	ds	1
   232  000003                     ??_OpenADC:
   233  000003                     ??_ReadADC:
   234  000003                     ??_Delayms:
   235  000003                     ??_Delay:
   236  000003                     ??_HD44780_Delay:
   237  000003                     isdigit@c:
   238                           	opt stack 0
   239  000003                     ___wmul@multiplicand:
   240                           	opt stack 0
   241  000003                     ___lwdiv@divisor:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000003                     	ds	1
   246  000004                     ___ftpack@exp:
   247                           	opt stack 0
   248  000004                     Delayms@i:
   249                           	opt stack 0
   250  000004                     Delay@i:
   251                           	opt stack 0
   252  000004                     HD44780_Delay@i:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x3
   256  000004                     	ds	1
   257  000005                     ??___fttol:
   258  000005                     OpenADC@config:
   259                           	opt stack 0
   260  000005                     ___ftpack@sign:
   261                           	opt stack 0
   262  000005                     ___wmul@product:
   263                           	opt stack 0
   264  000005                     ___lwdiv@quotient:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x4
   268  000005                     	ds	1
   269  000006                     ??_HD44780_Cmd4bit:
   270  000006                     ??___ftpack:
   271                           
   272                           ; 1 bytes @ 0x5
   273  000006                     	ds	1
   274  000007                     HD44780_Cmd4bit@cmd:
   275                           	opt stack 0
   276  000007                     ___lwdiv@counter:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x6
   280  000007                     	ds	1
   281  000008                     ?___lwmod:
   282                           	opt stack 0
   283  000008                     HD44780_Cmd@cmd:
   284                           	opt stack 0
   285  000008                     HD44780_Data@data:
   286                           	opt stack 0
   287  000008                     ___lwmod@dividend:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x7
   291  000008                     	ds	1
   292  000009                     ?___awtoft:
   293                           	opt stack 0
   294  000009                     HD44780_Init@rows:
   295                           	opt stack 0
   296  000009                     HD44780_CursorSet@row:
   297                           	opt stack 0
   298  000009                     ___awtoft@c:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x8
   302  000009                     	ds	1
   303  00000A                     HD44780_Init@cols:
   304                           	opt stack 0
   305  00000A                     ___fttol@sign1:
   306                           	opt stack 0
   307  00000A                     ___lwmod@divisor:
   308                           	opt stack 0
   309  00000A                     HD44780_CursorSet@row_offsets:
   310                           	opt stack 0
   311                           
   312                           ; 4 bytes @ 0x9
   313  00000A                     	ds	1
   314  00000B                     ___fttol@lval:
   315                           	opt stack 0
   316                           
   317                           ; 4 bytes @ 0xA
   318  00000B                     	ds	1
   319  00000C                     ___awtoft@sign:
   320                           	opt stack 0
   321  00000C                     ___lwmod@counter:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xB
   325  00000C                     	ds	1
   326  00000D                     ?___ftadd:
   327                           	opt stack 0
   328  00000D                     ___ftadd@f1:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0xC
   332  00000D                     	ds	1
   333  00000E                     HD44780_CursorSet@col:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0xD
   337  00000E                     	ds	1
   338  00000F                     putch@c:
   339                           	opt stack 0
   340  00000F                     ___fttol@exp1:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0xE
   344  00000F                     	ds	1
   345  000010                     ?_printf:
   346                           	opt stack 0
   347  000010                     printf@f:
   348                           	opt stack 0
   349  000010                     ___ftadd@f2:
   350                           	opt stack 0
   351                           
   352                           ; 3 bytes @ 0xF
   353  000010                     	ds	3
   354  000013                     ??___ftadd:
   355                           
   356                           ; 1 bytes @ 0x12
   357  000013                     	ds	1
   358  000014                     ??_printf:
   359                           
   360                           ; 1 bytes @ 0x13
   361  000014                     	ds	2
   362  000016                     ___ftadd@sign:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x15
   366  000016                     	ds	1
   367  000017                     ___ftadd@exp2:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x16
   371  000017                     	ds	1
   372  000018                     ___ftadd@exp1:
   373                           	opt stack 0
   374  000018                     printf@ap:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x17
   378  000018                     	ds	1
   379  000019                     ?___ftmul:
   380                           	opt stack 0
   381  000019                     ___ftmul@f1:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x18
   385  000019                     	ds	1
   386  00001A                     printf@prec:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x19
   390  00001A                     	ds	1
   391  00001B                     printf@flag:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x1A
   395  00001B                     	ds	1
   396  00001C                     printf@val:
   397                           	opt stack 0
   398  00001C                     ___ftmul@f2:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x1B
   402  00001C                     	ds	2
   403  00001E                     printf@width:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x1D
   407  00001E                     	ds	1
   408  00001F                     ??___ftmul:
   409                           
   410                           ; 1 bytes @ 0x1E
   411  00001F                     	ds	1
   412  000020                     printf@c:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1F
   416  000020                     	ds	2
   417  000022                     ___ftmul@exp:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x21
   421  000022                     	ds	1
   422  000023                     ___ftmul@f3_as_product:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x22
   426  000023                     	ds	3
   427  000026                     ___ftmul@cntr:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x25
   431  000026                     	ds	1
   432  000027                     ___ftmul@sign:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x26
   436  000027                     	ds	1
   437  000028                     _main$1250:
   438                           	opt stack 0
   439                           
   440                           ; 3 bytes @ 0x27
   441  000028                     	ds	3
   442  00002B                     main@adcin:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x2A
   446  00002B                     	ds	2
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 17 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  adcin           2   42[COMRAM] int 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   475 ;;      Params:         0       0       0       0       0       0       0
   476 ;;      Locals:         5       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0
   478 ;;      Totals:         5       0       0       0       0       0       0
   479 ;;Total ram usage:        5 bytes
   480 ;; Hardware stack levels required when called:    6
   481 ;; This function calls:
   482 ;;		_BusyADC
   483 ;;		_ConvertADC
   484 ;;		_Delay
   485 ;;		_Delayms
   486 ;;		_HD44780_CursorSet
   487 ;;		_HD44780_Init
   488 ;;		_OpenADC
   489 ;;		_ReadADC
   490 ;;		___awtoft
   491 ;;		___ftadd
   492 ;;		___ftmul
   493 ;;		___ftneg
   494 ;;		___fttol
   495 ;;		_printf
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text0
   502  0009C8                     __ptext0:
   503                           	opt stack 0
   504  0009C8                     _main:
   505                           	opt stack 25
   506                           
   507                           ;main.c: 19: int adcin;
   508                           ;main.c: 21: HD44780_Init(16, 2);
   509                           
   510                           ;incstack = 0
   511  0009C8  0E02               	movlw	2
   512  0009CA  6E09               	movwf	HD44780_Init@rows,c
   513  0009CC  0E10               	movlw	16
   514  0009CE  ECCF  F006         	call	_HD44780_Init
   515                           
   516                           ;main.c: 23: OpenADC(0b10001111 &
   517                           ;main.c: 24: 0b11111111 &
   518                           ;main.c: 25: 0b11110001,
   519                           ;main.c: 26: 0b10000111 &
   520                           ;main.c: 27: 0b11111100 &
   521                           ;main.c: 28: 0b01111111,
   522                           ;main.c: 29: 0b11111110);
   523  0009D2  0E04               	movlw	4
   524  0009D4  6E01               	movwf	OpenADC@config2,c
   525  0009D6  0EFE               	movlw	254
   526  0009D8  6E02               	movwf	OpenADC@portconfig,c
   527  0009DA  0E81               	movlw	129
   528  0009DC  EC65  F007         	call	_OpenADC
   529                           
   530                           ;main.c: 30: Delay(50);
   531  0009E0  0E00               	movlw	0
   532  0009E2  6E02               	movwf	Delay@us+1,c
   533  0009E4  0E32               	movlw	50
   534  0009E6  6E01               	movwf	Delay@us,c
   535  0009E8  EC9C  F008         	call	_Delay	;wreg free
   536                           
   537                           ;main.c: 32: HD44780_CursorSet(0,0);
   538  0009EC  0E00               	movlw	0
   539  0009EE  6E09               	movwf	HD44780_CursorSet@row,c
   540  0009F0  0E00               	movlw	0
   541  0009F2  ECE4  F007         	call	_HD44780_CursorSet
   542                           
   543                           ;main.c: 33: printf("ADC Value:");
   544  0009F6  0E0B               	movlw	low STR_1
   545  0009F8  6E10               	movwf	printf@f,c
   546  0009FA  0E06               	movlw	high STR_1
   547  0009FC  6E11               	movwf	printf@f+1,c
   548  0009FE  EC0E  F003         	call	_printf	;wreg free
   549  000A02                     l1940:
   550                           
   551                           ;main.c: 37: ConvertADC();
   552  000A02  EC14  F009         	call	_ConvertADC	;wreg free
   553  000A06                     l1942:
   554  000A06  EC0A  F009         	call	_BusyADC	;wreg free
   555  000A0A  0900               	iorlw	0
   556  000A0C  A4D8               	btfss	status,2,c
   557  000A0E  D7FB               	goto	l1942
   558                           
   559                           ;main.c: 39: adcin = ReadADC();
   560  000A10  ECFD  F008         	call	_ReadADC	;wreg free
   561  000A14  C001  F02B         	movff	?_ReadADC,main@adcin
   562  000A18  C002  F02C         	movff	?_ReadADC+1,main@adcin+1
   563                           
   564                           ;main.c: 41: dcf = (1-lamda)*dcf + lamda*adcin;
   565  000A1C  C034  F01C         	movff	_dcf,___ftmul@f2
   566  000A20  C035  F01D         	movff	_dcf+1,___ftmul@f2+1
   567  000A24  C036  F01E         	movff	_dcf+2,___ftmul@f2+2
   568  000A28  0E00               	movlw	0
   569  000A2A  6E10               	movwf	___ftadd@f2,c
   570  000A2C  0E80               	movlw	128
   571  000A2E  6E11               	movwf	___ftadd@f2+1,c
   572  000A30  0E3F               	movlw	63
   573  000A32  6E12               	movwf	___ftadd@f2+2,c
   574  000A34  C03B  F001         	movff	_lamda,___ftneg@f1
   575  000A38  C03C  F002         	movff	_lamda+1,___ftneg@f1+1
   576  000A3C  C03D  F003         	movff	_lamda+2,___ftneg@f1+2
   577  000A40  ECAF  F008         	call	___ftneg	;wreg free
   578  000A44  C001  F00D         	movff	?___ftneg,___ftadd@f1
   579  000A48  C002  F00E         	movff	?___ftneg+1,___ftadd@f1+1
   580  000A4C  C003  F00F         	movff	?___ftneg+2,___ftadd@f1+2
   581  000A50  EC0E  F004         	call	___ftadd	;wreg free
   582  000A54  C00D  F019         	movff	?___ftadd,___ftmul@f1
   583  000A58  C00E  F01A         	movff	?___ftadd+1,___ftmul@f1+1
   584  000A5C  C00F  F01B         	movff	?___ftadd+2,___ftmul@f1+2
   585  000A60  ECFE  F005         	call	___ftmul	;wreg free
   586  000A64  C019  F028         	movff	?___ftmul,_main$1250
   587  000A68  C01A  F029         	movff	?___ftmul+1,_main$1250+1
   588  000A6C  C01B  F02A         	movff	?___ftmul+2,_main$1250+2
   589                           
   590                           ;main.c: 41: dcf = (1-lamda)*dcf + lamda*adcin;
   591  000A70  C028  F00D         	movff	_main$1250,___ftadd@f1
   592  000A74  C029  F00E         	movff	_main$1250+1,___ftadd@f1+1
   593  000A78  C02A  F00F         	movff	_main$1250+2,___ftadd@f1+2
   594  000A7C  C03B  F01C         	movff	_lamda,___ftmul@f2
   595  000A80  C03C  F01D         	movff	_lamda+1,___ftmul@f2+1
   596  000A84  C03D  F01E         	movff	_lamda+2,___ftmul@f2+2
   597  000A88  C02B  F009         	movff	main@adcin,___awtoft@c
   598  000A8C  C02C  F00A         	movff	main@adcin+1,___awtoft@c+1
   599  000A90  EC26  F008         	call	___awtoft	;wreg free
   600  000A94  C009  F019         	movff	?___awtoft,___ftmul@f1
   601  000A98  C00A  F01A         	movff	?___awtoft+1,___ftmul@f1+1
   602  000A9C  C00B  F01B         	movff	?___awtoft+2,___ftmul@f1+2
   603  000AA0  ECFE  F005         	call	___ftmul	;wreg free
   604  000AA4  C019  F010         	movff	?___ftmul,___ftadd@f2
   605  000AA8  C01A  F011         	movff	?___ftmul+1,___ftadd@f2+1
   606  000AAC  C01B  F012         	movff	?___ftmul+2,___ftadd@f2+2
   607  000AB0  EC0E  F004         	call	___ftadd	;wreg free
   608  000AB4  C00D  F034         	movff	?___ftadd,_dcf
   609  000AB8  C00E  F035         	movff	?___ftadd+1,_dcf+1
   610  000ABC  C00F  F036         	movff	?___ftadd+2,_dcf+2
   611                           
   612                           ;main.c: 42: HD44780_CursorSet(0,1);
   613  000AC0  0E01               	movlw	1
   614  000AC2  6E09               	movwf	HD44780_CursorSet@row,c
   615  000AC4  0E00               	movlw	0
   616  000AC6  ECE4  F007         	call	_HD44780_CursorSet
   617                           
   618                           ;main.c: 43: printf("%4d", 1023-(int)dcf);
   619  000ACA  0E16               	movlw	low STR_2
   620  000ACC  6E10               	movwf	printf@f,c
   621  000ACE  0E06               	movlw	high STR_2
   622  000AD0  6E11               	movwf	printf@f+1,c
   623  000AD2  C034  F001         	movff	_dcf,___fttol@f1
   624  000AD6  C035  F002         	movff	_dcf+1,___fttol@f1+1
   625  000ADA  C036  F003         	movff	_dcf+2,___fttol@f1+2
   626  000ADE  EC84  F005         	call	___fttol	;wreg free
   627  000AE2  1E01               	comf	?___fttol,f,c
   628  000AE4  1E02               	comf	?___fttol+1,f,c
   629  000AE6  4A01               	infsnz	?___fttol,f,c
   630  000AE8  2A02               	incf	?___fttol+1,f,c
   631  000AEA  0EFF               	movlw	255
   632  000AEC  2401               	addwf	?___fttol,w,c
   633  000AEE  6E12               	movwf	?_printf+2,c
   634  000AF0  0E03               	movlw	3
   635  000AF2  2002               	addwfc	?___fttol+1,w,c
   636  000AF4  6E13               	movwf	?_printf+3,c
   637  000AF6  EC0E  F003         	call	_printf	;wreg free
   638                           
   639                           ;main.c: 44: Delayms(1);
   640  000AFA  0E00               	movlw	0
   641  000AFC  6E02               	movwf	Delayms@ms+1,c
   642  000AFE  0E01               	movlw	1
   643  000B00  6E01               	movwf	Delayms@ms,c
   644  000B02  EC5D  F008         	call	_Delayms	;wreg free
   645  000B06  D77D               	goto	l1940
   646  000B08                     __end_of_main:
   647                           	opt stack 0
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1l	equ	0xFE1
   656                           status	equ	0xFD8
   657                           
   658 ;; *************** function _printf *****************
   659 ;; Defined at:
   660 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  f               2   15[COMRAM] PTR const unsigned char 
   663 ;;		 -> STR_2(4), STR_1(11), 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  tmpval          4    0        struct .
   666 ;;  cp              3    0        PTR const unsigned char 
   667 ;;  width           2   29[COMRAM] int 
   668 ;;  val             2   27[COMRAM] unsigned int 
   669 ;;  ap              2   23[COMRAM] PTR void [1]
   670 ;;		 -> ?_printf(2), 
   671 ;;  len             2    0        unsigned int 
   672 ;;  c               1   31[COMRAM] char 
   673 ;;  flag            1   26[COMRAM] unsigned char 
   674 ;;  prec            1   25[COMRAM] char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  2   15[COMRAM] int 
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   684 ;;      Params:         4       0       0       0       0       0       0
   685 ;;      Locals:         9       0       0       0       0       0       0
   686 ;;      Temps:          4       0       0       0       0       0       0
   687 ;;      Totals:        17       0       0       0       0       0       0
   688 ;;Total ram usage:       17 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    5
   691 ;; This function calls:
   692 ;;		___lwdiv
   693 ;;		___lwmod
   694 ;;		___wmul
   695 ;;		_isdigit
   696 ;;		_putch
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text1
   703  00061C                     __ptext1:
   704                           	opt stack 0
   705  00061C                     _printf:
   706                           	opt stack 25
   707                           
   708                           ;doprnt.c: 466: va_list ap;
   709                           ;doprnt.c: 499: signed char c;
   710                           ;doprnt.c: 501: int width;
   711                           ;doprnt.c: 506: signed char prec;
   712                           ;doprnt.c: 508: unsigned char flag;
   713                           ;doprnt.c: 523: union {
   714                           ;doprnt.c: 524: unsigned long vd;
   715                           ;doprnt.c: 525: double integ;
   716                           ;doprnt.c: 526: } tmpval;
   717                           ;doprnt.c: 528: unsigned int val;
   718                           ;doprnt.c: 529: unsigned len;
   719                           ;doprnt.c: 530: const char * cp;
   720                           ;doprnt.c: 533: *ap = __va_start();
   721                           
   722                           ;incstack = 0
   723  00061C  0E12               	movlw	low (?_printf+2)
   724  00061E  6E18               	movwf	printf@ap,c
   725  000620  0E00               	movlw	high (?_printf+2)
   726  000622  6E19               	movwf	printf@ap+1,c
   727                           
   728                           ;doprnt.c: 536: while(c = *f++) {
   729  000624  D0EE               	goto	l1742
   730  000626                     l1666:
   731                           
   732                           ;doprnt.c: 538: if(c != '%')
   733  000626  0E25               	movlw	37
   734  000628  1820               	xorwf	printf@c,w,c
   735  00062A  B4D8               	btfsc	status,2,c
   736  00062C  D004               	goto	l1670
   737                           
   738                           ;doprnt.c: 540: {
   739                           ;doprnt.c: 541: (putch(c) );
   740  00062E  5020               	movf	printf@c,w,c
   741  000630  ECBD  F007         	call	_putch
   742                           
   743                           ;doprnt.c: 542: continue;
   744  000634  D0E6               	goto	l1742
   745  000636                     l1670:
   746                           
   747                           ;doprnt.c: 543: }
   748                           ;doprnt.c: 546: width = 0;
   749  000636  0E00               	movlw	0
   750  000638  6E1F               	movwf	printf@width+1,c
   751  00063A  0E00               	movlw	0
   752  00063C  6E1E               	movwf	printf@width,c
   753                           
   754                           ;doprnt.c: 548: flag = 0;
   755  00063E  0E00               	movlw	0
   756  000640  6E1B               	movwf	printf@flag,c
   757                           
   758                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
   759  000642  C010  FFF6         	movff	printf@f,tblptrl
   760  000646  C011  FFF7         	movff	printf@f+1,tblptrh
   761  00064A                     	if	0	;tblptru may be non-zero
   762  00064A                     	endif
   763  00064A                     	if	0	;tblptru may be non-zero
   764  00064A                     	endif
   765  00064A  0008               	tblrd		*
   766  00064C  50F5               	movf	tablat,w,c
   767  00064E  ECC1  F008         	call	_isdigit
   768  000652  A0D8               	btfss	status,0,c
   769  000654  D032               	goto	l1686
   770                           
   771                           ;doprnt.c: 598: width = 0;
   772  000656  0E00               	movlw	0
   773  000658  6E1F               	movwf	printf@width+1,c
   774  00065A  0E00               	movlw	0
   775  00065C  6E1E               	movwf	printf@width,c
   776  00065E                     l1676:
   777                           
   778                           ;doprnt.c: 600: width *= 10;
   779  00065E  C01E  F001         	movff	printf@width,___wmul@multiplier
   780  000662  C01F  F002         	movff	printf@width+1,___wmul@multiplier+1
   781  000666  0E00               	movlw	0
   782  000668  6E04               	movwf	___wmul@multiplicand+1,c
   783  00066A  0E0A               	movlw	10
   784  00066C  6E03               	movwf	___wmul@multiplicand,c
   785  00066E  EC76  F008         	call	___wmul	;wreg free
   786  000672  C001  F01E         	movff	?___wmul,printf@width
   787  000676  C002  F01F         	movff	?___wmul+1,printf@width+1
   788                           
   789                           ;doprnt.c: 601: width += *f++ - '0';
   790  00067A  0ED0               	movlw	208
   791  00067C  6E14               	movwf	??_printf& (0+255),c
   792  00067E  0EFF               	movlw	255
   793  000680  6E15               	movwf	(??_printf+1)& (0+255),c
   794  000682  C010  FFF6         	movff	printf@f,tblptrl
   795  000686  C011  FFF7         	movff	printf@f+1,tblptrh
   796  00068A                     	if	0	;tblptru may be non-zero
   797  00068A                     	endif
   798  00068A                     	if	0	;tblptru may be non-zero
   799  00068A                     	endif
   800  00068A  0008               	tblrd		*
   801  00068C  50F5               	movf	tablat,w,c
   802  00068E  6E16               	movwf	(??_printf+2)& (0+255),c
   803  000690  6A17               	clrf	(??_printf+3)& (0+255),c
   804  000692  5014               	movf	??_printf,w,c
   805  000694  2616               	addwf	??_printf+2,f,c
   806  000696  5015               	movf	??_printf+1,w,c
   807  000698  2217               	addwfc	??_printf+3,f,c
   808  00069A  5016               	movf	??_printf+2,w,c
   809  00069C  261E               	addwf	printf@width,f,c
   810  00069E  5017               	movf	??_printf+3,w,c
   811  0006A0  221F               	addwfc	printf@width+1,f,c
   812  0006A2  4A10               	infsnz	printf@f,f,c
   813  0006A4  2A11               	incf	printf@f+1,f,c
   814                           
   815                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
   816  0006A6  C010  FFF6         	movff	printf@f,tblptrl
   817  0006AA  C011  FFF7         	movff	printf@f+1,tblptrh
   818  0006AE                     	if	0	;tblptru may be non-zero
   819  0006AE                     	endif
   820  0006AE                     	if	0	;tblptru may be non-zero
   821  0006AE                     	endif
   822  0006AE  0008               	tblrd		*
   823  0006B0  50F5               	movf	tablat,w,c
   824  0006B2  ECC1  F008         	call	_isdigit
   825  0006B6  B0D8               	btfsc	status,0,c
   826  0006B8  D7D2               	goto	l1676
   827  0006BA                     l1686:
   828  0006BA  C010  FFF6         	movff	printf@f,tblptrl
   829  0006BE  C011  FFF7         	movff	printf@f+1,tblptrh
   830  0006C2  4A10               	infsnz	printf@f,f,c
   831  0006C4  2A11               	incf	printf@f+1,f,c
   832  0006C6                     	if	0	;tblptru may be non-zero
   833  0006C6                     	endif
   834  0006C6                     	if	0	;tblptru may be non-zero
   835  0006C6                     	endif
   836  0006C6  0008               	tblrd		*
   837  0006C8  CFF5 F020          	movff	tablat,printf@c
   838  0006CC  5020               	movf	printf@c,w,c
   839                           
   840                           ; Switch size 1, requested type "space"
   841                           ; Number of cases is 3, Range of values is 0 to 105
   842                           ; switch strategies available:
   843                           ; Name         Instructions Cycles
   844                           ; simple_byte           10     6 (average)
   845                           ;	Chosen strategy is simple_byte
   846  0006CE  0A00               	xorlw	0	; case 0
   847  0006D0  B4D8               	btfsc	status,2,c
   848  0006D2  0012               	return	
   849  0006D4  0A64               	xorlw	100	; case 100
   850  0006D6  B4D8               	btfsc	status,2,c
   851  0006D8  D003               	goto	l1688
   852  0006DA  0A0D               	xorlw	13	; case 105
   853  0006DC  A4D8               	btfss	status,2,c
   854  0006DE  D091               	goto	l1742
   855  0006E0                     l1688:
   856                           
   857                           ;doprnt.c: 1253: {
   858                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   859  0006E0  C018  FFD9         	movff	printf@ap,fsr2l
   860  0006E4  C019  FFDA         	movff	printf@ap+1,fsr2h
   861  0006E8  CFDE F01C          	movff	postinc2,printf@val
   862  0006EC  CFDD F01D          	movff	postdec2,printf@val+1
   863  0006F0  0E02               	movlw	2
   864  0006F2  2618               	addwf	printf@ap,f,c
   865  0006F4  0E00               	movlw	0
   866  0006F6  2219               	addwfc	printf@ap+1,f,c
   867                           
   868                           ;doprnt.c: 1261: if((int)val < 0) {
   869  0006F8  AE1D               	btfss	printf@val+1,7,c
   870  0006FA  D006               	goto	l1698
   871                           
   872                           ;doprnt.c: 1262: flag |= 0x03;
   873  0006FC  0E03               	movlw	3
   874  0006FE  121B               	iorwf	printf@flag,f,c
   875                           
   876                           ;doprnt.c: 1263: val = -val;
   877  000700  6C1C               	negf	printf@val,c
   878  000702  1E1D               	comf	printf@val+1,f,c
   879  000704  B0D8               	btfsc	status,0,c
   880  000706  2A1D               	incf	printf@val+1,f,c
   881  000708                     l1698:
   882                           
   883                           ;doprnt.c: 1264: }
   884                           ;doprnt.c: 1266: }
   885                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   886  000708  0E01               	movlw	1
   887  00070A  6E20               	movwf	printf@c,c
   888  00070C                     l1700:
   889  00070C  0E05               	movlw	5
   890  00070E  1820               	xorwf	printf@c,w,c
   891  000710  B4D8               	btfsc	status,2,c
   892  000712  D012               	goto	l1712
   893                           
   894                           ;doprnt.c: 1306: if(val < dpowers[c])
   895  000714  5020               	movf	printf@c,w,c
   896  000716  0D02               	mullw	2
   897  000718  0E01               	movlw	low _dpowers
   898  00071A  24F3               	addwf	prodl,w,c
   899  00071C  6EF6               	movwf	tblptrl,c
   900  00071E  0E06               	movlw	high _dpowers
   901  000720  20F4               	addwfc	prodh,w,c
   902  000722  6EF7               	movwf	tblptrh,c
   903  000724                     	if	0	;There are less than 3 active tblptr bytes
   904  000724                     	endif
   905  000724  0009               	tblrd		*+
   906  000726  50F5               	movf	tablat,w,c
   907  000728  5C1C               	subwf	printf@val,w,c
   908  00072A  0009               	tblrd		*+
   909  00072C  50F5               	movf	tablat,w,c
   910  00072E  581D               	subwfb	printf@val+1,w,c
   911  000730  A0D8               	btfss	status,0,c
   912  000732  D002               	goto	l1712
   913                           
   914                           ;doprnt.c: 1307: break;
   915  000734  2A20               	incf	printf@c,f,c
   916  000736  D7EA               	goto	l1700
   917  000738                     l1712:
   918                           
   919                           ;doprnt.c: 1345: if(width && flag & 0x03)
   920  000738  501E               	movf	printf@width,w,c
   921  00073A  101F               	iorwf	printf@width+1,w,c
   922  00073C  B4D8               	btfsc	status,2,c
   923  00073E  D009               	goto	l1718
   924  000740  C01B  F014         	movff	printf@flag,??_printf
   925  000744  0E03               	movlw	3
   926  000746  1614               	andwf	??_printf,f,c
   927  000748  B4D8               	btfsc	status,2,c
   928  00074A  D003               	goto	l1718
   929                           
   930                           ;doprnt.c: 1346: width--;
   931  00074C  061E               	decf	printf@width,f,c
   932  00074E  A0D8               	btfss	status,0,c
   933  000750  061F               	decf	printf@width+1,f,c
   934  000752                     l1718:
   935                           
   936                           ;doprnt.c: 1381: if(width > c)
   937  000752  0E80               	movlw	128
   938  000754  BE20               	btfsc	printf@c,7,c
   939  000756  0E7F               	movlw	127
   940  000758  6E14               	movwf	??_printf& (0+255),c
   941  00075A  501E               	movf	printf@width,w,c
   942  00075C  5C20               	subwf	printf@c,w,c
   943  00075E  501F               	movf	printf@width+1,w,c
   944  000760  0A80               	xorlw	128
   945  000762  5814               	subwfb	??_printf& (0+255),w,c
   946  000764  B0D8               	btfsc	status,0,c
   947  000766  D007               	goto	l1722
   948                           
   949                           ;doprnt.c: 1382: width -= c;
   950  000768  5020               	movf	printf@c,w,c
   951  00076A  5E1E               	subwf	printf@width,f,c
   952  00076C  0E00               	movlw	0
   953  00076E  BE20               	btfsc	printf@c,7,c
   954  000770  0EFF               	movlw	255
   955  000772  5A1F               	subwfb	printf@width+1,f,c
   956  000774  D004               	goto	l1724
   957  000776                     l1722:
   958                           
   959                           ;doprnt.c: 1383: else
   960                           ;doprnt.c: 1384: width = 0;
   961  000776  0E00               	movlw	0
   962  000778  6E1F               	movwf	printf@width+1,c
   963  00077A  0E00               	movlw	0
   964  00077C  6E1E               	movwf	printf@width,c
   965  00077E                     l1724:
   966                           
   967                           ;doprnt.c: 1422: {
   968                           ;doprnt.c: 1424: if(width
   969                           ;doprnt.c: 1428: )
   970  00077E  501E               	movf	printf@width,w,c
   971  000780  101F               	iorwf	printf@width+1,w,c
   972  000782  B4D8               	btfsc	status,2,c
   973  000784  D00A               	goto	l1730
   974  000786                     l1726:
   975                           
   976                           ;doprnt.c: 1430: (putch(' ') );
   977  000786  0E20               	movlw	32
   978  000788  ECBD  F007         	call	_putch
   979                           
   980                           ;doprnt.c: 1431: while(--width);
   981  00078C  061E               	decf	printf@width,f,c
   982  00078E  A0D8               	btfss	status,0,c
   983  000790  061F               	decf	printf@width+1,f,c
   984  000792  501E               	movf	printf@width,w,c
   985  000794  101F               	iorwf	printf@width+1,w,c
   986  000796  A4D8               	btfss	status,2,c
   987  000798  D7F6               	goto	l1726
   988  00079A                     l1730:
   989                           
   990                           ;doprnt.c: 1438: if(flag & 0x03)
   991  00079A  C01B  F014         	movff	printf@flag,??_printf
   992  00079E  0E03               	movlw	3
   993  0007A0  1614               	andwf	??_printf,f,c
   994  0007A2  B4D8               	btfsc	status,2,c
   995  0007A4  D003               	goto	l1734
   996                           
   997                           ;doprnt.c: 1439: (putch('-') );
   998  0007A6  0E2D               	movlw	45
   999  0007A8  ECBD  F007         	call	_putch
  1000  0007AC                     l1734:
  1001                           
  1002                           ;doprnt.c: 1469: }
  1003                           ;doprnt.c: 1472: prec = c;
  1004  0007AC  C020  F01A         	movff	printf@c,printf@prec
  1005                           
  1006                           ;doprnt.c: 1474: while(prec--) {
  1007  0007B0  D024               	goto	l1740
  1008  0007B2                     l1736:
  1009                           
  1010                           ;doprnt.c: 1478: {
  1011                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1012  0007B2  501A               	movf	printf@prec,w,c
  1013  0007B4  0D02               	mullw	2
  1014  0007B6  0E01               	movlw	low _dpowers
  1015  0007B8  24F3               	addwf	prodl,w,c
  1016  0007BA  6EF6               	movwf	tblptrl,c
  1017  0007BC  0E06               	movlw	high _dpowers
  1018  0007BE  20F4               	addwfc	prodh,w,c
  1019  0007C0  6EF7               	movwf	tblptrh,c
  1020  0007C2                     	if	0	;There are less than 3 active tblptr bytes
  1021  0007C2                     	endif
  1022  0007C2  0009               	tblrd		*+
  1023  0007C4  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1024  0007C8  000A               	tblrd		*-
  1025  0007CA  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1026  0007CE  C01C  F001         	movff	printf@val,___lwdiv@dividend
  1027  0007D2  C01D  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1028  0007D6  EC94  F007         	call	___lwdiv	;wreg free
  1029  0007DA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1030  0007DE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1031  0007E2  0E00               	movlw	0
  1032  0007E4  6E0B               	movwf	___lwmod@divisor+1,c
  1033  0007E6  0E0A               	movlw	10
  1034  0007E8  6E0A               	movwf	___lwmod@divisor,c
  1035  0007EA  EC05  F008         	call	___lwmod	;wreg free
  1036  0007EE  5008               	movf	?___lwmod,w,c
  1037  0007F0  0F30               	addlw	48
  1038  0007F2  6E20               	movwf	printf@c,c
  1039                           
  1040                           ;doprnt.c: 1523: }
  1041                           ;doprnt.c: 1524: (putch(c) );
  1042  0007F4  5020               	movf	printf@c,w,c
  1043  0007F6  ECBD  F007         	call	_putch
  1044  0007FA                     l1740:
  1045  0007FA  061A               	decf	printf@prec,f,c
  1046  0007FC  281A               	incf	printf@prec,w,c
  1047  0007FE  A4D8               	btfss	status,2,c
  1048  000800  D7D8               	goto	l1736
  1049  000802                     l1742:
  1050  000802  C010  FFF6         	movff	printf@f,tblptrl
  1051  000806  C011  FFF7         	movff	printf@f+1,tblptrh
  1052  00080A  4A10               	infsnz	printf@f,f,c
  1053  00080C  2A11               	incf	printf@f+1,f,c
  1054  00080E                     	if	0	;tblptru may be non-zero
  1055  00080E                     	endif
  1056  00080E                     	if	0	;tblptru may be non-zero
  1057  00080E                     	endif
  1058  00080E  0008               	tblrd		*
  1059  000810  CFF5 F020          	movff	tablat,printf@c
  1060  000814  5020               	movf	printf@c,w,c
  1061  000816  B4D8               	btfsc	status,2,c
  1062  000818  0012               	return	
  1063  00081A  D705               	goto	l1666
  1064  00081C                     __end_of_printf:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           postinc2	equ	0xFDE
  1077                           postdec2	equ	0xFDD
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function _putch *****************
  1083 ;; Defined at:
  1084 ;;		line 87 in file "hd44780.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  c               1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  c               1   14[COMRAM] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1098 ;;      Params:         0       0       0       0       0       0       0
  1099 ;;      Locals:         1       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0
  1101 ;;      Totals:         1       0       0       0       0       0       0
  1102 ;;Total ram usage:        1 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    4
  1105 ;; This function calls:
  1106 ;;		_HD44780_CursorSet
  1107 ;;		_HD44780_Data
  1108 ;; This function is called by:
  1109 ;;		_printf
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text2
  1114  000F7A                     __ptext2:
  1115                           	opt stack 0
  1116  000F7A                     _putch:
  1117                           	opt stack 25
  1118                           
  1119                           ;incstack = 0
  1120                           ;putch@c stored from wreg
  1121  000F7A  6E0F               	movwf	putch@c,c
  1122                           
  1123                           ;hd44780.c: 89: if (HD44780_Opts.currentX >= HD44780_Opts.Cols) {
  1124  000F7C  5031               	movf	_HD44780_Opts+4,w,c
  1125  000F7E  5C32               	subwf	_HD44780_Opts+5,w,c
  1126  000F80  A0D8               	btfss	status,0,c
  1127  000F82  D008               	goto	l1478
  1128                           
  1129                           ;hd44780.c: 90: HD44780_Opts.currentX = 0;
  1130  000F84  0E00               	movlw	0
  1131  000F86  6E32               	movwf	_HD44780_Opts+5,c
  1132                           
  1133                           ;hd44780.c: 91: HD44780_Opts.currentY++;
  1134  000F88  2A33               	incf	_HD44780_Opts+6,f,c
  1135                           
  1136                           ;hd44780.c: 92: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.currentY);
  1137  000F8A  C033  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  1138  000F8E  5032               	movf	_HD44780_Opts+5,w,c
  1139  000F90  ECE4  F007         	call	_HD44780_CursorSet
  1140  000F94                     l1478:
  1141                           
  1142                           ;hd44780.c: 93: }
  1143                           ;hd44780.c: 94: if (c == '\n') {
  1144  000F94  0E0A               	movlw	10
  1145  000F96  180F               	xorwf	putch@c,w,c
  1146  000F98  A4D8               	btfss	status,2,c
  1147  000F9A  D007               	goto	l1484
  1148                           
  1149                           ;hd44780.c: 95: HD44780_Opts.currentY++;
  1150  000F9C  2A33               	incf	_HD44780_Opts+6,f,c
  1151                           
  1152                           ;hd44780.c: 96: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.currentY);
  1153  000F9E  C033  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  1154  000FA2  5032               	movf	_HD44780_Opts+5,w,c
  1155  000FA4  ECE4  F007         	call	_HD44780_CursorSet
  1156                           
  1157                           ;hd44780.c: 97: } else if (c == '\r') {
  1158  000FA8  0012               	return	
  1159  000FAA                     l1484:
  1160  000FAA  0E0D               	movlw	13
  1161  000FAC  180F               	xorwf	putch@c,w,c
  1162  000FAE  A4D8               	btfss	status,2,c
  1163  000FB0  D006               	goto	l1488
  1164                           
  1165                           ;hd44780.c: 98: HD44780_CursorSet(0, HD44780_Opts.currentY);
  1166  000FB2  C033  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  1167  000FB6  0E00               	movlw	0
  1168  000FB8  ECE4  F007         	call	_HD44780_CursorSet
  1169                           
  1170                           ;hd44780.c: 99: } else {
  1171  000FBC  0012               	return	
  1172  000FBE                     l1488:
  1173                           
  1174                           ;hd44780.c: 100: HD44780_Data(c);
  1175  000FBE  500F               	movf	putch@c,w,c
  1176  000FC0  ECDD  F008         	call	_HD44780_Data
  1177                           
  1178                           ;hd44780.c: 101: HD44780_Opts.currentX++;
  1179  000FC4  2A32               	incf	_HD44780_Opts+5,f,c
  1180  000FC6  0012               	return	
  1181  000FC8                     __end_of_putch:
  1182                           	opt stack 0
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           prodh	equ	0xFF4
  1188                           prodl	equ	0xFF3
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           postinc2	equ	0xFDE
  1194                           postdec2	equ	0xFDD
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _HD44780_Data *****************
  1200 ;; Defined at:
  1201 ;;		line 273 in file "hd44780.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  data            1    wreg     unsigned char 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  data            1    7[COMRAM] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1215 ;;      Params:         0       0       0       0       0       0       0
  1216 ;;      Locals:         1       0       0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0
  1218 ;;      Totals:         1       0       0       0       0       0       0
  1219 ;;Total ram usage:        1 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    2
  1222 ;; This function calls:
  1223 ;;		_HD44780_Cmd4bit
  1224 ;; This function is called by:
  1225 ;;		_putch
  1226 ;;		_HD44780_Puts
  1227 ;;		_HD44780_CreateChar
  1228 ;;		_HD44780_PutCustom
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233  0011BA                     __ptext3:
  1234                           	opt stack 0
  1235  0011BA                     _HD44780_Data:
  1236                           	opt stack 26
  1237                           
  1238                           ;incstack = 0
  1239                           ;HD44780_Data@data stored from wreg
  1240  0011BA  6E08               	movwf	HD44780_Data@data,c
  1241                           
  1242                           ;hd44780.c: 275: PORTBbits.RB2 = 1;
  1243  0011BC  8481               	bsf	3969,2,c	;volatile
  1244                           
  1245                           ;hd44780.c: 278: HD44780_Cmd4bit(data >> 4);
  1246  0011BE  3808               	swapf	HD44780_Data@data,w,c
  1247  0011C0  0B0F               	andlw	15
  1248  0011C2  EC21  F007         	call	_HD44780_Cmd4bit
  1249                           
  1250                           ;hd44780.c: 280: HD44780_Cmd4bit(data & 0x0F);
  1251  0011C6  5008               	movf	HD44780_Data@data,w,c
  1252  0011C8  0B0F               	andlw	15
  1253  0011CA  EC21  F007         	call	_HD44780_Cmd4bit
  1254  0011CE  0012               	return		;funcret
  1255  0011D0                     __end_of_HD44780_Data:
  1256                           	opt stack 0
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           prodh	equ	0xFF4
  1262                           prodl	equ	0xFF3
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           postinc2	equ	0xFDE
  1268                           postdec2	equ	0xFDD
  1269                           fsr2h	equ	0xFDA
  1270                           fsr2l	equ	0xFD9
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function _HD44780_CursorSet *****************
  1274 ;; Defined at:
  1275 ;;		line 246 in file "hd44780.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  col             1    wreg     unsigned char 
  1278 ;;  row             1    8[COMRAM] unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  col             1   13[COMRAM] unsigned char 
  1281 ;;  row_offsets     4    9[COMRAM] unsigned char [4]
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1291 ;;      Params:         1       0       0       0       0       0       0
  1292 ;;      Locals:         5       0       0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0
  1294 ;;      Totals:         6       0       0       0       0       0       0
  1295 ;;Total ram usage:        6 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    3
  1298 ;; This function calls:
  1299 ;;		_HD44780_Cmd
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;;		_putch
  1303 ;;		_HD44780_Puts
  1304 ;;		_HD44780_PutCustom
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text4
  1309  000FC8                     __ptext4:
  1310                           	opt stack 0
  1311  000FC8                     _HD44780_CursorSet:
  1312                           	opt stack 25
  1313                           
  1314                           ;incstack = 0
  1315                           ;HD44780_CursorSet@col stored from wreg
  1316  000FC8  6E0E               	movwf	HD44780_CursorSet@col,c
  1317                           
  1318                           ;hd44780.c: 247: char row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  1319  000FCA  C037  F00A         	movff	HD44780_CursorSet@F4227,HD44780_CursorSet@row_offsets
  1320  000FCE  C038  F00B         	movff	HD44780_CursorSet@F4227+1,HD44780_CursorSet@row_offsets+1
  1321  000FD2  C039  F00C         	movff	HD44780_CursorSet@F4227+2,HD44780_CursorSet@row_offsets+2
  1322  000FD6  C03A  F00D         	movff	HD44780_CursorSet@F4227+3,HD44780_CursorSet@row_offsets+3
  1323                           
  1324                           ;hd44780.c: 250: if (row >= HD44780_Opts.Rows) {
  1325  000FDA  5030               	movf	_HD44780_Opts+3,w,c
  1326  000FDC  5C09               	subwf	HD44780_CursorSet@row,w,c
  1327  000FDE  A0D8               	btfss	status,0,c
  1328  000FE0  D002               	goto	l1460
  1329                           
  1330                           ;hd44780.c: 251: row = 0;
  1331  000FE2  0E00               	movlw	0
  1332  000FE4  6E09               	movwf	HD44780_CursorSet@row,c
  1333  000FE6                     l1460:
  1334                           
  1335                           ;hd44780.c: 252: }
  1336                           ;hd44780.c: 255: HD44780_Opts.currentX = col;
  1337  000FE6  C00E  F032         	movff	HD44780_CursorSet@col,_HD44780_Opts+5
  1338                           
  1339                           ;hd44780.c: 256: HD44780_Opts.currentY = row;
  1340  000FEA  C009  F033         	movff	HD44780_CursorSet@row,_HD44780_Opts+6
  1341                           
  1342                           ;hd44780.c: 259: HD44780_Cmd(0x80 | (col + row_offsets[row]));
  1343  000FEE  5009               	movf	HD44780_CursorSet@row,w,c
  1344  000FF0  0D01               	mullw	1
  1345  000FF2  0E0A               	movlw	low HD44780_CursorSet@row_offsets
  1346  000FF4  24F3               	addwf	prodl,w,c
  1347  000FF6  6ED9               	movwf	fsr2l,c
  1348  000FF8  0E00               	movlw	high HD44780_CursorSet@row_offsets
  1349  000FFA  20F4               	addwfc	prodh,w,c
  1350  000FFC  6EDA               	movwf	fsr2h,c
  1351  000FFE  50DF               	movf	indf2,w,c
  1352  001000  240E               	addwf	HD44780_CursorSet@col,w,c
  1353  001002  0980               	iorlw	128
  1354  001004  ECE8  F008         	call	_HD44780_Cmd
  1355  001008  0012               	return		;funcret
  1356  00100A                     __end_of_HD44780_CursorSet:
  1357                           	opt stack 0
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           prodh	equ	0xFF4
  1363                           prodl	equ	0xFF3
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1l	equ	0xFE1
  1368                           indf2	equ	0xFDF
  1369                           postinc2	equ	0xFDE
  1370                           postdec2	equ	0xFDD
  1371                           fsr2h	equ	0xFDA
  1372                           fsr2l	equ	0xFD9
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _isdigit *****************
  1376 ;; Defined at:
  1377 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  c               1    wreg     unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  c               1    2[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1391 ;;      Params:         0       0       0       0       0       0       0
  1392 ;;      Locals:         2       0       0       0       0       0       0
  1393 ;;      Temps:          1       0       0       0       0       0       0
  1394 ;;      Totals:         3       0       0       0       0       0       0
  1395 ;;Total ram usage:        3 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_printf
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text5
  1405  001182                     __ptext5:
  1406                           	opt stack 0
  1407  001182                     _isdigit:
  1408                           	opt stack 29
  1409                           
  1410                           ;incstack = 0
  1411                           ;isdigit@c stored from wreg
  1412  001182  6E03               	movwf	isdigit@c,c
  1413  001184  0E00               	movlw	0
  1414  001186  6E02               	movwf	_isdigit$901,c
  1415  001188  0E3A               	movlw	58
  1416  00118A  6003               	cpfslt	isdigit@c,c
  1417  00118C  D005               	goto	l1508
  1418  00118E  0E2F               	movlw	47
  1419  001190  6403               	cpfsgt	isdigit@c,c
  1420  001192  D002               	goto	l1508
  1421  001194  0E01               	movlw	1
  1422  001196  6E02               	movwf	_isdigit$901,c
  1423  001198                     l1508:
  1424  001198  C002  F001         	movff	_isdigit$901,??_isdigit
  1425  00119C  3001               	rrcf	??_isdigit,w,c
  1426  00119E  0012               	return	
  1427  0011A0                     __end_of_isdigit:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           tblptrh	equ	0xFF7
  1431                           tblptrl	equ	0xFF6
  1432                           tablat	equ	0xFF5
  1433                           prodh	equ	0xFF4
  1434                           prodl	equ	0xFF3
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           postdec1	equ	0xFE5
  1438                           fsr1l	equ	0xFE1
  1439                           indf2	equ	0xFDF
  1440                           postinc2	equ	0xFDE
  1441                           postdec2	equ	0xFDD
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function ___wmul *****************
  1447 ;; Defined at:
  1448 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  multiplier      2    0[COMRAM] unsigned int 
  1451 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  product         2    4[COMRAM] unsigned int 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2    0[COMRAM] unsigned int 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, prodl, prodh
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1463 ;;      Params:         4       0       0       0       0       0       0
  1464 ;;      Locals:         2       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0
  1466 ;;      Totals:         6       0       0       0       0       0       0
  1467 ;;Total ram usage:        6 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_printf
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text6
  1477  0010EC                     __ptext6:
  1478                           	opt stack 0
  1479  0010EC                     ___wmul:
  1480                           	opt stack 29
  1481                           
  1482                           ;incstack = 0
  1483  0010EC  5001               	movf	___wmul@multiplier,w,c
  1484  0010EE  0203               	mulwf	___wmul@multiplicand,c
  1485  0010F0  CFF3 F005          	movff	prodl,___wmul@product
  1486  0010F4  CFF4 F006          	movff	prodh,___wmul@product+1
  1487  0010F8  5001               	movf	___wmul@multiplier,w,c
  1488  0010FA  0204               	mulwf	___wmul@multiplicand+1,c
  1489  0010FC  50F3               	movf	prodl,w,c
  1490  0010FE  2606               	addwf	___wmul@product+1,f,c
  1491  001100  5002               	movf	___wmul@multiplier+1,w,c
  1492  001102  0203               	mulwf	___wmul@multiplicand,c
  1493  001104  50F3               	movf	prodl,w,c
  1494  001106  2606               	addwf	___wmul@product+1,f,c
  1495  001108  C005  F001         	movff	___wmul@product,?___wmul
  1496  00110C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1497  001110  0012               	return	
  1498  001112                     __end_of___wmul:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           prodh	equ	0xFF4
  1505                           prodl	equ	0xFF3
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           postdec1	equ	0xFE5
  1509                           fsr1l	equ	0xFE1
  1510                           indf2	equ	0xFDF
  1511                           postinc2	equ	0xFDE
  1512                           postdec2	equ	0xFDD
  1513                           fsr2h	equ	0xFDA
  1514                           fsr2l	equ	0xFD9
  1515                           status	equ	0xFD8
  1516                           
  1517 ;; *************** function ___lwmod *****************
  1518 ;; Defined at:
  1519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  dividend        2    7[COMRAM] unsigned int 
  1522 ;;  divisor         2    9[COMRAM] unsigned int 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  counter         1   11[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    7[COMRAM] unsigned int 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1534 ;;      Params:         4       0       0       0       0       0       0
  1535 ;;      Locals:         1       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0
  1537 ;;      Totals:         5       0       0       0       0       0       0
  1538 ;;Total ram usage:        5 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_printf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text7
  1548  00100A                     __ptext7:
  1549                           	opt stack 0
  1550  00100A                     ___lwmod:
  1551                           	opt stack 29
  1552                           
  1553                           ;incstack = 0
  1554  00100A  500A               	movf	___lwmod@divisor,w,c
  1555  00100C  100B               	iorwf	___lwmod@divisor+1,w,c
  1556  00100E  B4D8               	btfsc	status,2,c
  1557  001010  D018               	goto	l639
  1558  001012  0E01               	movlw	1
  1559  001014  6E0C               	movwf	___lwmod@counter,c
  1560  001016  D004               	goto	l1582
  1561  001018                     l1580:
  1562  001018  90D8               	bcf	status,0,c
  1563  00101A  360A               	rlcf	___lwmod@divisor,f,c
  1564  00101C  360B               	rlcf	___lwmod@divisor+1,f,c
  1565  00101E  2A0C               	incf	___lwmod@counter,f,c
  1566  001020                     l1582:
  1567  001020  AE0B               	btfss	___lwmod@divisor+1,7,c
  1568  001022  D7FA               	goto	l1580
  1569  001024                     l1584:
  1570  001024  500A               	movf	___lwmod@divisor,w,c
  1571  001026  5C08               	subwf	___lwmod@dividend,w,c
  1572  001028  500B               	movf	___lwmod@divisor+1,w,c
  1573  00102A  5809               	subwfb	___lwmod@dividend+1,w,c
  1574  00102C  A0D8               	btfss	status,0,c
  1575  00102E  D004               	goto	l1588
  1576  001030  500A               	movf	___lwmod@divisor,w,c
  1577  001032  5E08               	subwf	___lwmod@dividend,f,c
  1578  001034  500B               	movf	___lwmod@divisor+1,w,c
  1579  001036  5A09               	subwfb	___lwmod@dividend+1,f,c
  1580  001038                     l1588:
  1581  001038  90D8               	bcf	status,0,c
  1582  00103A  320B               	rrcf	___lwmod@divisor+1,f,c
  1583  00103C  320A               	rrcf	___lwmod@divisor,f,c
  1584  00103E  2E0C               	decfsz	___lwmod@counter,f,c
  1585  001040  D7F1               	goto	l1584
  1586  001042                     l639:
  1587  001042  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1588  001046  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1589  00104A  0012               	return		;funcret
  1590  00104C                     __end_of___lwmod:
  1591                           	opt stack 0
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           prodh	equ	0xFF4
  1597                           prodl	equ	0xFF3
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1l	equ	0xFE1
  1602                           indf2	equ	0xFDF
  1603                           postinc2	equ	0xFDE
  1604                           postdec2	equ	0xFDD
  1605                           fsr2h	equ	0xFDA
  1606                           fsr2l	equ	0xFD9
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function ___lwdiv *****************
  1610 ;; Defined at:
  1611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  dividend        2    0[COMRAM] unsigned int 
  1614 ;;  divisor         2    2[COMRAM] unsigned int 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  quotient        2    4[COMRAM] unsigned int 
  1617 ;;  counter         1    6[COMRAM] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2    0[COMRAM] unsigned int 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1627 ;;      Params:         4       0       0       0       0       0       0
  1628 ;;      Locals:         3       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0
  1630 ;;      Totals:         7       0       0       0       0       0       0
  1631 ;;Total ram usage:        7 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_printf
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text8
  1641  000F28                     __ptext8:
  1642                           	opt stack 0
  1643  000F28                     ___lwdiv:
  1644                           	opt stack 29
  1645                           
  1646                           ;incstack = 0
  1647  000F28  0E00               	movlw	0
  1648  000F2A  6E06               	movwf	___lwdiv@quotient+1,c
  1649  000F2C  0E00               	movlw	0
  1650  000F2E  6E05               	movwf	___lwdiv@quotient,c
  1651  000F30  5003               	movf	___lwdiv@divisor,w,c
  1652  000F32  1004               	iorwf	___lwdiv@divisor+1,w,c
  1653  000F34  B4D8               	btfsc	status,2,c
  1654  000F36  D01C               	goto	l629
  1655  000F38  0E01               	movlw	1
  1656  000F3A  6E07               	movwf	___lwdiv@counter,c
  1657  000F3C  D004               	goto	l1562
  1658  000F3E                     l1560:
  1659  000F3E  90D8               	bcf	status,0,c
  1660  000F40  3603               	rlcf	___lwdiv@divisor,f,c
  1661  000F42  3604               	rlcf	___lwdiv@divisor+1,f,c
  1662  000F44  2A07               	incf	___lwdiv@counter,f,c
  1663  000F46                     l1562:
  1664  000F46  AE04               	btfss	___lwdiv@divisor+1,7,c
  1665  000F48  D7FA               	goto	l1560
  1666  000F4A                     l1564:
  1667  000F4A  90D8               	bcf	status,0,c
  1668  000F4C  3605               	rlcf	___lwdiv@quotient,f,c
  1669  000F4E  3606               	rlcf	___lwdiv@quotient+1,f,c
  1670  000F50  5003               	movf	___lwdiv@divisor,w,c
  1671  000F52  5C01               	subwf	___lwdiv@dividend,w,c
  1672  000F54  5004               	movf	___lwdiv@divisor+1,w,c
  1673  000F56  5802               	subwfb	___lwdiv@dividend+1,w,c
  1674  000F58  A0D8               	btfss	status,0,c
  1675  000F5A  D005               	goto	l1572
  1676  000F5C  5003               	movf	___lwdiv@divisor,w,c
  1677  000F5E  5E01               	subwf	___lwdiv@dividend,f,c
  1678  000F60  5004               	movf	___lwdiv@divisor+1,w,c
  1679  000F62  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1680  000F64  8005               	bsf	___lwdiv@quotient,0,c
  1681  000F66                     l1572:
  1682  000F66  90D8               	bcf	status,0,c
  1683  000F68  3204               	rrcf	___lwdiv@divisor+1,f,c
  1684  000F6A  3203               	rrcf	___lwdiv@divisor,f,c
  1685  000F6C  2E07               	decfsz	___lwdiv@counter,f,c
  1686  000F6E  D7ED               	goto	l1564
  1687  000F70                     l629:
  1688  000F70  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1689  000F74  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1690  000F78  0012               	return		;funcret
  1691  000F7A                     __end_of___lwdiv:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           postdec1	equ	0xFE5
  1702                           fsr1l	equ	0xFE1
  1703                           indf2	equ	0xFDF
  1704                           postinc2	equ	0xFDE
  1705                           postdec2	equ	0xFDD
  1706                           fsr2h	equ	0xFDA
  1707                           fsr2l	equ	0xFD9
  1708                           status	equ	0xFD8
  1709                           
  1710 ;; *************** function ___fttol *****************
  1711 ;; Defined at:
  1712 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  f1              3    0[COMRAM] float 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  lval            4   10[COMRAM] unsigned long 
  1717 ;;  exp1            1   14[COMRAM] unsigned char 
  1718 ;;  sign1           1    9[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  4    0[COMRAM] long 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1728 ;;      Params:         4       0       0       0       0       0       0
  1729 ;;      Locals:         6       0       0       0       0       0       0
  1730 ;;      Temps:          5       0       0       0       0       0       0
  1731 ;;      Totals:        15       0       0       0       0       0       0
  1732 ;;Total ram usage:       15 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text9
  1742  000B08                     __ptext9:
  1743                           	opt stack 0
  1744  000B08                     ___fttol:
  1745                           	opt stack 30
  1746                           
  1747                           ;incstack = 0
  1748  000B08  C003  F005         	movff	___fttol@f1+2,??___fttol
  1749  000B0C  6A06               	clrf	(??___fttol+1)& (0+255),c
  1750  000B0E  6A07               	clrf	(??___fttol+2)& (0+255),c
  1751  000B10  3402               	rlcf	___fttol@f1+1,w,c
  1752  000B12  3605               	rlcf	??___fttol& (0+255),f,c
  1753  000B14  E301               	bnc	u1721
  1754  000B16  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1755  000B18                     u1721:
  1756  000B18  5005               	movf	??___fttol,w,c
  1757  000B1A  6E0F               	movwf	___fttol@exp1,c
  1758  000B1C  500F               	movf	___fttol@exp1,w,c
  1759  000B1E  A4D8               	btfss	status,2,c
  1760  000B20  D009               	goto	l1894
  1761  000B22  0E00               	movlw	0
  1762  000B24  6E01               	movwf	?___fttol,c
  1763  000B26  0E00               	movlw	0
  1764  000B28  6E02               	movwf	?___fttol+1,c
  1765  000B2A  0E00               	movlw	0
  1766  000B2C  6E03               	movwf	?___fttol+2,c
  1767  000B2E  0E00               	movlw	0
  1768  000B30  6E04               	movwf	?___fttol+3,c
  1769  000B32  0012               	return	
  1770  000B34                     l1894:
  1771  000B34  0E17               	movlw	23
  1772  000B36  6E05               	movwf	??___fttol& (0+255),c
  1773  000B38  C001  F006         	movff	___fttol@f1,??___fttol+1
  1774  000B3C  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1775  000B40  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1776  000B44  2805               	incf	??___fttol,w,c
  1777  000B46  6E09               	movwf	(??___fttol+4)& (0+255),c
  1778  000B48  D004               	goto	u1740
  1779  000B4A                     u1745:
  1780  000B4A  90D8               	bcf	status,0,c
  1781  000B4C  3208               	rrcf	??___fttol+3,f,c
  1782  000B4E  3207               	rrcf	??___fttol+2,f,c
  1783  000B50  3206               	rrcf	??___fttol+1,f,c
  1784  000B52                     u1740:
  1785  000B52  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1786  000B54  D7FA               	goto	u1745
  1787  000B56  5006               	movf	??___fttol+1,w,c
  1788  000B58  6E0A               	movwf	___fttol@sign1,c
  1789  000B5A  8E02               	bsf	___fttol@f1+1,7,c
  1790  000B5C  0EFF               	movlw	255
  1791  000B5E  1601               	andwf	___fttol@f1,f,c
  1792  000B60  0EFF               	movlw	255
  1793  000B62  1602               	andwf	___fttol@f1+1,f,c
  1794  000B64  0E00               	movlw	0
  1795  000B66  1603               	andwf	___fttol@f1+2,f,c
  1796  000B68  5001               	movf	___fttol@f1,w,c
  1797  000B6A  6E0B               	movwf	___fttol@lval,c
  1798  000B6C  5002               	movf	___fttol@f1+1,w,c
  1799  000B6E  6E0C               	movwf	___fttol@lval+1,c
  1800  000B70  5003               	movf	___fttol@f1+2,w,c
  1801  000B72  6E0D               	movwf	___fttol@lval+2,c
  1802  000B74  6A0E               	clrf	___fttol@lval+3,c
  1803  000B76  0E8E               	movlw	142
  1804  000B78  5E0F               	subwf	___fttol@exp1,f,c
  1805  000B7A  AE0F               	btfss	___fttol@exp1,7,c
  1806  000B7C  D016               	goto	l1916
  1807  000B7E  500F               	movf	___fttol@exp1,w,c
  1808  000B80  0A80               	xorlw	128
  1809  000B82  0F8F               	addlw	143
  1810  000B84  B0D8               	btfsc	status,0,c
  1811  000B86  D009               	goto	l1912
  1812  000B88  0E00               	movlw	0
  1813  000B8A  6E01               	movwf	?___fttol,c
  1814  000B8C  0E00               	movlw	0
  1815  000B8E  6E02               	movwf	?___fttol+1,c
  1816  000B90  0E00               	movlw	0
  1817  000B92  6E03               	movwf	?___fttol+2,c
  1818  000B94  0E00               	movlw	0
  1819  000B96  6E04               	movwf	?___fttol+3,c
  1820  000B98  0012               	return	
  1821  000B9A                     l1912:
  1822  000B9A  90D8               	bcf	status,0,c
  1823  000B9C  320E               	rrcf	___fttol@lval+3,f,c
  1824  000B9E  320D               	rrcf	___fttol@lval+2,f,c
  1825  000BA0  320C               	rrcf	___fttol@lval+1,f,c
  1826  000BA2  320B               	rrcf	___fttol@lval,f,c
  1827  000BA4  3E0F               	incfsz	___fttol@exp1,f,c
  1828  000BA6  D7F9               	goto	l1912
  1829  000BA8  D015               	goto	l1926
  1830  000BAA                     l1916:
  1831  000BAA  0E17               	movlw	23
  1832  000BAC  640F               	cpfsgt	___fttol@exp1,c
  1833  000BAE  D00F               	goto	l1924
  1834  000BB0  0E00               	movlw	0
  1835  000BB2  6E01               	movwf	?___fttol,c
  1836  000BB4  0E00               	movlw	0
  1837  000BB6  6E02               	movwf	?___fttol+1,c
  1838  000BB8  0E00               	movlw	0
  1839  000BBA  6E03               	movwf	?___fttol+2,c
  1840  000BBC  0E00               	movlw	0
  1841  000BBE  6E04               	movwf	?___fttol+3,c
  1842  000BC0  0012               	return	
  1843  000BC2                     l1922:
  1844  000BC2  90D8               	bcf	status,0,c
  1845  000BC4  360B               	rlcf	___fttol@lval,f,c
  1846  000BC6  360C               	rlcf	___fttol@lval+1,f,c
  1847  000BC8  360D               	rlcf	___fttol@lval+2,f,c
  1848  000BCA  360E               	rlcf	___fttol@lval+3,f,c
  1849  000BCC  060F               	decf	___fttol@exp1,f,c
  1850  000BCE                     l1924:
  1851  000BCE  500F               	movf	___fttol@exp1,w,c
  1852  000BD0  A4D8               	btfss	status,2,c
  1853  000BD2  D7F7               	goto	l1922
  1854  000BD4                     l1926:
  1855  000BD4  500A               	movf	___fttol@sign1,w,c
  1856  000BD6  B4D8               	btfsc	status,2,c
  1857  000BD8  D008               	goto	l1930
  1858  000BDA  1E0E               	comf	___fttol@lval+3,f,c
  1859  000BDC  1E0D               	comf	___fttol@lval+2,f,c
  1860  000BDE  1E0C               	comf	___fttol@lval+1,f,c
  1861  000BE0  6C0B               	negf	___fttol@lval,c
  1862  000BE2  0E00               	movlw	0
  1863  000BE4  220C               	addwfc	___fttol@lval+1,f,c
  1864  000BE6  220D               	addwfc	___fttol@lval+2,f,c
  1865  000BE8  220E               	addwfc	___fttol@lval+3,f,c
  1866  000BEA                     l1930:
  1867  000BEA  C00B  F001         	movff	___fttol@lval,?___fttol
  1868  000BEE  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1869  000BF2  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1870  000BF6  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1871  000BFA  0012               	return	
  1872  000BFC                     __end_of___fttol:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           prodh	equ	0xFF4
  1879                           prodl	equ	0xFF3
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           postdec1	equ	0xFE5
  1883                           fsr1l	equ	0xFE1
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           fsr2h	equ	0xFDA
  1888                           fsr2l	equ	0xFD9
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function ___ftneg *****************
  1892 ;; Defined at:
  1893 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftneg.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  f1              3    0[COMRAM] float 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  3    0[COMRAM] float 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1907 ;;      Params:         3       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0
  1910 ;;      Totals:         3       0       0       0       0       0       0
  1911 ;;Total ram usage:        3 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text10
  1921  00115E                     __ptext10:
  1922                           	opt stack 0
  1923  00115E                     ___ftneg:
  1924                           	opt stack 30
  1925                           
  1926                           ;incstack = 0
  1927  00115E  5001               	movf	___ftneg@f1,w,c
  1928  001160  1002               	iorwf	___ftneg@f1+1,w,c
  1929  001162  1003               	iorwf	___ftneg@f1+2,w,c
  1930  001164  B4D8               	btfsc	status,2,c
  1931  001166  D006               	goto	l526
  1932  001168  0E00               	movlw	0
  1933  00116A  1A01               	xorwf	___ftneg@f1,f,c
  1934  00116C  0E00               	movlw	0
  1935  00116E  1A02               	xorwf	___ftneg@f1+1,f,c
  1936  001170  0E80               	movlw	128
  1937  001172  1A03               	xorwf	___ftneg@f1+2,f,c
  1938  001174                     l526:
  1939  001174  C001  F001         	movff	___ftneg@f1,?___ftneg
  1940  001178  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  1941  00117C  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  1942  001180  0012               	return		;funcret
  1943  001182                     __end_of___ftneg:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1l	equ	0xFE1
  1955                           indf2	equ	0xFDF
  1956                           postinc2	equ	0xFDE
  1957                           postdec2	equ	0xFDD
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function ___ftmul *****************
  1963 ;; Defined at:
  1964 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  f1              3   24[COMRAM] float 
  1967 ;;  f2              3   27[COMRAM] float 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  f3_as_produc    3   34[COMRAM] unsigned um
  1970 ;;  sign            1   38[COMRAM] unsigned char 
  1971 ;;  cntr            1   37[COMRAM] unsigned char 
  1972 ;;  exp             1   33[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  3   24[COMRAM] float 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1982 ;;      Params:         6       0       0       0       0       0       0
  1983 ;;      Locals:         6       0       0       0       0       0       0
  1984 ;;      Temps:          3       0       0       0       0       0       0
  1985 ;;      Totals:        15       0       0       0       0       0       0
  1986 ;;Total ram usage:       15 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    1
  1989 ;; This function calls:
  1990 ;;		___ftpack
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text11
  1997  000BFC                     __ptext11:
  1998                           	opt stack 0
  1999  000BFC                     ___ftmul:
  2000                           	opt stack 29
  2001                           
  2002                           ;incstack = 0
  2003  000BFC  C01B  F01F         	movff	___ftmul@f1+2,??___ftmul
  2004  000C00  6A20               	clrf	(??___ftmul+1)& (0+255),c
  2005  000C02  6A21               	clrf	(??___ftmul+2)& (0+255),c
  2006  000C04  341A               	rlcf	___ftmul@f1+1,w,c
  2007  000C06  361F               	rlcf	??___ftmul& (0+255),f,c
  2008  000C08  E301               	bnc	u1641
  2009  000C0A  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  2010  000C0C                     u1641:
  2011  000C0C  501F               	movf	??___ftmul,w,c
  2012  000C0E  6E22               	movwf	___ftmul@exp,c
  2013  000C10  5022               	movf	___ftmul@exp,w,c
  2014  000C12  A4D8               	btfss	status,2,c
  2015  000C14  D007               	goto	l1830
  2016  000C16  0E00               	movlw	0
  2017  000C18  6E19               	movwf	?___ftmul,c
  2018  000C1A  0E00               	movlw	0
  2019  000C1C  6E1A               	movwf	?___ftmul+1,c
  2020  000C1E  0E00               	movlw	0
  2021  000C20  6E1B               	movwf	?___ftmul+2,c
  2022  000C22  0012               	return	
  2023  000C24                     l1830:
  2024  000C24  C01E  F01F         	movff	___ftmul@f2+2,??___ftmul
  2025  000C28  6A20               	clrf	(??___ftmul+1)& (0+255),c
  2026  000C2A  6A21               	clrf	(??___ftmul+2)& (0+255),c
  2027  000C2C  341D               	rlcf	___ftmul@f2+1,w,c
  2028  000C2E  361F               	rlcf	??___ftmul& (0+255),f,c
  2029  000C30  E301               	bnc	u1661
  2030  000C32  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  2031  000C34                     u1661:
  2032  000C34  501F               	movf	??___ftmul,w,c
  2033  000C36  6E27               	movwf	___ftmul@sign,c
  2034  000C38  5027               	movf	___ftmul@sign,w,c
  2035  000C3A  A4D8               	btfss	status,2,c
  2036  000C3C  D007               	goto	l1836
  2037  000C3E  0E00               	movlw	0
  2038  000C40  6E19               	movwf	?___ftmul,c
  2039  000C42  0E00               	movlw	0
  2040  000C44  6E1A               	movwf	?___ftmul+1,c
  2041  000C46  0E00               	movlw	0
  2042  000C48  6E1B               	movwf	?___ftmul+2,c
  2043  000C4A  0012               	return	
  2044  000C4C                     l1836:
  2045  000C4C  5027               	movf	___ftmul@sign,w,c
  2046  000C4E  0F7B               	addlw	123
  2047  000C50  2622               	addwf	___ftmul@exp,f,c
  2048  000C52  C01B  F027         	movff	___ftmul@f1+2,___ftmul@sign
  2049  000C56  501E               	movf	___ftmul@f2+2,w,c
  2050  000C58  1A27               	xorwf	___ftmul@sign,f,c
  2051  000C5A  0E80               	movlw	128
  2052  000C5C  1627               	andwf	___ftmul@sign,f,c
  2053  000C5E  8E1A               	bsf	___ftmul@f1+1,7,c
  2054  000C60  8E1D               	bsf	___ftmul@f2+1,7,c
  2055  000C62  0EFF               	movlw	255
  2056  000C64  161C               	andwf	___ftmul@f2,f,c
  2057  000C66  0EFF               	movlw	255
  2058  000C68  161D               	andwf	___ftmul@f2+1,f,c
  2059  000C6A  0E00               	movlw	0
  2060  000C6C  161E               	andwf	___ftmul@f2+2,f,c
  2061  000C6E  0E00               	movlw	0
  2062  000C70  6E23               	movwf	___ftmul@f3_as_product,c
  2063  000C72  0E00               	movlw	0
  2064  000C74  6E24               	movwf	___ftmul@f3_as_product+1,c
  2065  000C76  0E00               	movlw	0
  2066  000C78  6E25               	movwf	___ftmul@f3_as_product+2,c
  2067  000C7A  0E07               	movlw	7
  2068  000C7C  6E26               	movwf	___ftmul@cntr,c
  2069  000C7E                     l1850:
  2070  000C7E  A019               	btfss	___ftmul@f1,0,c
  2071  000C80  D006               	goto	l1854
  2072  000C82  501C               	movf	___ftmul@f2,w,c
  2073  000C84  2623               	addwf	___ftmul@f3_as_product,f,c
  2074  000C86  501D               	movf	___ftmul@f2+1,w,c
  2075  000C88  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  2076  000C8A  501E               	movf	___ftmul@f2+2,w,c
  2077  000C8C  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  2078  000C8E                     l1854:
  2079  000C8E  90D8               	bcf	status,0,c
  2080  000C90  321B               	rrcf	___ftmul@f1+2,f,c
  2081  000C92  321A               	rrcf	___ftmul@f1+1,f,c
  2082  000C94  3219               	rrcf	___ftmul@f1,f,c
  2083  000C96  90D8               	bcf	status,0,c
  2084  000C98  361C               	rlcf	___ftmul@f2,f,c
  2085  000C9A  361D               	rlcf	___ftmul@f2+1,f,c
  2086  000C9C  361E               	rlcf	___ftmul@f2+2,f,c
  2087  000C9E  2E26               	decfsz	___ftmul@cntr,f,c
  2088  000CA0  D7EE               	goto	l1850
  2089  000CA2  0E09               	movlw	9
  2090  000CA4  6E26               	movwf	___ftmul@cntr,c
  2091  000CA6                     l1860:
  2092  000CA6  A019               	btfss	___ftmul@f1,0,c
  2093  000CA8  D006               	goto	l1864
  2094  000CAA  501C               	movf	___ftmul@f2,w,c
  2095  000CAC  2623               	addwf	___ftmul@f3_as_product,f,c
  2096  000CAE  501D               	movf	___ftmul@f2+1,w,c
  2097  000CB0  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  2098  000CB2  501E               	movf	___ftmul@f2+2,w,c
  2099  000CB4  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  2100  000CB6                     l1864:
  2101  000CB6  90D8               	bcf	status,0,c
  2102  000CB8  321B               	rrcf	___ftmul@f1+2,f,c
  2103  000CBA  321A               	rrcf	___ftmul@f1+1,f,c
  2104  000CBC  3219               	rrcf	___ftmul@f1,f,c
  2105  000CBE  90D8               	bcf	status,0,c
  2106  000CC0  3225               	rrcf	___ftmul@f3_as_product+2,f,c
  2107  000CC2  3224               	rrcf	___ftmul@f3_as_product+1,f,c
  2108  000CC4  3223               	rrcf	___ftmul@f3_as_product,f,c
  2109  000CC6  2E26               	decfsz	___ftmul@cntr,f,c
  2110  000CC8  D7EE               	goto	l1860
  2111  000CCA  C023  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2112  000CCE  C024  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2113  000CD2  C025  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2114  000CD6  C022  F004         	movff	___ftmul@exp,___ftpack@exp
  2115  000CDA  C027  F005         	movff	___ftmul@sign,___ftpack@sign
  2116  000CDE  EC78  F006         	call	___ftpack	;wreg free
  2117  000CE2  C001  F019         	movff	?___ftpack,?___ftmul
  2118  000CE6  C002  F01A         	movff	?___ftpack+1,?___ftmul+1
  2119  000CEA  C003  F01B         	movff	?___ftpack+2,?___ftmul+2
  2120  000CEE  0012               	return	
  2121  000CF0                     __end_of___ftmul:
  2122                           	opt stack 0
  2123                           tblptru	equ	0xFF8
  2124                           tblptrh	equ	0xFF7
  2125                           tblptrl	equ	0xFF6
  2126                           tablat	equ	0xFF5
  2127                           prodh	equ	0xFF4
  2128                           prodl	equ	0xFF3
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1l	equ	0xFE1
  2133                           indf2	equ	0xFDF
  2134                           postinc2	equ	0xFDE
  2135                           postdec2	equ	0xFDD
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function ___ftadd *****************
  2141 ;; Defined at:
  2142 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  f1              3   12[COMRAM] float 
  2145 ;;  f2              3   15[COMRAM] float 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  exp1            1   23[COMRAM] unsigned char 
  2148 ;;  exp2            1   22[COMRAM] unsigned char 
  2149 ;;  sign            1   21[COMRAM] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  3   12[COMRAM] float 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         6       0       0       0       0       0       0
  2160 ;;      Locals:         3       0       0       0       0       0       0
  2161 ;;      Temps:          3       0       0       0       0       0       0
  2162 ;;      Totals:        12       0       0       0       0       0       0
  2163 ;;Total ram usage:       12 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    1
  2166 ;; This function calls:
  2167 ;;		___ftpack
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text12
  2174  00081C                     __ptext12:
  2175                           	opt stack 0
  2176  00081C                     ___ftadd:
  2177                           	opt stack 29
  2178                           
  2179                           ;incstack = 0
  2180  00081C  C00F  F013         	movff	___ftadd@f1+2,??___ftadd
  2181  000820  6A14               	clrf	(??___ftadd+1)& (0+255),c
  2182  000822  6A15               	clrf	(??___ftadd+2)& (0+255),c
  2183  000824  340E               	rlcf	___ftadd@f1+1,w,c
  2184  000826  3613               	rlcf	??___ftadd& (0+255),f,c
  2185  000828  E301               	bnc	u1431
  2186  00082A  8014               	bsf	(??___ftadd+1)& (0+255),0,c
  2187  00082C                     u1431:
  2188  00082C  5013               	movf	??___ftadd,w,c
  2189  00082E  6E18               	movwf	___ftadd@exp1,c
  2190  000830  C012  F013         	movff	___ftadd@f2+2,??___ftadd
  2191  000834  6A14               	clrf	(??___ftadd+1)& (0+255),c
  2192  000836  6A15               	clrf	(??___ftadd+2)& (0+255),c
  2193  000838  3411               	rlcf	___ftadd@f2+1,w,c
  2194  00083A  3613               	rlcf	??___ftadd& (0+255),f,c
  2195  00083C  E301               	bnc	u1441
  2196  00083E  8014               	bsf	(??___ftadd+1)& (0+255),0,c
  2197  000840                     u1441:
  2198  000840  5013               	movf	??___ftadd,w,c
  2199  000842  6E17               	movwf	___ftadd@exp2,c
  2200  000844  5018               	movf	___ftadd@exp1,w,c
  2201  000846  B4D8               	btfsc	status,2,c
  2202  000848  D00B               	goto	l469
  2203  00084A  5017               	movf	___ftadd@exp2,w,c
  2204  00084C  5C18               	subwf	___ftadd@exp1,w,c
  2205  00084E  B0D8               	btfsc	status,0,c
  2206  000850  D00E               	goto	l1762
  2207  000852  5018               	movf	___ftadd@exp1,w,c
  2208  000854  0800               	sublw	0
  2209  000856  2417               	addwf	___ftadd@exp2,w,c
  2210  000858  6E13               	movwf	??___ftadd& (0+255),c
  2211  00085A  0E18               	movlw	24
  2212  00085C  6413               	cpfsgt	??___ftadd,c
  2213  00085E  D007               	goto	l1762
  2214  000860                     l469:
  2215  000860  C010  F00D         	movff	___ftadd@f2,?___ftadd
  2216  000864  C011  F00E         	movff	___ftadd@f2+1,?___ftadd+1
  2217  000868  C012  F00F         	movff	___ftadd@f2+2,?___ftadd+2
  2218  00086C  0012               	return	
  2219  00086E                     l1762:
  2220  00086E  5017               	movf	___ftadd@exp2,w,c
  2221  000870  B4D8               	btfsc	status,2,c
  2222  000872  D00B               	goto	l473
  2223  000874  5018               	movf	___ftadd@exp1,w,c
  2224  000876  5C17               	subwf	___ftadd@exp2,w,c
  2225  000878  B0D8               	btfsc	status,0,c
  2226  00087A  D00E               	goto	l1768
  2227  00087C  5017               	movf	___ftadd@exp2,w,c
  2228  00087E  0800               	sublw	0
  2229  000880  2418               	addwf	___ftadd@exp1,w,c
  2230  000882  6E13               	movwf	??___ftadd& (0+255),c
  2231  000884  0E18               	movlw	24
  2232  000886  6413               	cpfsgt	??___ftadd,c
  2233  000888  D007               	goto	l1768
  2234  00088A                     l473:
  2235  00088A  C00D  F00D         	movff	___ftadd@f1,?___ftadd
  2236  00088E  C00E  F00E         	movff	___ftadd@f1+1,?___ftadd+1
  2237  000892  C00F  F00F         	movff	___ftadd@f1+2,?___ftadd+2
  2238  000896  0012               	return	
  2239  000898                     l1768:
  2240  000898  0E06               	movlw	6
  2241  00089A  6E16               	movwf	___ftadd@sign,c
  2242  00089C  BE0F               	btfsc	___ftadd@f1+2,7,c
  2243  00089E  8E16               	bsf	___ftadd@sign,7,c
  2244  0008A0  BE12               	btfsc	___ftadd@f2+2,7,c
  2245  0008A2  8C16               	bsf	___ftadd@sign,6,c
  2246  0008A4  8E0E               	bsf	___ftadd@f1+1,7,c
  2247  0008A6  0EFF               	movlw	255
  2248  0008A8  160D               	andwf	___ftadd@f1,f,c
  2249  0008AA  0EFF               	movlw	255
  2250  0008AC  160E               	andwf	___ftadd@f1+1,f,c
  2251  0008AE  0E00               	movlw	0
  2252  0008B0  160F               	andwf	___ftadd@f1+2,f,c
  2253  0008B2  8E11               	bsf	___ftadd@f2+1,7,c
  2254  0008B4  0EFF               	movlw	255
  2255  0008B6  1610               	andwf	___ftadd@f2,f,c
  2256  0008B8  0EFF               	movlw	255
  2257  0008BA  1611               	andwf	___ftadd@f2+1,f,c
  2258  0008BC  0E00               	movlw	0
  2259  0008BE  1612               	andwf	___ftadd@f2+2,f,c
  2260  0008C0  5017               	movf	___ftadd@exp2,w,c
  2261  0008C2  5C18               	subwf	___ftadd@exp1,w,c
  2262  0008C4  B0D8               	btfsc	status,0,c
  2263  0008C6  D01B               	goto	l1794
  2264  0008C8                     l1784:
  2265  0008C8  90D8               	bcf	status,0,c
  2266  0008CA  3610               	rlcf	___ftadd@f2,f,c
  2267  0008CC  3611               	rlcf	___ftadd@f2+1,f,c
  2268  0008CE  3612               	rlcf	___ftadd@f2+2,f,c
  2269  0008D0  0617               	decf	___ftadd@exp2,f,c
  2270  0008D2  5018               	movf	___ftadd@exp1,w,c
  2271  0008D4  1817               	xorwf	___ftadd@exp2,w,c
  2272  0008D6  B4D8               	btfsc	status,2,c
  2273  0008D8  D00D               	goto	l1792
  2274  0008DA  0616               	decf	___ftadd@sign,f,c
  2275  0008DC  C016  F013         	movff	___ftadd@sign,??___ftadd
  2276  0008E0  0E07               	movlw	7
  2277  0008E2  1613               	andwf	??___ftadd,f,c
  2278  0008E4  B4D8               	btfsc	status,2,c
  2279  0008E6  D006               	goto	l1792
  2280  0008E8  D7EF               	goto	l1784
  2281  0008EA                     l1790:
  2282  0008EA  90D8               	bcf	status,0,c
  2283  0008EC  320F               	rrcf	___ftadd@f1+2,f,c
  2284  0008EE  320E               	rrcf	___ftadd@f1+1,f,c
  2285  0008F0  320D               	rrcf	___ftadd@f1,f,c
  2286  0008F2  2A18               	incf	___ftadd@exp1,f,c
  2287  0008F4                     l1792:
  2288  0008F4  5017               	movf	___ftadd@exp2,w,c
  2289  0008F6  1818               	xorwf	___ftadd@exp1,w,c
  2290  0008F8  B4D8               	btfsc	status,2,c
  2291  0008FA  D01F               	goto	l484
  2292  0008FC  D7F6               	goto	l1790
  2293  0008FE                     l1794:
  2294  0008FE  5018               	movf	___ftadd@exp1,w,c
  2295  000900  5C17               	subwf	___ftadd@exp2,w,c
  2296  000902  B0D8               	btfsc	status,0,c
  2297  000904  D01A               	goto	l484
  2298  000906                     l1796:
  2299  000906  90D8               	bcf	status,0,c
  2300  000908  360D               	rlcf	___ftadd@f1,f,c
  2301  00090A  360E               	rlcf	___ftadd@f1+1,f,c
  2302  00090C  360F               	rlcf	___ftadd@f1+2,f,c
  2303  00090E  0618               	decf	___ftadd@exp1,f,c
  2304  000910  5018               	movf	___ftadd@exp1,w,c
  2305  000912  1817               	xorwf	___ftadd@exp2,w,c
  2306  000914  B4D8               	btfsc	status,2,c
  2307  000916  D00D               	goto	l1804
  2308  000918  0616               	decf	___ftadd@sign,f,c
  2309  00091A  C016  F013         	movff	___ftadd@sign,??___ftadd
  2310  00091E  0E07               	movlw	7
  2311  000920  1613               	andwf	??___ftadd,f,c
  2312  000922  B4D8               	btfsc	status,2,c
  2313  000924  D006               	goto	l1804
  2314  000926  D7EF               	goto	l1796
  2315  000928                     l1802:
  2316  000928  90D8               	bcf	status,0,c
  2317  00092A  3212               	rrcf	___ftadd@f2+2,f,c
  2318  00092C  3211               	rrcf	___ftadd@f2+1,f,c
  2319  00092E  3210               	rrcf	___ftadd@f2,f,c
  2320  000930  2A17               	incf	___ftadd@exp2,f,c
  2321  000932                     l1804:
  2322  000932  5017               	movf	___ftadd@exp2,w,c
  2323  000934  1818               	xorwf	___ftadd@exp1,w,c
  2324  000936  A4D8               	btfss	status,2,c
  2325  000938  D7F7               	goto	l1802
  2326  00093A                     l484:
  2327  00093A  AE16               	btfss	___ftadd@sign,7,c
  2328  00093C  D00C               	goto	l493
  2329  00093E  0EFF               	movlw	255
  2330  000940  1A0D               	xorwf	___ftadd@f1,f,c
  2331  000942  0EFF               	movlw	255
  2332  000944  1A0E               	xorwf	___ftadd@f1+1,f,c
  2333  000946  0EFF               	movlw	255
  2334  000948  1A0F               	xorwf	___ftadd@f1+2,f,c
  2335  00094A  0E01               	movlw	1
  2336  00094C  260D               	addwf	___ftadd@f1,f,c
  2337  00094E  0E00               	movlw	0
  2338  000950  220E               	addwfc	___ftadd@f1+1,f,c
  2339  000952  0E00               	movlw	0
  2340  000954  220F               	addwfc	___ftadd@f1+2,f,c
  2341  000956                     l493:
  2342  000956  AC16               	btfss	___ftadd@sign,6,c
  2343  000958  D00C               	goto	l1810
  2344  00095A  0EFF               	movlw	255
  2345  00095C  1A10               	xorwf	___ftadd@f2,f,c
  2346  00095E  0EFF               	movlw	255
  2347  000960  1A11               	xorwf	___ftadd@f2+1,f,c
  2348  000962  0EFF               	movlw	255
  2349  000964  1A12               	xorwf	___ftadd@f2+2,f,c
  2350  000966  0E01               	movlw	1
  2351  000968  2610               	addwf	___ftadd@f2,f,c
  2352  00096A  0E00               	movlw	0
  2353  00096C  2211               	addwfc	___ftadd@f2+1,f,c
  2354  00096E  0E00               	movlw	0
  2355  000970  2212               	addwfc	___ftadd@f2+2,f,c
  2356  000972                     l1810:
  2357  000972  0E00               	movlw	0
  2358  000974  6E16               	movwf	___ftadd@sign,c
  2359  000976  500D               	movf	___ftadd@f1,w,c
  2360  000978  2610               	addwf	___ftadd@f2,f,c
  2361  00097A  500E               	movf	___ftadd@f1+1,w,c
  2362  00097C  2211               	addwfc	___ftadd@f2+1,f,c
  2363  00097E  500F               	movf	___ftadd@f1+2,w,c
  2364  000980  2212               	addwfc	___ftadd@f2+2,f,c
  2365  000982  AE12               	btfss	___ftadd@f2+2,7,c
  2366  000984  D00E               	goto	l1820
  2367  000986  0EFF               	movlw	255
  2368  000988  1A10               	xorwf	___ftadd@f2,f,c
  2369  00098A  0EFF               	movlw	255
  2370  00098C  1A11               	xorwf	___ftadd@f2+1,f,c
  2371  00098E  0EFF               	movlw	255
  2372  000990  1A12               	xorwf	___ftadd@f2+2,f,c
  2373  000992  0E01               	movlw	1
  2374  000994  2610               	addwf	___ftadd@f2,f,c
  2375  000996  0E00               	movlw	0
  2376  000998  2211               	addwfc	___ftadd@f2+1,f,c
  2377  00099A  0E00               	movlw	0
  2378  00099C  2212               	addwfc	___ftadd@f2+2,f,c
  2379  00099E  0E01               	movlw	1
  2380  0009A0  6E16               	movwf	___ftadd@sign,c
  2381  0009A2                     l1820:
  2382  0009A2  C010  F001         	movff	___ftadd@f2,___ftpack@arg
  2383  0009A6  C011  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2384  0009AA  C012  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2385  0009AE  C018  F004         	movff	___ftadd@exp1,___ftpack@exp
  2386  0009B2  C016  F005         	movff	___ftadd@sign,___ftpack@sign
  2387  0009B6  EC78  F006         	call	___ftpack	;wreg free
  2388  0009BA  C001  F00D         	movff	?___ftpack,?___ftadd
  2389  0009BE  C002  F00E         	movff	?___ftpack+1,?___ftadd+1
  2390  0009C2  C003  F00F         	movff	?___ftpack+2,?___ftadd+2
  2391  0009C6  0012               	return	
  2392  0009C8                     __end_of___ftadd:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           fsr1l	equ	0xFE1
  2404                           indf2	equ	0xFDF
  2405                           postinc2	equ	0xFDE
  2406                           postdec2	equ	0xFDD
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function ___awtoft *****************
  2412 ;; Defined at:
  2413 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  c               2    8[COMRAM] int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  sign            1   11[COMRAM] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  3    8[COMRAM] float 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2427 ;;      Params:         3       0       0       0       0       0       0
  2428 ;;      Locals:         1       0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0
  2430 ;;      Totals:         4       0       0       0       0       0       0
  2431 ;;Total ram usage:        4 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    1
  2434 ;; This function calls:
  2435 ;;		___ftpack
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text13
  2442  00104C                     __ptext13:
  2443                           	opt stack 0
  2444  00104C                     ___awtoft:
  2445                           	opt stack 29
  2446                           
  2447                           ;incstack = 0
  2448  00104C  0E00               	movlw	0
  2449  00104E  6E0C               	movwf	___awtoft@sign,c
  2450  001050  AE0A               	btfss	___awtoft@c+1,7,c
  2451  001052  D006               	goto	l1880
  2452  001054  6C09               	negf	___awtoft@c,c
  2453  001056  1E0A               	comf	___awtoft@c+1,f,c
  2454  001058  B0D8               	btfsc	status,0,c
  2455  00105A  2A0A               	incf	___awtoft@c+1,f,c
  2456  00105C  0E01               	movlw	1
  2457  00105E  6E0C               	movwf	___awtoft@sign,c
  2458  001060                     l1880:
  2459  001060  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2460  001064  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2461  001068  6A03               	clrf	___ftpack@arg+2,c
  2462  00106A  0E8E               	movlw	142
  2463  00106C  6E04               	movwf	___ftpack@exp,c
  2464  00106E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2465  001072  EC78  F006         	call	___ftpack	;wreg free
  2466  001076  C001  F009         	movff	?___ftpack,?___awtoft
  2467  00107A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2468  00107E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2469  001082  0012               	return	
  2470  001084                     __end_of___awtoft:
  2471                           	opt stack 0
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           prodh	equ	0xFF4
  2477                           prodl	equ	0xFF3
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           postdec1	equ	0xFE5
  2481                           fsr1l	equ	0xFE1
  2482                           indf2	equ	0xFDF
  2483                           postinc2	equ	0xFDE
  2484                           postdec2	equ	0xFDD
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function ___ftpack *****************
  2490 ;; Defined at:
  2491 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  arg             3    0[COMRAM] unsigned um
  2494 ;;  exp             1    3[COMRAM] unsigned char 
  2495 ;;  sign            1    4[COMRAM] unsigned char 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  3    0[COMRAM] float 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2507 ;;      Params:         5       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0
  2509 ;;      Temps:          3       0       0       0       0       0       0
  2510 ;;      Totals:         8       0       0       0       0       0       0
  2511 ;;Total ram usage:        8 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		___awtoft
  2517 ;;		___ftadd
  2518 ;;		___ftmul
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text14
  2523  000CF0                     __ptext14:
  2524                           	opt stack 0
  2525  000CF0                     ___ftpack:
  2526                           	opt stack 29
  2527                           
  2528                           ;incstack = 0
  2529  000CF0  5004               	movf	___ftpack@exp,w,c
  2530  000CF2  B4D8               	btfsc	status,2,c
  2531  000CF4  D005               	goto	l1522
  2532  000CF6  5001               	movf	___ftpack@arg,w,c
  2533  000CF8  1002               	iorwf	___ftpack@arg+1,w,c
  2534  000CFA  1003               	iorwf	___ftpack@arg+2,w,c
  2535  000CFC  A4D8               	btfss	status,2,c
  2536  000CFE  D00C               	goto	l1528
  2537  000D00                     l1522:
  2538  000D00  0E00               	movlw	0
  2539  000D02  6E01               	movwf	?___ftpack,c
  2540  000D04  0E00               	movlw	0
  2541  000D06  6E02               	movwf	?___ftpack+1,c
  2542  000D08  0E00               	movlw	0
  2543  000D0A  6E03               	movwf	?___ftpack+2,c
  2544  000D0C  0012               	return	
  2545  000D0E                     l1526:
  2546  000D0E  2A04               	incf	___ftpack@exp,f,c
  2547  000D10  90D8               	bcf	status,0,c
  2548  000D12  3203               	rrcf	___ftpack@arg+2,f,c
  2549  000D14  3202               	rrcf	___ftpack@arg+1,f,c
  2550  000D16  3201               	rrcf	___ftpack@arg,f,c
  2551  000D18                     l1528:
  2552  000D18  0E00               	movlw	0
  2553  000D1A  1401               	andwf	___ftpack@arg,w,c
  2554  000D1C  6E06               	movwf	??___ftpack& (0+255),c
  2555  000D1E  0E00               	movlw	0
  2556  000D20  1402               	andwf	___ftpack@arg+1,w,c
  2557  000D22  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2558  000D24  0EFE               	movlw	254
  2559  000D26  1403               	andwf	___ftpack@arg+2,w,c
  2560  000D28  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2561  000D2A  5006               	movf	??___ftpack,w,c
  2562  000D2C  1007               	iorwf	??___ftpack+1,w,c
  2563  000D2E  1008               	iorwf	??___ftpack+2,w,c
  2564  000D30  B4D8               	btfsc	status,2,c
  2565  000D32  D00C               	goto	l1534
  2566  000D34  D7EC               	goto	l1526
  2567  000D36                     l1530:
  2568  000D36  2A04               	incf	___ftpack@exp,f,c
  2569  000D38  0E01               	movlw	1
  2570  000D3A  2601               	addwf	___ftpack@arg,f,c
  2571  000D3C  0E00               	movlw	0
  2572  000D3E  2202               	addwfc	___ftpack@arg+1,f,c
  2573  000D40  0E00               	movlw	0
  2574  000D42  2203               	addwfc	___ftpack@arg+2,f,c
  2575  000D44  90D8               	bcf	status,0,c
  2576  000D46  3203               	rrcf	___ftpack@arg+2,f,c
  2577  000D48  3202               	rrcf	___ftpack@arg+1,f,c
  2578  000D4A  3201               	rrcf	___ftpack@arg,f,c
  2579  000D4C                     l1534:
  2580  000D4C  0E00               	movlw	0
  2581  000D4E  1401               	andwf	___ftpack@arg,w,c
  2582  000D50  6E06               	movwf	??___ftpack& (0+255),c
  2583  000D52  0E00               	movlw	0
  2584  000D54  1402               	andwf	___ftpack@arg+1,w,c
  2585  000D56  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2586  000D58  0EFF               	movlw	255
  2587  000D5A  1403               	andwf	___ftpack@arg+2,w,c
  2588  000D5C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2589  000D5E  5006               	movf	??___ftpack,w,c
  2590  000D60  1007               	iorwf	??___ftpack+1,w,c
  2591  000D62  1008               	iorwf	??___ftpack+2,w,c
  2592  000D64  B4D8               	btfsc	status,2,c
  2593  000D66  D006               	goto	l1538
  2594  000D68  D7E6               	goto	l1530
  2595  000D6A                     l1536:
  2596  000D6A  0604               	decf	___ftpack@exp,f,c
  2597  000D6C  90D8               	bcf	status,0,c
  2598  000D6E  3601               	rlcf	___ftpack@arg,f,c
  2599  000D70  3602               	rlcf	___ftpack@arg+1,f,c
  2600  000D72  3603               	rlcf	___ftpack@arg+2,f,c
  2601  000D74                     l1538:
  2602  000D74  BE02               	btfsc	___ftpack@arg+1,7,c
  2603  000D76  D003               	goto	l446
  2604  000D78  0E02               	movlw	2
  2605  000D7A  6004               	cpfslt	___ftpack@exp,c
  2606  000D7C  D7F6               	goto	l1536
  2607  000D7E                     l446:
  2608  000D7E  A004               	btfss	___ftpack@exp,0,c
  2609  000D80  9E02               	bcf	___ftpack@arg+1,7,c
  2610  000D82  90D8               	bcf	status,0,c
  2611  000D84  3204               	rrcf	___ftpack@exp,f,c
  2612  000D86  5004               	movf	___ftpack@exp,w,c
  2613  000D88  1203               	iorwf	___ftpack@arg+2,f,c
  2614  000D8A  5005               	movf	___ftpack@sign,w,c
  2615  000D8C  A4D8               	btfss	status,2,c
  2616  000D8E  8E03               	bsf	___ftpack@arg+2,7,c
  2617  000D90  C001  F001         	movff	___ftpack@arg,?___ftpack
  2618  000D94  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2619  000D98  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2620  000D9C  0012               	return	
  2621  000D9E                     __end_of___ftpack:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           postinc0	equ	0xFEE
  2630                           wreg	equ	0xFE8
  2631                           postdec1	equ	0xFE5
  2632                           fsr1l	equ	0xFE1
  2633                           indf2	equ	0xFDF
  2634                           postinc2	equ	0xFDE
  2635                           postdec2	equ	0xFDD
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function _ReadADC *****************
  2641 ;; Defined at:
  2642 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\ADC\adcread.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    0[COMRAM] int 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2656 ;;      Params:         2       0       0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0
  2658 ;;      Temps:          2       0       0       0       0       0       0
  2659 ;;      Totals:         4       0       0       0       0       0       0
  2660 ;;Total ram usage:        4 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text15
  2670  0011FA                     __ptext15:
  2671                           	opt stack 0
  2672  0011FA                     _ReadADC:
  2673                           	opt stack 30
  2674                           
  2675                           ;incstack = 0
  2676  0011FA  50C4               	movf	4036,w,c	;volatile
  2677  0011FC  6E03               	movwf	??_ReadADC& (0+255),c
  2678  0011FE  50C3               	movf	4035,w,c	;volatile
  2679  001200  6E01               	movwf	?_ReadADC,c
  2680  001202  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  2681  001206  0012               	return	
  2682  001208                     __end_of_ReadADC:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1l	equ	0xFE1
  2694                           indf2	equ	0xFDF
  2695                           postinc2	equ	0xFDE
  2696                           postdec2	equ	0xFDD
  2697                           fsr2h	equ	0xFDA
  2698                           fsr2l	equ	0xFD9
  2699                           status	equ	0xFD8
  2700                           
  2701 ;; *************** function _OpenADC *****************
  2702 ;; Defined at:
  2703 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\ADC\adcopen.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  config          1    wreg     unsigned char 
  2706 ;;  config2         1    0[COMRAM] unsigned char 
  2707 ;;  portconfig      1    1[COMRAM] unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  config          1    4[COMRAM] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2719 ;;      Params:         2       0       0       0       0       0       0
  2720 ;;      Locals:         1       0       0       0       0       0       0
  2721 ;;      Temps:          2       0       0       0       0       0       0
  2722 ;;      Totals:         5       0       0       0       0       0       0
  2723 ;;Total ram usage:        5 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text16
  2733  000ECA                     __ptext16:
  2734                           	opt stack 0
  2735  000ECA                     _OpenADC:
  2736                           	opt stack 30
  2737                           
  2738                           ;incstack = 0
  2739                           ;OpenADC@config stored from wreg
  2740  000ECA  6E05               	movwf	OpenADC@config,c
  2741  000ECC  0E00               	movlw	0
  2742  000ECE  6EC2               	movwf	4034,c	;volatile
  2743  000ED0  0E00               	movlw	0
  2744  000ED2  6EC0               	movwf	4032,c	;volatile
  2745  000ED4  90D8               	bcf	status,0,c
  2746  000ED6  3001               	rrcf	OpenADC@config2,w,c
  2747  000ED8  0B3C               	andlw	60
  2748  000EDA  6EC2               	movwf	4034,c	;volatile
  2749  000EDC  C001  F003         	movff	OpenADC@config2,??_OpenADC
  2750  000EE0  3A03               	swapf	??_OpenADC,f,c
  2751  000EE2  0EF0               	movlw	240
  2752  000EE4  1603               	andwf	??_OpenADC,f,c
  2753  000EE6  0E30               	movlw	48
  2754  000EE8  1603               	andwf	??_OpenADC,f,c
  2755  000EEA  5002               	movf	OpenADC@portconfig,w,c
  2756  000EEC  0B0F               	andlw	15
  2757  000EEE  1003               	iorwf	??_OpenADC,w,c
  2758  000EF0  6EC1               	movwf	4033,c	;volatile
  2759  000EF2  C005  F003         	movff	OpenADC@config,??_OpenADC
  2760  000EF6  90D8               	bcf	status,0,c
  2761  000EF8  3603               	rlcf	??_OpenADC,f,c
  2762  000EFA  90D8               	bcf	status,0,c
  2763  000EFC  3603               	rlcf	??_OpenADC,f,c
  2764  000EFE  0E38               	movlw	56
  2765  000F00  1603               	andwf	??_OpenADC,f,c
  2766  000F02  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  2767  000F06  3A04               	swapf	??_OpenADC+1,f,c
  2768  000F08  0E0F               	movlw	15
  2769  000F0A  1604               	andwf	??_OpenADC+1,f,c
  2770  000F0C  0E07               	movlw	7
  2771  000F0E  1604               	andwf	??_OpenADC+1,f,c
  2772  000F10  5005               	movf	OpenADC@config,w,c
  2773  000F12  0B80               	andlw	128
  2774  000F14  1004               	iorwf	??_OpenADC+1,w,c
  2775  000F16  1003               	iorwf	??_OpenADC,w,c
  2776  000F18  6EC0               	movwf	4032,c	;volatile
  2777  000F1A  AE01               	btfss	OpenADC@config2,7,c
  2778  000F1C  D003               	goto	l213
  2779  000F1E  9C9E               	bcf	3998,6,c	;volatile
  2780  000F20  8C9D               	bsf	3997,6,c	;volatile
  2781  000F22  8CF2               	bsf	intcon,6,c	;volatile
  2782  000F24                     l213:
  2783  000F24  80C2               	bsf	4034,0,c	;volatile
  2784  000F26  0012               	return		;funcret
  2785  000F28                     __end_of_OpenADC:
  2786                           	opt stack 0
  2787                           tblptru	equ	0xFF8
  2788                           tblptrh	equ	0xFF7
  2789                           tblptrl	equ	0xFF6
  2790                           tablat	equ	0xFF5
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           intcon	equ	0xFF2
  2794                           postinc0	equ	0xFEE
  2795                           wreg	equ	0xFE8
  2796                           postdec1	equ	0xFE5
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           postinc2	equ	0xFDE
  2800                           postdec2	equ	0xFDD
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _HD44780_Init *****************
  2806 ;; Defined at:
  2807 ;;		line 111 in file "hd44780.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  cols            1    wreg     unsigned char 
  2810 ;;  rows            1    8[COMRAM] unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  cols            1    9[COMRAM] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2822 ;;      Params:         1       0       0       0       0       0       0
  2823 ;;      Locals:         1       0       0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0
  2825 ;;      Totals:         2       0       0       0       0       0       0
  2826 ;;Total ram usage:        2 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    4
  2829 ;; This function calls:
  2830 ;;		_HD44780_Clear
  2831 ;;		_HD44780_Cmd
  2832 ;;		_HD44780_Cmd4bit
  2833 ;;		_HD44780_Delay
  2834 ;;		_HD44780_DisplayOn
  2835 ;;		_HD44780_InitPins
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text17
  2842  000D9E                     __ptext17:
  2843                           	opt stack 0
  2844  000D9E                     _HD44780_Init:
  2845                           	opt stack 26
  2846                           
  2847                           ;incstack = 0
  2848                           ;HD44780_Init@cols stored from wreg
  2849  000D9E  6E0A               	movwf	HD44780_Init@cols,c
  2850                           
  2851                           ;hd44780.c: 114: HD44780_InitPins();
  2852  000DA0  ECD0  F008         	call	_HD44780_InitPins	;wreg free
  2853                           
  2854                           ;hd44780.c: 117: HD44780_Delay(45000);
  2855  000DA4  0EAF               	movlw	175
  2856  000DA6  6E02               	movwf	HD44780_Delay@us+1,c
  2857  000DA8  0EC8               	movlw	200
  2858  000DAA  6E01               	movwf	HD44780_Delay@us,c
  2859  000DAC  EC89  F008         	call	_HD44780_Delay	;wreg free
  2860                           
  2861                           ;hd44780.c: 120: HD44780_Opts.Rows = rows;
  2862  000DB0  C009  F030         	movff	HD44780_Init@rows,_HD44780_Opts+3
  2863                           
  2864                           ;hd44780.c: 121: HD44780_Opts.Cols = cols;
  2865  000DB4  C00A  F031         	movff	HD44780_Init@cols,_HD44780_Opts+4
  2866                           
  2867                           ;hd44780.c: 124: HD44780_Opts.currentX = 0;
  2868  000DB8  0E00               	movlw	0
  2869  000DBA  6E32               	movwf	_HD44780_Opts+5,c
  2870                           
  2871                           ;hd44780.c: 125: HD44780_Opts.currentY = 0;
  2872  000DBC  0E00               	movlw	0
  2873  000DBE  6E33               	movwf	_HD44780_Opts+6,c
  2874                           
  2875                           ;hd44780.c: 127: HD44780_Opts.DisplayFunction = 0x00 | 0x00 | 0x00;
  2876  000DC0  0E00               	movlw	0
  2877  000DC2  6E2E               	movwf	_HD44780_Opts+1,c
  2878                           
  2879                           ;hd44780.c: 128: if (rows > 1) {
  2880  000DC4  0E01               	movlw	1
  2881  000DC6  6409               	cpfsgt	HD44780_Init@rows,c
  2882  000DC8  D001               	goto	l1622
  2883                           
  2884                           ;hd44780.c: 129: HD44780_Opts.DisplayFunction |= 0x08;
  2885  000DCA  862E               	bsf	_HD44780_Opts+1,3,c
  2886  000DCC                     l1622:
  2887                           
  2888                           ;hd44780.c: 130: }
  2889                           ;hd44780.c: 133: HD44780_Cmd4bit(0x03);
  2890  000DCC  0E03               	movlw	3
  2891  000DCE  EC21  F007         	call	_HD44780_Cmd4bit
  2892                           
  2893                           ;hd44780.c: 134: HD44780_Delay(4500);
  2894  000DD2  0E11               	movlw	17
  2895  000DD4  6E02               	movwf	HD44780_Delay@us+1,c
  2896  000DD6  0E94               	movlw	148
  2897  000DD8  6E01               	movwf	HD44780_Delay@us,c
  2898  000DDA  EC89  F008         	call	_HD44780_Delay	;wreg free
  2899                           
  2900                           ;hd44780.c: 137: HD44780_Cmd4bit(0x03);
  2901  000DDE  0E03               	movlw	3
  2902  000DE0  EC21  F007         	call	_HD44780_Cmd4bit
  2903                           
  2904                           ;hd44780.c: 138: HD44780_Delay(4500);
  2905  000DE4  0E11               	movlw	17
  2906  000DE6  6E02               	movwf	HD44780_Delay@us+1,c
  2907  000DE8  0E94               	movlw	148
  2908  000DEA  6E01               	movwf	HD44780_Delay@us,c
  2909  000DEC  EC89  F008         	call	_HD44780_Delay	;wreg free
  2910                           
  2911                           ;hd44780.c: 141: HD44780_Cmd4bit(0x03);
  2912  000DF0  0E03               	movlw	3
  2913  000DF2  EC21  F007         	call	_HD44780_Cmd4bit
  2914                           
  2915                           ;hd44780.c: 142: HD44780_Delay(4500);
  2916  000DF6  0E11               	movlw	17
  2917  000DF8  6E02               	movwf	HD44780_Delay@us+1,c
  2918  000DFA  0E94               	movlw	148
  2919  000DFC  6E01               	movwf	HD44780_Delay@us,c
  2920  000DFE  EC89  F008         	call	_HD44780_Delay	;wreg free
  2921                           
  2922                           ;hd44780.c: 145: HD44780_Cmd4bit(0x02);
  2923  000E02  0E02               	movlw	2
  2924  000E04  EC21  F007         	call	_HD44780_Cmd4bit
  2925                           
  2926                           ;hd44780.c: 146: HD44780_Delay(100);
  2927  000E08  0E00               	movlw	0
  2928  000E0A  6E02               	movwf	HD44780_Delay@us+1,c
  2929  000E0C  0E64               	movlw	100
  2930  000E0E  6E01               	movwf	HD44780_Delay@us,c
  2931  000E10  EC89  F008         	call	_HD44780_Delay	;wreg free
  2932                           
  2933                           ;hd44780.c: 149: HD44780_Cmd(0x20 | HD44780_Opts.DisplayFunction);
  2934  000E14  502E               	movf	_HD44780_Opts+1,w,c
  2935  000E16  0920               	iorlw	32
  2936  000E18  ECE8  F008         	call	_HD44780_Cmd
  2937                           
  2938                           ;hd44780.c: 152: HD44780_Opts.DisplayControl = 0x04;
  2939  000E1C  0E04               	movlw	4
  2940  000E1E  6E2D               	movwf	_HD44780_Opts,c
  2941                           
  2942                           ;hd44780.c: 153: HD44780_DisplayOn();
  2943  000E20  EC04  F009         	call	_HD44780_DisplayOn	;wreg free
  2944                           
  2945                           ;hd44780.c: 156: HD44780_Clear();
  2946  000E24  ECF3  F008         	call	_HD44780_Clear	;wreg free
  2947                           
  2948                           ;hd44780.c: 159: HD44780_Opts.DisplayMode = 0x02 | 0x00;
  2949  000E28  0E02               	movlw	2
  2950  000E2A  6E2F               	movwf	_HD44780_Opts+2,c
  2951                           
  2952                           ;hd44780.c: 160: HD44780_Cmd(0x04 | HD44780_Opts.DisplayMode);
  2953  000E2C  502F               	movf	_HD44780_Opts+2,w,c
  2954  000E2E  0904               	iorlw	4
  2955  000E30  ECE8  F008         	call	_HD44780_Cmd
  2956                           
  2957                           ;hd44780.c: 163: HD44780_Delay(4500);
  2958  000E34  0E11               	movlw	17
  2959  000E36  6E02               	movwf	HD44780_Delay@us+1,c
  2960  000E38  0E94               	movlw	148
  2961  000E3A  6E01               	movwf	HD44780_Delay@us,c
  2962  000E3C  EC89  F008         	call	_HD44780_Delay	;wreg free
  2963  000E40  0012               	return		;funcret
  2964  000E42                     __end_of_HD44780_Init:
  2965                           	opt stack 0
  2966                           tblptru	equ	0xFF8
  2967                           tblptrh	equ	0xFF7
  2968                           tblptrl	equ	0xFF6
  2969                           tablat	equ	0xFF5
  2970                           prodh	equ	0xFF4
  2971                           prodl	equ	0xFF3
  2972                           intcon	equ	0xFF2
  2973                           postinc0	equ	0xFEE
  2974                           wreg	equ	0xFE8
  2975                           postdec1	equ	0xFE5
  2976                           fsr1l	equ	0xFE1
  2977                           indf2	equ	0xFDF
  2978                           postinc2	equ	0xFDE
  2979                           postdec2	equ	0xFDD
  2980                           fsr2h	equ	0xFDA
  2981                           fsr2l	equ	0xFD9
  2982                           status	equ	0xFD8
  2983                           
  2984 ;; *************** function _HD44780_InitPins *****************
  2985 ;; Defined at:
  2986 ;;		line 292 in file "hd44780.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		None
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3000 ;;      Params:         0       0       0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_HD44780_Init
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text18
  3014  0011A0                     __ptext18:
  3015                           	opt stack 0
  3016  0011A0                     _HD44780_InitPins:
  3017                           	opt stack 29
  3018                           
  3019                           ;hd44780.c: 294: TRISBbits.RB2 = 0;
  3020                           
  3021                           ;incstack = 0
  3022  0011A0  9493               	bcf	3987,2,c	;volatile
  3023                           
  3024                           ;hd44780.c: 295: TRISBbits.RB3 = 0;
  3025  0011A2  9693               	bcf	3987,3,c	;volatile
  3026                           
  3027                           ;hd44780.c: 296: TRISBbits.RB4 = 0;
  3028  0011A4  9893               	bcf	3987,4,c	;volatile
  3029                           
  3030                           ;hd44780.c: 297: TRISBbits.RB5 = 0;
  3031  0011A6  9A93               	bcf	3987,5,c	;volatile
  3032                           
  3033                           ;hd44780.c: 298: TRISBbits.RB6 = 0;
  3034  0011A8  9C93               	bcf	3987,6,c	;volatile
  3035                           
  3036                           ;hd44780.c: 299: TRISBbits.RB7 = 0;
  3037  0011AA  9E93               	bcf	3987,7,c	;volatile
  3038                           
  3039                           ;hd44780.c: 302: PORTBbits.RB2 = 0;
  3040  0011AC  9481               	bcf	3969,2,c	;volatile
  3041                           
  3042                           ;hd44780.c: 303: PORTBbits.RB3 = 0;
  3043  0011AE  9681               	bcf	3969,3,c	;volatile
  3044                           
  3045                           ;hd44780.c: 304: PORTBbits.RB4 = 0;
  3046  0011B0  9881               	bcf	3969,4,c	;volatile
  3047                           
  3048                           ;hd44780.c: 305: PORTBbits.RB5 = 0;
  3049  0011B2  9A81               	bcf	3969,5,c	;volatile
  3050                           
  3051                           ;hd44780.c: 306: PORTBbits.RB6 = 0;
  3052  0011B4  9C81               	bcf	3969,6,c	;volatile
  3053                           
  3054                           ;hd44780.c: 307: PORTBbits.RB7 = 0;
  3055  0011B6  9E81               	bcf	3969,7,c	;volatile
  3056  0011B8  0012               	return		;funcret
  3057  0011BA                     __end_of_HD44780_InitPins:
  3058                           	opt stack 0
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           intcon	equ	0xFF2
  3066                           postinc0	equ	0xFEE
  3067                           wreg	equ	0xFE8
  3068                           postdec1	equ	0xFE5
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           postinc2	equ	0xFDE
  3072                           postdec2	equ	0xFDD
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _HD44780_DisplayOn *****************
  3078 ;; Defined at:
  3079 ;;		line 192 in file "hd44780.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3093 ;;      Params:         0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_HD44780_Cmd
  3102 ;; This function is called by:
  3103 ;;		_HD44780_Init
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text19
  3108  001208                     __ptext19:
  3109                           	opt stack 0
  3110  001208                     _HD44780_DisplayOn:
  3111                           	opt stack 26
  3112                           
  3113                           ;hd44780.c: 193: HD44780_Opts.DisplayControl |= 0x04;
  3114                           
  3115                           ;incstack = 0
  3116  001208  842D               	bsf	_HD44780_Opts,2,c
  3117                           
  3118                           ;hd44780.c: 194: HD44780_Cmd(0x08 | HD44780_Opts.DisplayControl);
  3119  00120A  502D               	movf	_HD44780_Opts,w,c
  3120  00120C  0908               	iorlw	8
  3121  00120E  ECE8  F008         	call	_HD44780_Cmd
  3122  001212  0012               	return		;funcret
  3123  001214                     __end_of_HD44780_DisplayOn:
  3124                           	opt stack 0
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodh	equ	0xFF4
  3130                           prodl	equ	0xFF3
  3131                           intcon	equ	0xFF2
  3132                           postinc0	equ	0xFEE
  3133                           wreg	equ	0xFE8
  3134                           postdec1	equ	0xFE5
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           postinc2	equ	0xFDE
  3138                           postdec2	equ	0xFDD
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function _HD44780_Clear *****************
  3144 ;; Defined at:
  3145 ;;		line 166 in file "hd44780.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3159 ;;      Params:         0       0       0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0
  3162 ;;      Totals:         0       0       0       0       0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    3
  3166 ;; This function calls:
  3167 ;;		_HD44780_Cmd
  3168 ;;		_HD44780_Delay
  3169 ;; This function is called by:
  3170 ;;		_HD44780_Init
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text20
  3175  0011E6                     __ptext20:
  3176                           	opt stack 0
  3177  0011E6                     _HD44780_Clear:
  3178                           	opt stack 26
  3179                           
  3180                           ;hd44780.c: 167: HD44780_Cmd(0x01);
  3181                           
  3182                           ;incstack = 0
  3183  0011E6  0E01               	movlw	1
  3184  0011E8  ECE8  F008         	call	_HD44780_Cmd
  3185                           
  3186                           ;hd44780.c: 168: HD44780_Delay(3000);
  3187  0011EC  0E0B               	movlw	11
  3188  0011EE  6E02               	movwf	HD44780_Delay@us+1,c
  3189  0011F0  0EB8               	movlw	184
  3190  0011F2  6E01               	movwf	HD44780_Delay@us,c
  3191  0011F4  EC89  F008         	call	_HD44780_Delay	;wreg free
  3192  0011F8  0012               	return		;funcret
  3193  0011FA                     __end_of_HD44780_Clear:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           prodh	equ	0xFF4
  3200                           prodl	equ	0xFF3
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           postdec1	equ	0xFE5
  3205                           fsr1l	equ	0xFE1
  3206                           indf2	equ	0xFDF
  3207                           postinc2	equ	0xFDE
  3208                           postdec2	equ	0xFDD
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _HD44780_Cmd *****************
  3214 ;; Defined at:
  3215 ;;		line 263 in file "hd44780.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  cmd             1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  cmd             1    7[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3229 ;;      Params:         0       0       0       0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0
  3232 ;;      Totals:         1       0       0       0       0       0       0
  3233 ;;Total ram usage:        1 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    2
  3236 ;; This function calls:
  3237 ;;		_HD44780_Cmd4bit
  3238 ;; This function is called by:
  3239 ;;		_HD44780_Init
  3240 ;;		_HD44780_Clear
  3241 ;;		_HD44780_DisplayOn
  3242 ;;		_HD44780_CursorSet
  3243 ;;		_HD44780_DisplayOff
  3244 ;;		_HD44780_BlinkOn
  3245 ;;		_HD44780_BlinkOff
  3246 ;;		_HD44780_CursorOn
  3247 ;;		_HD44780_CursorOff
  3248 ;;		_HD44780_ScrollLeft
  3249 ;;		_HD44780_ScrollRight
  3250 ;;		_HD44780_CreateChar
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text21
  3255  0011D0                     __ptext21:
  3256                           	opt stack 0
  3257  0011D0                     _HD44780_Cmd:
  3258                           	opt stack 25
  3259                           
  3260                           ;incstack = 0
  3261                           ;HD44780_Cmd@cmd stored from wreg
  3262  0011D0  6E08               	movwf	HD44780_Cmd@cmd,c
  3263                           
  3264                           ;hd44780.c: 265: PORTBbits.RB2 = 0;
  3265  0011D2  9481               	bcf	3969,2,c	;volatile
  3266                           
  3267                           ;hd44780.c: 268: HD44780_Cmd4bit(cmd >> 4);
  3268  0011D4  3808               	swapf	HD44780_Cmd@cmd,w,c
  3269  0011D6  0B0F               	andlw	15
  3270  0011D8  EC21  F007         	call	_HD44780_Cmd4bit
  3271                           
  3272                           ;hd44780.c: 270: HD44780_Cmd4bit(cmd & 0x0F);
  3273  0011DC  5008               	movf	HD44780_Cmd@cmd,w,c
  3274  0011DE  0B0F               	andlw	15
  3275  0011E0  EC21  F007         	call	_HD44780_Cmd4bit
  3276  0011E4  0012               	return		;funcret
  3277  0011E6                     __end_of_HD44780_Cmd:
  3278                           	opt stack 0
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           prodh	equ	0xFF4
  3284                           prodl	equ	0xFF3
  3285                           intcon	equ	0xFF2
  3286                           postinc0	equ	0xFEE
  3287                           wreg	equ	0xFE8
  3288                           postdec1	equ	0xFE5
  3289                           fsr1l	equ	0xFE1
  3290                           indf2	equ	0xFDF
  3291                           postinc2	equ	0xFDE
  3292                           postdec2	equ	0xFDD
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _HD44780_Cmd4bit *****************
  3298 ;; Defined at:
  3299 ;;		line 283 in file "hd44780.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  cmd             1    wreg     unsigned char 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  cmd             1    6[COMRAM] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3313 ;;      Params:         0       0       0       0       0       0       0
  3314 ;;      Locals:         1       0       0       0       0       0       0
  3315 ;;      Temps:          1       0       0       0       0       0       0
  3316 ;;      Totals:         2       0       0       0       0       0       0
  3317 ;;Total ram usage:        2 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    1
  3320 ;; This function calls:
  3321 ;;		_HD44780_Delay
  3322 ;; This function is called by:
  3323 ;;		_HD44780_Init
  3324 ;;		_HD44780_Cmd
  3325 ;;		_HD44780_Data
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text22
  3330  000E42                     __ptext22:
  3331                           	opt stack 0
  3332  000E42                     _HD44780_Cmd4bit:
  3333                           	opt stack 26
  3334                           
  3335                           ;incstack = 0
  3336                           ;HD44780_Cmd4bit@cmd stored from wreg
  3337  000E42  6E07               	movwf	HD44780_Cmd4bit@cmd,c
  3338                           
  3339                           ;hd44780.c: 285: PORTBbits.RB7 = (cmd & 0x08) ? 1 : 0;
  3340  000E44  A607               	btfss	HD44780_Cmd4bit@cmd,3,c
  3341  000E46  D003               	goto	u950
  3342  000E48  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3343  000E4A  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3344  000E4C  D001               	goto	u968
  3345  000E4E                     u950:
  3346  000E4E  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3347  000E50                     u968:
  3348  000E50  3206               	rrcf	??_HD44780_Cmd4bit,f,c
  3349  000E52  3206               	rrcf	??_HD44780_Cmd4bit,f,c
  3350  000E54  5081               	movf	3969,w,c	;volatile
  3351  000E56  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3352  000E58  0B7F               	andlw	-129
  3353  000E5A  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3354  000E5C  6E81               	movwf	3969,c	;volatile
  3355                           
  3356                           ;hd44780.c: 286: PORTBbits.RB6 = (cmd & 0x04) ? 1 : 0;
  3357  000E5E  A407               	btfss	HD44780_Cmd4bit@cmd,2,c
  3358  000E60  D003               	goto	u970
  3359  000E62  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3360  000E64  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3361  000E66  D001               	goto	u988
  3362  000E68                     u970:
  3363  000E68  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3364  000E6A                     u988:
  3365  000E6A  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  3366  000E6C  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  3367  000E6E  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  3368  000E70  5081               	movf	3969,w,c	;volatile
  3369  000E72  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3370  000E74  0BBF               	andlw	-65
  3371  000E76  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3372  000E78  6E81               	movwf	3969,c	;volatile
  3373                           
  3374                           ;hd44780.c: 287: PORTBbits.RB5 = (cmd & 0x02) ? 1 : 0;
  3375  000E7A  A207               	btfss	HD44780_Cmd4bit@cmd,1,c
  3376  000E7C  D003               	goto	u990
  3377  000E7E  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3378  000E80  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3379  000E82  D001               	goto	u1008
  3380  000E84                     u990:
  3381  000E84  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3382  000E86                     u1008:
  3383  000E86  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  3384  000E88  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  3385  000E8A  5081               	movf	3969,w,c	;volatile
  3386  000E8C  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3387  000E8E  0BDF               	andlw	-33
  3388  000E90  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3389  000E92  6E81               	movwf	3969,c	;volatile
  3390                           
  3391                           ;hd44780.c: 288: PORTBbits.RB4 = (cmd & 0x01) ? 1 : 0;
  3392  000E94  A007               	btfss	HD44780_Cmd4bit@cmd,0,c
  3393  000E96  D003               	goto	u1010
  3394  000E98  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3395  000E9A  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3396  000E9C  D001               	goto	u1028
  3397  000E9E                     u1010:
  3398  000E9E  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3399  000EA0                     u1028:
  3400  000EA0  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  3401  000EA2  5081               	movf	3969,w,c	;volatile
  3402  000EA4  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3403  000EA6  0BEF               	andlw	-17
  3404  000EA8  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3405  000EAA  6E81               	movwf	3969,c	;volatile
  3406                           
  3407                           ;hd44780.c: 289: PORTBbits.RB3 = 1; HD44780_Delay(20); PORTBbits.RB3 = 0; HD44780_Delay(
      +                          20);
  3408  000EAC  8681               	bsf	3969,3,c	;volatile
  3409  000EAE  0E00               	movlw	0
  3410  000EB0  6E02               	movwf	HD44780_Delay@us+1,c
  3411  000EB2  0E14               	movlw	20
  3412  000EB4  6E01               	movwf	HD44780_Delay@us,c
  3413  000EB6  EC89  F008         	call	_HD44780_Delay	;wreg free
  3414  000EBA  9681               	bcf	3969,3,c	;volatile
  3415  000EBC  0E00               	movlw	0
  3416  000EBE  6E02               	movwf	HD44780_Delay@us+1,c
  3417  000EC0  0E14               	movlw	20
  3418  000EC2  6E01               	movwf	HD44780_Delay@us,c
  3419  000EC4  EC89  F008         	call	_HD44780_Delay	;wreg free
  3420  000EC8  0012               	return		;funcret
  3421  000ECA                     __end_of_HD44780_Cmd4bit:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           intcon	equ	0xFF2
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1l	equ	0xFE1
  3434                           indf2	equ	0xFDF
  3435                           postinc2	equ	0xFDE
  3436                           postdec2	equ	0xFDD
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function _HD44780_Delay *****************
  3442 ;; Defined at:
  3443 ;;		line 106 in file "hd44780.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  us              2    0[COMRAM] int 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  i               2    3[COMRAM] int 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3457 ;;      Params:         2       0       0       0       0       0       0
  3458 ;;      Locals:         2       0       0       0       0       0       0
  3459 ;;      Temps:          1       0       0       0       0       0       0
  3460 ;;      Totals:         5       0       0       0       0       0       0
  3461 ;;Total ram usage:        5 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_HD44780_Init
  3467 ;;		_HD44780_Clear
  3468 ;;		_HD44780_Cmd4bit
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text23
  3473  001112                     __ptext23:
  3474                           	opt stack 0
  3475  001112                     _HD44780_Delay:
  3476                           	opt stack 26
  3477                           
  3478                           ;hd44780.c: 108: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(8000000/4000000.0)
      +                          ));
  3479                           
  3480                           ;incstack = 0
  3481  001112  0E00               	movlw	0
  3482  001114  6E05               	movwf	HD44780_Delay@i+1,c
  3483  001116  0E00               	movlw	0
  3484  001118  6E04               	movwf	HD44780_Delay@i,c
  3485  00111A  D003               	goto	l1438
  3486  00111C                     l75:
  3487  00111C  D000               	nop2		;2 cycle nop
  3488  00111E  4A04               	infsnz	HD44780_Delay@i,f,c
  3489  001120  2A05               	incf	HD44780_Delay@i+1,f,c
  3490  001122                     l1438:
  3491  001122  5001               	movf	HD44780_Delay@us,w,c
  3492  001124  5C04               	subwf	HD44780_Delay@i,w,c
  3493  001126  5005               	movf	HD44780_Delay@i+1,w,c
  3494  001128  0A80               	xorlw	128
  3495  00112A  6E03               	movwf	??_HD44780_Delay& (0+255),c
  3496  00112C  5002               	movf	HD44780_Delay@us+1,w,c
  3497  00112E  0A80               	xorlw	128
  3498  001130  5803               	subwfb	??_HD44780_Delay& (0+255),w,c
  3499  001132  B0D8               	btfsc	status,0,c
  3500  001134  0012               	return	
  3501  001136  D7F2               	goto	l75
  3502  001138                     __end_of_HD44780_Delay:
  3503                           	opt stack 0
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           intcon	equ	0xFF2
  3511                           postinc0	equ	0xFEE
  3512                           wreg	equ	0xFE8
  3513                           postdec1	equ	0xFE5
  3514                           fsr1l	equ	0xFE1
  3515                           indf2	equ	0xFDF
  3516                           postinc2	equ	0xFDE
  3517                           postdec2	equ	0xFDD
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function _Delayms *****************
  3523 ;; Defined at:
  3524 ;;		line 10 in file "delay.h"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  ms              2    0[COMRAM] int 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  i               2    3[COMRAM] int 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3538 ;;      Params:         2       0       0       0       0       0       0
  3539 ;;      Locals:         2       0       0       0       0       0       0
  3540 ;;      Temps:          1       0       0       0       0       0       0
  3541 ;;      Totals:         5       0       0       0       0       0       0
  3542 ;;Total ram usage:        5 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text24
  3552  0010BA                     __ptext24:
  3553                           	opt stack 0
  3554  0010BA                     _Delayms:
  3555                           	opt stack 30
  3556                           
  3557                           ;delay.h: 12: for(int i=0; i<ms ; i++) _delay((unsigned long)((1)*(8000000/4000.0)));
  3558                           
  3559                           ;incstack = 0
  3560  0010BA  0E00               	movlw	0
  3561  0010BC  6E05               	movwf	Delayms@i+1,c
  3562  0010BE  0E00               	movlw	0
  3563  0010C0  6E04               	movwf	Delayms@i,c
  3564  0010C2  D009               	goto	l19
  3565  0010C4                     l1594:
  3566  0010C4  0E03               	movlw	3
  3567  0010C6  6E03               	movwf	??_Delayms& (0+255),c
  3568  0010C8  0E98               	movlw	152
  3569  0010CA                     u1877:
  3570  0010CA  2EE8               	decfsz	wreg,f,c
  3571  0010CC  D7FE               	goto	u1877
  3572  0010CE  2E03               	decfsz	??_Delayms& (0+255),f,c
  3573  0010D0  D7FC               	goto	u1877
  3574  0010D2  4A04               	infsnz	Delayms@i,f,c
  3575  0010D4  2A05               	incf	Delayms@i+1,f,c
  3576  0010D6                     l19:
  3577  0010D6  5001               	movf	Delayms@ms,w,c
  3578  0010D8  5C04               	subwf	Delayms@i,w,c
  3579  0010DA  5005               	movf	Delayms@i+1,w,c
  3580  0010DC  0A80               	xorlw	128
  3581  0010DE  6E03               	movwf	??_Delayms& (0+255),c
  3582  0010E0  5002               	movf	Delayms@ms+1,w,c
  3583  0010E2  0A80               	xorlw	128
  3584  0010E4  5803               	subwfb	??_Delayms& (0+255),w,c
  3585  0010E6  B0D8               	btfsc	status,0,c
  3586  0010E8  0012               	return	
  3587  0010EA  D7EC               	goto	l1594
  3588  0010EC                     __end_of_Delayms:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           intcon	equ	0xFF2
  3597                           postinc0	equ	0xFEE
  3598                           wreg	equ	0xFE8
  3599                           postdec1	equ	0xFE5
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function _Delay *****************
  3609 ;; Defined at:
  3610 ;;		line 15 in file "delay.h"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  us              2    0[COMRAM] int 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  i               2    3[COMRAM] int 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         2       0       0       0       0       0       0
  3625 ;;      Locals:         2       0       0       0       0       0       0
  3626 ;;      Temps:          1       0       0       0       0       0       0
  3627 ;;      Totals:         5       0       0       0       0       0       0
  3628 ;;Total ram usage:        5 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text25
  3638  001138                     __ptext25:
  3639                           	opt stack 0
  3640  001138                     _Delay:
  3641                           	opt stack 30
  3642                           
  3643                           ;delay.h: 17: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(8000000/4000000.0)));
  3644                           
  3645                           ;incstack = 0
  3646  001138  0E00               	movlw	0
  3647  00113A  6E05               	movwf	Delay@i+1,c
  3648  00113C  0E00               	movlw	0
  3649  00113E  6E04               	movwf	Delay@i,c
  3650  001140  D003               	goto	l1602
  3651  001142                     l26:
  3652  001142  D000               	nop2		;2 cycle nop
  3653  001144  4A04               	infsnz	Delay@i,f,c
  3654  001146  2A05               	incf	Delay@i+1,f,c
  3655  001148                     l1602:
  3656  001148  5001               	movf	Delay@us,w,c
  3657  00114A  5C04               	subwf	Delay@i,w,c
  3658  00114C  5005               	movf	Delay@i+1,w,c
  3659  00114E  0A80               	xorlw	128
  3660  001150  6E03               	movwf	??_Delay& (0+255),c
  3661  001152  5002               	movf	Delay@us+1,w,c
  3662  001154  0A80               	xorlw	128
  3663  001156  5803               	subwfb	??_Delay& (0+255),w,c
  3664  001158  B0D8               	btfsc	status,0,c
  3665  00115A  0012               	return	
  3666  00115C  D7F2               	goto	l26
  3667  00115E                     __end_of_Delay:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           prodh	equ	0xFF4
  3674                           prodl	equ	0xFF3
  3675                           intcon	equ	0xFF2
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1l	equ	0xFE1
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _ConvertADC *****************
  3688 ;; Defined at:
  3689 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\ADC\adcconv.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		None
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3703 ;;      Params:         0       0       0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0
  3706 ;;      Totals:         0       0       0       0       0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text26
  3717  001228                     __ptext26:
  3718                           	opt stack 0
  3719  001228                     _ConvertADC:
  3720                           	opt stack 30
  3721                           
  3722                           ;incstack = 0
  3723  001228  82C2               	bsf	4034,1,c	;volatile
  3724  00122A  0012               	return		;funcret
  3725  00122C                     __end_of_ConvertADC:
  3726                           	opt stack 0
  3727                           tblptru	equ	0xFF8
  3728                           tblptrh	equ	0xFF7
  3729                           tblptrl	equ	0xFF6
  3730                           tablat	equ	0xFF5
  3731                           prodh	equ	0xFF4
  3732                           prodl	equ	0xFF3
  3733                           intcon	equ	0xFF2
  3734                           postinc0	equ	0xFEE
  3735                           wreg	equ	0xFE8
  3736                           postdec1	equ	0xFE5
  3737                           fsr1l	equ	0xFE1
  3738                           indf2	equ	0xFDF
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _BusyADC *****************
  3746 ;; Defined at:
  3747 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\ADC\adcbusy.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      unsigned char 
  3754 ;; Registers used:
  3755 ;;		wreg
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3761 ;;      Params:         0       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text27
  3775  001214                     __ptext27:
  3776                           	opt stack 0
  3777  001214                     _BusyADC:
  3778                           	opt stack 30
  3779                           
  3780                           ;incstack = 0
  3781  001214  A2C2               	btfss	4034,1,c	;volatile
  3782  001216  D002               	goto	u1420
  3783  001218  0E01               	movlw	1
  3784  00121A  0012               	return	
  3785  00121C                     u1420:
  3786  00121C  0E00               	movlw	0
  3787  00121E  0012               	return	
  3788  001220                     __end_of_BusyADC:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           postinc0	equ	0xFEE
  3798                           wreg	equ	0xFE8
  3799                           postdec1	equ	0xFE5
  3800                           fsr1l	equ	0xFE1
  3801                           indf2	equ	0xFDF
  3802                           postinc2	equ	0xFDE
  3803                           postdec2	equ	0xFDD
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           prodh	equ	0xFF4
  3812                           prodl	equ	0xFF3
  3813                           intcon	equ	0xFF2
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           postdec1	equ	0xFE5
  3817                           fsr1l	equ	0xFE1
  3818                           indf2	equ	0xFDF
  3819                           postinc2	equ	0xFDE
  3820                           postdec2	equ	0xFDD
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825                           	psect	rparam
  3826  0000                     tblptru	equ	0xFF8
  3827                           tblptrh	equ	0xFF7
  3828                           tblptrl	equ	0xFF6
  3829                           tablat	equ	0xFF5
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           postdec1	equ	0xFE5
  3836                           fsr1l	equ	0xFE1
  3837                           indf2	equ	0xFDF
  3838                           postinc2	equ	0xFDE
  3839                           postdec2	equ	0xFDD
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    10
    Data        7
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      61
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[4]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _printf->___fttol
    _printf->_putch
    _putch->_HD44780_CursorSet
    _HD44780_Data->_HD44780_Cmd4bit
    _HD44780_CursorSet->_HD44780_Cmd
    ___lwmod->___lwdiv
    ___ftmul->___ftadd
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _HD44780_Init->_HD44780_Cmd
    _HD44780_DisplayOn->_HD44780_Cmd
    _HD44780_Clear->_HD44780_Cmd
    _HD44780_Cmd->_HD44780_Cmd4bit
    _HD44780_Cmd4bit->_HD44780_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   19125
                                             39 COMRAM     5     5      0
                            _BusyADC
                         _ConvertADC
                              _Delay
                            _Delayms
                  _HD44780_CursorSet
                       _HD44780_Init
                            _OpenADC
                            _ReadADC
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    22      4    4045
                                             15 COMRAM    17    13      4
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0    2349
                                             14 COMRAM     1     1      0
                  _HD44780_CursorSet
                       _HD44780_Data
 ---------------------------------------------------------------------------------
 (3) _HD44780_Data                                         1     1      0     754
                                              7 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (3) _HD44780_CursorSet                                    6     5      1    1529
                                              8 COMRAM     6     5      1
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2715
                                             24 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3331
                                             12 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     282
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _HD44780_Init                                         2     1      1    4346
                                              8 COMRAM     2     1      1
                      _HD44780_Clear
                        _HD44780_Cmd
                    _HD44780_Cmd4bit
                      _HD44780_Delay
                  _HD44780_DisplayOn
                   _HD44780_InitPins
 ---------------------------------------------------------------------------------
 (2) _HD44780_InitPins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HD44780_DisplayOn                                    0     0      0     754
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (2) _HD44780_Clear                                        0     0      0    1376
                        _HD44780_Cmd
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd                                          1     1      0     754
                                              7 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd4bit                                      2     2      0     710
                                              5 COMRAM     2     2      0
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (5) _HD44780_Delay                                        5     3      2     622
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              5     3      2     110
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     3      2     110
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay
   _Delayms
   _HD44780_CursorSet
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
   _HD44780_Init
     _HD44780_Clear
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
       _HD44780_Delay
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
     _HD44780_Cmd4bit
       _HD44780_Delay
     _HD44780_Delay
     _HD44780_DisplayOn
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
     _HD44780_InitPins
   _OpenADC
   _ReadADC
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   _printf
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _HD44780_CursorSet
         _HD44780_Cmd
           _HD44780_Cmd4bit
             _HD44780_Delay
       _HD44780_Data
         _HD44780_Cmd4bit
           _HD44780_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0       6        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       5        0.0%
BITBANK5            F4      0       0      14        0.0%
BANK5               F4      0       0      15        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      3D       1       48.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D       7        0.0%
DATA                 0      0      3D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 11 14:43:25 2016

                          l26 1142                            l19 10D6                            l75 111C  
         ___wmul@multiplicand 0003                   __CFG_BORV$2 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                  ___ftadd@exp1 0018                  ___ftadd@exp2 0017  
                ___ftadd@sign 0016                           l213 0F24                           l446 0D7E  
                         l526 1174                           l473 088A                           l484 093A  
                         l493 0956                           l469 0860                           l629 0F70  
                         l639 1042                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         u950 0E4E                           u970 0E68                           u990 0E84  
                         u968 0E50                           u988 0E6A                           _dcf 0034  
                         prod 000FF3                           wreg 000FE8                  __CFG_LVP$OFF 000000  
    __size_of_HD44780_Cmd4bit 0088                  __CFG_WDT$OFF 000000                          l1602 1148  
                        l1530 0D36                          l1522 0D00                          l1508 1198  
                        l1460 0FE6                          l1700 070C                          l1438 1122  
                        l1622 0DCC                          l1534 0D4C                          l1526 0D0E  
                        l1536 0D6A                          l1528 0D18                          l1560 0F3E  
                        l1712 0738                          l1538 0D74                          l1810 0972  
                        l1802 0928                          l1562 0F46                          l1730 079A  
                        l1722 0776                          l1820 09A2                          l1804 0932  
                        l1572 0F66                          l1564 0F4A                          l1580 1018  
                        l1484 0FAA                          l1740 07FA                          l1724 077E  
                        l1830 0C24                          l1582 1020                          l1478 0F94  
                        l1734 07AC                          l1726 0786                          l1718 0752  
                        l1670 0636                          l1742 0802                          l1912 0B9A  
                        l1584 1024                          l1488 0FBE                          l1736 07B2  
                        l1594 10C4                          l1762 086E                          l1850 0C7E  
                        l1930 0BEA                          l1922 0BC2                          l1666 0626  
                        l1860 0CA6                          l1836 0C4C                          l1924 0BCE  
                        l1916 0BAA                          l1588 1038                          l1676 065E  
                        l1940 0A02                          l1790 08EA                          l1854 0C8E  
                        l1926 0BD4                          l1686 06BA                          l1942 0A06  
                        l1880 1060                          l1792 08F4                          l1784 08C8  
                        l1768 0898                          l1864 0CB6                          l1688 06E0  
                        l1794 08FE                          l1698 0708                          l1796 0906  
                        l1894 0B34                          STR_1 060B                          STR_2 0616  
                        u1010 0E9E                          u1008 0E86                          u1028 0EA0  
                        u1420 121C                          u1431 082C                          u1441 0840  
                        u1641 0C0C                          u1721 0B18                          u1740 0B52  
                        u1661 0C34                          u1745 0B4A                          u1877 10CA  
             ??_HD44780_Delay 0003               ??_HD44780_Clear 0009                          _main 09C8  
                ___ftpack@arg 0001                  ___ftpack@exp 0004                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
               __CFG_BOREN$ON 000000                          prodh 000FF4                          prodl 000FF3  
                        start 0002                 __CFG_IESO$OFF 000000               __end_of_Delayms 10EC  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0026                  ___param_bank 000010  
                ___ftmul@sign 0027               __end_of_BusyADC 1220               __end_of_ReadADC 1208  
             __end_of_OpenADC 0F28                  ___fttol@exp1 000F                  ___fttol@lval 000B  
                       ?_main 0001               __end_of___ftadd 09C8               __end_of___ftneg 1182  
             __end_of___ftmul 0CF0               __end_of___fttol 0BFC               __end_of___lwdiv 0F7A  
             __end_of___lwmod 104C                         _Delay 1138                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                 ___awtoft@sign 000C               __end_of_dpowers 060B  
                       _lamda 003B               __end_of_isdigit 11A0                 ___ftpack@sign 0005  
                       _putch 0F7A                    _ConvertADC 1228                         tablat 000FF5  
                       status 000FD8               __initialization 1084      __end_of_HD44780_InitPins 11BA  
                __end_of_main 0B08                        ??_main 0028                 ___fttol@sign1 000A  
               __activetblptr 000002                        ?_Delay 0001                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                      _ADRESL 000FC3              __end_of___awtoft 1084                        ?_putch 0001  
            __end_of___ftpack 0D9E                        Delay@i 0004                     ??_Delayms 0003  
                   ??_BusyADC 0001                     ??_ReadADC 0003             ??_HD44780_Cmd4bit 0006  
                   ??_OpenADC 0003                __CFG_XINST$OFF 000000                        ___wmul 10EC  
                   ??___ftadd 0013                __CFG_STVREN$ON 000000                     ??___ftneg 0004  
                   ??___ftmul 001F                     ??___fttol 0005                     ??___lwdiv 0005  
                   ??___lwmod 000C                        clear_0 108A                        _printf 061C  
       ___ftmul@f3_as_product 0023                  __pdataCOMRAM 0037                     ??_isdigit 0001  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 000F                   ?_ConvertADC 0001  
                  __accesstop 0080       __end_of__initialization 10B0               __CFG_PBADEN$OFF 000000  
                  ___ftadd@f1 000D                    ___ftadd@f2 0010                 ___rparam_used 000001  
                  ___ftneg@f1 0001                 ??_HD44780_Cmd 0008                    ___awtoft@c 0009  
               __end_of_Delay 115E                    ___ftmul@f1 0019                    ___ftmul@f2 001C  
                  ___fttol@f1 0001                __pcstackCOMRAM 0001                 __end_of_putch 0FC8  
                     ??_Delay 0003                       ??_putch 000F                       ?___wmul 0001  
         __end_of_HD44780_Cmd 11E6           __size_of_ConvertADC 0004                     ?___awtoft 0009  
                   ?___ftpack 0001                       ?_printf 0010                       Delay@us 0001  
                     _Delayms 10BA                       _BusyADC 1214                       _ReadADC 11FA  
       __end_of_HD44780_Delay 1138         __end_of_HD44780_Clear 11FA                       _OpenADC 0ECA  
                     __Hparam 0000                       __Lparam 0000             ?_HD44780_InitPins 0001  
                     ___ftadd 081C                       ___ftneg 115E               __size_of___wmul 0026  
                     ___ftmul 0BFC                       ___fttol 0B08                       ___lwdiv 0F28  
                     ___lwmod 100A                  __psmallconst 0600            ??_HD44780_InitPins 0001  
                     __pcinit 1084                    ??___awtoft 000C                    ??___ftpack 0006  
                     __ramtop 0600                       __ptext0 09C8                       __ptext1 061C  
                     __ptext2 0F7A                       __ptext3 11BA                       __ptext4 0FC8  
                     __ptext5 1182                       __ptext6 10EC                       __ptext7 100A  
                     __ptext8 0F28                       __ptext9 0B08               __size_of_printf 0200  
                     _dpowers 0601                       _isdigit 1182               _HD44780_Cmd4bit 0E42  
              OpenADC@config2 0001          end_of_initialization 10B0                 __Lmediumconst 0000  
                   Delayms@ms 0001                 ?_HD44780_Data 0001                 ?_HD44780_Init 0009  
                 _HD44780_Cmd 11D0                       printf@c 0020                       printf@f 0010  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                     _PORTBbits 000F81          HD44780_CursorSet@col 000E  
        HD44780_CursorSet@row 0009                     _TRISBbits 000F93                  ??_ConvertADC 0001  
                 printf@width 001E                ??_HD44780_Data 0008                ??_HD44780_Init 000A  
                 ___ftmul@exp 0022                __end_of___wmul 1112                 __pidataCOMRAM 1220  
          __end_of_ConvertADC 122C       __end_of_HD44780_Cmd4bit 0ECA                __end_of_printf 081C  
         start_initialization 1084            HD44780_Cmd4bit@cmd 0007                      ??___wmul 0005  
            __CFG_LPT1OSC$OFF 000000                      ??_printf 0014             __size_of___awtoft 0038  
           __size_of___ftpack 00AE                   __pbssCOMRAM 002D                      ?_Delayms 0001  
                    ?_BusyADC 0001                      ?_ReadADC 0001             OpenADC@portconfig 0002  
                    ?_OpenADC 0001                     _main$1250 0028              ___lwdiv@dividend 0001  
           __CFG_CCP2MX$PORTC 000000                      ?___ftadd 000D                      ?___ftneg 0001  
                    ?___ftmul 0019                      ?___fttol 0001                      ?___lwdiv 0001  
                    ?___lwmod 0008              ?_HD44780_Cmd4bit 0001                   __smallconst 0600  
                    ?_isdigit 0001          __end_of_HD44780_Data 11D0          __end_of_HD44780_Init 0E42  
              __size_of_Delay 0026     __size_of_HD44780_InitPins 001A              ___lwdiv@quotient 0005  
              __size_of_putch 004E                ___wmul@product 0005                 OpenADC@config 0005  
                    _PIE1bits 000F9D                      Delayms@i 0004                  ?_HD44780_Cmd 0001  
                    _PIR1bits 000F9E              __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0001                     main@adcin 002B                    printf@flag 001B  
                  printf@prec 001A        __size_of_HD44780_Delay 0026        __size_of_HD44780_Clear 0014  
                   copy_data0 10A4  HD44780_CursorSet@row_offsets 000A             _HD44780_DisplayOn 1208  
            __size_of_Delayms 0032            ?_HD44780_DisplayOn 0001              __size_of_BusyADC 000C  
            __size_of_ReadADC 000E                      __Hrparam 0000              __size_of_OpenADC 005E  
                    __Lrparam 0000             _HD44780_CursorSet 0FC8           ??_HD44780_DisplayOn 0009  
            __size_of___ftadd 01AC              __size_of___ftneg 0024              __size_of___ftmul 00F4  
            __size_of___fttol 00F4              __size_of___lwdiv 0052              __size_of___lwmod 0042  
          ?_HD44780_CursorSet 0009                      ___awtoft 104C                      ___ftpack 0CF0  
                 _isdigit$901 0002           ??_HD44780_CursorSet 000A              __size_of_isdigit 001E  
             ___lwdiv@divisor 0003               ___lwdiv@counter 0007                      __ptext10 115E  
                    __ptext11 0BFC                      __ptext20 11E6                      __ptext12 081C  
                    __ptext21 11D0                      __ptext13 104C                      __ptext22 0E42  
                    __ptext14 0CF0                      __ptext23 1112                      __ptext15 11FA  
                    __ptext24 10BA                      __ptext16 0ECA                      __ptext25 1138  
                    __ptext17 0D9E                      __ptext26 1228                      __ptext18 11A0  
                    __ptext27 1214                      __ptext19 1208     __end_of_HD44780_DisplayOn 1214  
               __size_of_main 0140                 _HD44780_Delay 1112                 _HD44780_Clear 11E6  
   __end_of_HD44780_CursorSet 100A                     printf@val 001C         __size_of_HD44780_Data 0016  
       __size_of_HD44780_Init 00A4                    _INTCONbits 000FF2              _HD44780_InitPins 11A0  
                    isdigit@c 0003              HD44780_Data@data 0008              ___lwmod@dividend 0008  
              ?_HD44780_Delay 0001                ?_HD44780_Clear 0001        HD44780_CursorSet@F4227 0037  
                _HD44780_Data 11BA                  _HD44780_Init 0D9E                  _HD44780_Opts 002D  
                    printf@ap 0018          __size_of_HD44780_Cmd 0016              HD44780_Init@cols 000A  
            HD44780_Init@rows 0009               HD44780_Delay@us 0001               ___lwmod@divisor 000A  
             ___lwmod@counter 000C    __size_of_HD44780_DisplayOn 000C                HD44780_Cmd@cmd 0008  
              HD44780_Delay@i 0004    __size_of_HD44780_CursorSet 0042  
