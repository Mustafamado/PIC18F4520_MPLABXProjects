

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Mar 20 18:47:17 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  0018F2                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for HD44780_CursorSet@F4400
    56  0018F2  00                 	db	0
    57  0018F3  40                 	db	64
    58  0018F4  14                 	db	20
    59  0018F5  54                 	db	84
    60                           
    61                           ;initializer for _lamda
    62                           ;main.c: 45: int state = 0;
    63                           ;main.c: 46: unsigned int sseg_counter = 0;
    64                           ;main.c: 47: int int_key = 0xFF;
    65                           ;main.c: 48: char char_key;
    66                           ;main.c: 49: int adcin;
    67                           ;main.c: 50: double dcf = 0;
    68  0018F6  CD                 	db	205
    69  0018F7  4C                 	db	76
    70  0018F8  3D                 	db	61
    71                           
    72                           ;initializer for _int_key
    73  0018F9  00FF               	dw	255
    74                           
    75                           	psect	idataBANK0
    76  00184E                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _sseg_codes
    80  00184E  003F               	dw	63
    81  001850  0006               	dw	6
    82  001852  005B               	dw	91
    83  001854  004F               	dw	79
    84  001856  0066               	dw	102
    85  001858  006D               	dw	109
    86  00185A  007D               	dw	125
    87  00185C  0007               	dw	7
    88  00185E  007F               	dw	127
    89  001860  006F               	dw	111
    90  001862  0077               	dw	119
    91  001864  007C               	dw	124
    92  001866  0039               	dw	57
    93  001868  005E               	dw	94
    94  00186A  0079               	dw	121
    95  00186C  0071               	dw	113
    96                           
    97                           	psect	mediumconst
    98  007EFC                     __pmediumconst:
    99                           	opt stack 0
   100  007EFC  00                 	db	0
   101  007EFD                     _dpowers:
   102                           	opt stack 0
   103  007EFD  0001               	dw	1
   104  007EFF  000A               	dw	10
   105  007F01  0064               	dw	100
   106  007F03  03E8               	dw	1000
   107  007F05  2710               	dw	10000
   108  007F07                     __end_of_dpowers:
   109                           	opt stack 0
   110  0000                     _ADCON0	set	4034
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _ADCON1	set	4033
   113  0000                     _ADCON2	set	4032
   114  0000                     _ADRESH	set	4036
   115  0000                     _ADRESL	set	4035
   116  0000                     _INTCON2bits	set	4081
   117  0000                     _INTCON3bits	set	4080
   118  0000                     _INTCONbits	set	4082
   119  0000                     _LATAbits	set	3977
   120  0000                     _LATCbits	set	3979
   121  0000                     _LATEbits	set	3981
   122  0000                     _PIE1bits	set	3997
   123  0000                     _PIR1bits	set	3998
   124  0000                     _PORTBbits	set	3969
   125  0000                     _PORTDbits	set	3971
   126  0000                     _TRISAbits	set	3986
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISCbits	set	3988
   129  0000                     _TRISDbits	set	3989
   130  0000                     _TRISEbits	set	3990
   131  007F07                     STR_23:
   132  007F07  34                 	db	52	;'4'
   133  007F08  2E                 	db	46
   134  007F09  4B                 	db	75	;'K'
   135  007F0A  45                 	db	69	;'E'
   136  007F0B  59                 	db	89	;'Y'
   137  007F0C  50                 	db	80	;'P'
   138  007F0D  41                 	db	65	;'A'
   139  007F0E  44                 	db	68	;'D'
   140  007F0F  20                 	db	32
   141  007F10  54                 	db	84	;'T'
   142  007F11  45                 	db	69	;'E'
   143  007F12  53                 	db	83	;'S'
   144  007F13  54                 	db	84	;'T'
   145  007F14  3A                 	db	58	;':'
   146  007F15  20                 	db	32
   147  007F16  25                 	db	37
   148  007F17  63                 	db	99	;'c'
   149  007F18  00                 	db	0
   150  007F19                     STR_20:
   151  007F19  3C                 	db	60	;'<'
   152  007F1A  3C                 	db	60	;'<'
   153  007F1B  53                 	db	83	;'S'
   154  007F1C  53                 	db	83	;'S'
   155  007F1D  45                 	db	69	;'E'
   156  007F1E  47                 	db	71	;'G'
   157  007F1F  20                 	db	32
   158  007F20  20                 	db	32
   159  007F21  20                 	db	32
   160  007F22  20                 	db	32
   161  007F23  20                 	db	32
   162  007F24  41                 	db	65	;'A'
   163  007F25  44                 	db	68	;'D'
   164  007F26  43                 	db	67	;'C'
   165  007F27  3E                 	db	62	;'>'
   166  007F28  3E                 	db	62	;'>'
   167  007F29  00                 	db	0
   168  007F2A                     STR_16:
   169  007F2A  3C                 	db	60	;'<'
   170  007F2B  3C                 	db	60	;'<'
   171  007F2C  4C                 	db	76	;'L'
   172  007F2D  45                 	db	69	;'E'
   173  007F2E  44                 	db	68	;'D'
   174  007F2F  20                 	db	32
   175  007F30  20                 	db	32
   176  007F31  20                 	db	32
   177  007F32  4B                 	db	75	;'K'
   178  007F33  45                 	db	69	;'E'
   179  007F34  59                 	db	89	;'Y'
   180  007F35  50                 	db	80	;'P'
   181  007F36  41                 	db	65	;'A'
   182  007F37  44                 	db	68	;'D'
   183  007F38  3E                 	db	62	;'>'
   184  007F39  3E                 	db	62	;'>'
   185  007F3A  00                 	db	0
   186  007F3B                     STR_25:
   187  007F3B  3C                 	db	60	;'<'
   188  007F3C  3C                 	db	60	;'<'
   189  007F3D  4B                 	db	75	;'K'
   190  007F3E  45                 	db	69	;'E'
   191  007F3F  59                 	db	89	;'Y'
   192  007F40  50                 	db	80	;'P'
   193  007F41  41                 	db	65	;'A'
   194  007F42  44                 	db	68	;'D'
   195  007F43  20                 	db	32
   196  007F44  20                 	db	32
   197  007F45  20                 	db	32
   198  007F46  4C                 	db	76	;'L'
   199  007F47  43                 	db	67	;'C'
   200  007F48  44                 	db	68	;'D'
   201  007F49  3E                 	db	62	;'>'
   202  007F4A  3E                 	db	62	;'>'
   203  007F4B  00                 	db	0
   204  007F4C                     STR_4:
   205  007F4C  3C                 	db	60	;'<'
   206  007F4D  3C                 	db	60	;'<'
   207  007F4E  41                 	db	65	;'A'
   208  007F4F  44                 	db	68	;'D'
   209  007F50  43                 	db	67	;'C'
   210  007F51  20                 	db	32
   211  007F52  20                 	db	32
   212  007F53  20                 	db	32
   213  007F54  20                 	db	32
   214  007F55  20                 	db	32
   215  007F56  20                 	db	32
   216  007F57  4C                 	db	76	;'L'
   217  007F58  45                 	db	69	;'E'
   218  007F59  44                 	db	68	;'D'
   219  007F5A  3E                 	db	62	;'>'
   220  007F5B  3E                 	db	62	;'>'
   221  007F5C  00                 	db	0
   222  007F5D                     STR_12:
   223  007F5D  3C                 	db	60	;'<'
   224  007F5E  3C                 	db	60	;'<'
   225  007F5F  4C                 	db	76	;'L'
   226  007F60  43                 	db	67	;'C'
   227  007F61  44                 	db	68	;'D'
   228  007F62  20                 	db	32
   229  007F63  20                 	db	32
   230  007F64  20                 	db	32
   231  007F65  20                 	db	32
   232  007F66  20                 	db	32
   233  007F67  53                 	db	83	;'S'
   234  007F68  53                 	db	83	;'S'
   235  007F69  45                 	db	69	;'E'
   236  007F6A  47                 	db	71	;'G'
   237  007F6B  3E                 	db	62	;'>'
   238  007F6C  3E                 	db	62	;'>'
   239  007F6D  00                 	db	0
   240  007F6E                     STR_2:
   241  007F6E  31                 	db	49	;'1'
   242  007F6F  36                 	db	54	;'6'
   243  007F70  78                 	db	120	;'x'
   244  007F71  32                 	db	50	;'2'
   245  007F72  20                 	db	32
   246  007F73  48                 	db	72	;'H'
   247  007F74  44                 	db	68	;'D'
   248  007F75  34                 	db	52	;'4'
   249  007F76  34                 	db	52	;'4'
   250  007F77  37                 	db	55	;'7'
   251  007F78  38                 	db	56	;'8'
   252  007F79  30                 	db	48	;'0'
   253  007F7A  20                 	db	32
   254  007F7B  4C                 	db	76	;'L'
   255  007F7C  43                 	db	67	;'C'
   256  007F7D  44                 	db	68	;'D'
   257  007F7E  00                 	db	0
   258  007F7F                     STR_28:
   259  007F7F  35                 	db	53	;'5'
   260  007F80  2E                 	db	46
   261  007F81  41                 	db	65	;'A'
   262  007F82  44                 	db	68	;'D'
   263  007F83  43                 	db	67	;'C'
   264  007F84  20                 	db	32
   265  007F85  54                 	db	84	;'T'
   266  007F86  45                 	db	69	;'E'
   267  007F87  53                 	db	83	;'S'
   268  007F88  54                 	db	84	;'T'
   269  007F89  3A                 	db	58	;':'
   270  007F8A  20                 	db	32
   271  007F8B  25                 	db	37
   272  007F8C  34                 	db	52	;'4'
   273  007F8D  64                 	db	100	;'d'
   274  007F8E  00                 	db	0
   275  007F8F                     STR_7:
   276  007F8F  50                 	db	80	;'P'
   277  007F90  52                 	db	82	;'R'
   278  007F91  45                 	db	69	;'E'
   279  007F92  53                 	db	83	;'S'
   280  007F93  53                 	db	83	;'S'
   281  007F94  20                 	db	32
   282  007F95  4B                 	db	75	;'K'
   283  007F96  45                 	db	69	;'E'
   284  007F97  59                 	db	89	;'Y'
   285  007F98  31                 	db	49	;'1'
   286  007F99  20                 	db	32
   287  007F9A  46                 	db	70	;'F'
   288  007F9B  4F                 	db	79	;'O'
   289  007F9C  52                 	db	82	;'R'
   290  007F9D  00                 	db	0
   291  007F9E                     STR_9:
   292  007F9E  50                 	db	80	;'P'
   293  007F9F  52                 	db	82	;'R'
   294  007FA0  45                 	db	69	;'E'
   295  007FA1  53                 	db	83	;'S'
   296  007FA2  53                 	db	83	;'S'
   297  007FA3  20                 	db	32
   298  007FA4  4B                 	db	75	;'K'
   299  007FA5  45                 	db	69	;'E'
   300  007FA6  59                 	db	89	;'Y'
   301  007FA7  32                 	db	50	;'2'
   302  007FA8  20                 	db	32
   303  007FA9  46                 	db	70	;'F'
   304  007FAA  4F                 	db	79	;'O'
   305  007FAB  52                 	db	82	;'R'
   306  007FAC  00                 	db	0
   307  007FAD                     STR_19:
   308  007FAD  34                 	db	52	;'4'
   309  007FAE  2E                 	db	46
   310  007FAF  4B                 	db	75	;'K'
   311  007FB0  45                 	db	69	;'E'
   312  007FB1  59                 	db	89	;'Y'
   313  007FB2  50                 	db	80	;'P'
   314  007FB3  41                 	db	65	;'A'
   315  007FB4  44                 	db	68	;'D'
   316  007FB5  20                 	db	32
   317  007FB6  54                 	db	84	;'T'
   318  007FB7  45                 	db	69	;'E'
   319  007FB8  53                 	db	83	;'S'
   320  007FB9  54                 	db	84	;'T'
   321  007FBA  00                 	db	0
   322  007FBB                     STR_15:
   323  007FBB  33                 	db	51	;'3'
   324  007FBC  2E                 	db	46
   325  007FBD  53                 	db	83	;'S'
   326  007FBE  53                 	db	83	;'S'
   327  007FBF  45                 	db	69	;'E'
   328  007FC0  47                 	db	71	;'G'
   329  007FC1  20                 	db	32
   330  007FC2  54                 	db	84	;'T'
   331  007FC3  45                 	db	69	;'E'
   332  007FC4  53                 	db	83	;'S'
   333  007FC5  54                 	db	84	;'T'
   334  007FC6  00                 	db	0
   335  007FC7                     STR_1:
   336  007FC7  50                 	db	80	;'P'
   337  007FC8  49                 	db	73	;'I'
   338  007FC9  43                 	db	67	;'C'
   339  007FCA  31                 	db	49	;'1'
   340  007FCB  38                 	db	56	;'8'
   341  007FCC  46                 	db	70	;'F'
   342  007FCD  34                 	db	52	;'4'
   343  007FCE  35                 	db	53	;'5'
   344  007FCF  32                 	db	50	;'2'
   345  007FD0  30                 	db	48	;'0'
   346  007FD1  00                 	db	0
   347  007FD2                     STR_24:
   348  007FD2  35                 	db	53	;'5'
   349  007FD3  2E                 	db	46
   350  007FD4  41                 	db	65	;'A'
   351  007FD5  44                 	db	68	;'D'
   352  007FD6  43                 	db	67	;'C'
   353  007FD7  20                 	db	32
   354  007FD8  54                 	db	84	;'T'
   355  007FD9  45                 	db	69	;'E'
   356  007FDA  53                 	db	83	;'S'
   357  007FDB  54                 	db	84	;'T'
   358  007FDC  00                 	db	0
   359  007FDD                     STR_3:
   360  007FDD  31                 	db	49	;'1'
   361  007FDE  2E                 	db	46
   362  007FDF  4C                 	db	76	;'L'
   363  007FE0  43                 	db	67	;'C'
   364  007FE1  44                 	db	68	;'D'
   365  007FE2  20                 	db	32
   366  007FE3  54                 	db	84	;'T'
   367  007FE4  45                 	db	69	;'E'
   368  007FE5  53                 	db	83	;'S'
   369  007FE6  54                 	db	84	;'T'
   370  007FE7  00                 	db	0
   371  007FE8                     STR_11:
   372  007FE8  32                 	db	50	;'2'
   373  007FE9  2E                 	db	46
   374  007FEA  4C                 	db	76	;'L'
   375  007FEB  45                 	db	69	;'E'
   376  007FEC  44                 	db	68	;'D'
   377  007FED  20                 	db	32
   378  007FEE  54                 	db	84	;'T'
   379  007FEF  45                 	db	69	;'E'
   380  007FF0  53                 	db	83	;'S'
   381  007FF1  54                 	db	84	;'T'
   382  007FF2  00                 	db	0
   383  007FF3                     STR_10:
   384  007FF3  52                 	db	82	;'R'
   385  007FF4  49                 	db	73	;'I'
   386  007FF5  47                 	db	71	;'G'
   387  007FF6  48                 	db	72	;'H'
   388  007FF7  54                 	db	84	;'T'
   389  007FF8  00                 	db	0
   390  007FF9                     STR_8:
   391  007FF9  4C                 	db	76	;'L'
   392  007FFA  45                 	db	69	;'E'
   393  007FFB  46                 	db	70	;'F'
   394  007FFC  54                 	db	84	;'T'
   395  007FFD  00                 	db	0
   396  0000                     
   397                           ; #config settings
   398  007FFE  00                 	db	0	; dummy byte at the end
   399  0000                     
   400                           	psect	cinit
   401  001594                     __pcinit:
   402                           	opt stack 0
   403  001594                     start_initialization:
   404                           	opt stack 0
   405  001594                     __initialization:
   406                           	opt stack 0
   407                           
   408                           ; Clear objects allocated to COMRAM (29 bytes)
   409  001594  EE00  F03C         	lfsr	0,__pbssCOMRAM
   410  001598  0E1D               	movlw	29
   411  00159A                     clear_0:
   412  00159A  6AEE               	clrf	postinc0,c
   413  00159C  06E8               	decf	wreg,f,c
   414  00159E  E1FD               	bnz	clear_0
   415                           
   416                           ; Initialize objects allocated to BANK0 (32 bytes)
   417                           ; load TBLPTR registers with __pidataBANK0
   418  0015A0  0E4E               	movlw	low __pidataBANK0
   419  0015A2  6EF6               	movwf	tblptrl,c
   420  0015A4  0E18               	movlw	high __pidataBANK0
   421  0015A6  6EF7               	movwf	tblptrh,c
   422  0015A8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   423  0015AA  6EF8               	movwf	tblptru,c
   424  0015AC  EE00  F080         	lfsr	0,__pdataBANK0
   425  0015B0  EE10 F020          	lfsr	1,32
   426  0015B4                     copy_data0:
   427  0015B4  0009               	tblrd		*+
   428  0015B6  CFF5 FFEE          	movff	tablat,postinc0
   429  0015BA  50E5               	movf	postdec1,w,c
   430  0015BC  50E1               	movf	fsr1l,w,c
   431  0015BE  E1FA               	bnz	copy_data0
   432                           
   433                           ; Initialize objects allocated to COMRAM (9 bytes)
   434                           ; load TBLPTR registers with __pidataCOMRAM
   435  0015C0  0EF2               	movlw	low __pidataCOMRAM
   436  0015C2  6EF6               	movwf	tblptrl,c
   437  0015C4  0E18               	movlw	high __pidataCOMRAM
   438  0015C6  6EF7               	movwf	tblptrh,c
   439  0015C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   440  0015CA  6EF8               	movwf	tblptru,c
   441  0015CC  EE00  F059         	lfsr	0,__pdataCOMRAM
   442  0015D0  EE10 F009          	lfsr	1,9
   443  0015D4                     copy_data1:
   444  0015D4  0009               	tblrd		*+
   445  0015D6  CFF5 FFEE          	movff	tablat,postinc0
   446  0015DA  50E5               	movf	postdec1,w,c
   447  0015DC  50E1               	movf	fsr1l,w,c
   448  0015DE  E1FA               	bnz	copy_data1
   449  0015E0                     end_of_initialization:
   450                           	opt stack 0
   451  0015E0                     __end_of__initialization:
   452                           	opt stack 0
   453  0015E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   454  0015E2  6EF8               	movwf	tblptru,c
   455  0015E4  0100               	movlb	0
   456  0015E6  EFD7  F000         	goto	_main	;jump to C main() function
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	bssCOMRAM
   467  00003C                     __pbssCOMRAM:
   468                           	opt stack 0
   469  00003C                     _HD44780_Opts:
   470                           	opt stack 0
   471  00003C                     	ds	7
   472  000043                     _adc_flag:
   473                           	opt stack 0
   474  000043                     	ds	2
   475  000045                     _adcin:
   476                           	opt stack 0
   477  000045                     	ds	2
   478  000047                     _counter:
   479                           	opt stack 0
   480  000047                     	ds	2
   481  000049                     _keypad_flag:
   482                           	opt stack 0
   483  000049                     	ds	2
   484  00004B                     _lcd_flag:
   485                           	opt stack 0
   486  00004B                     	ds	2
   487  00004D                     _led_flag:
   488                           	opt stack 0
   489  00004D                     	ds	2
   490  00004F                     _sseg_counter:
   491                           	opt stack 0
   492  00004F                     	ds	2
   493  000051                     _sseg_flag:
   494                           	opt stack 0
   495  000051                     	ds	2
   496  000053                     _state:
   497                           	opt stack 0
   498  000053                     	ds	2
   499  000055                     _char_key:
   500                           	opt stack 0
   501  000055                     	ds	1
   502  000056                     _dcf:
   503                           	opt stack 0
   504  000056                     	ds	3
   505                           tblptru	equ	0xFF8
   506                           tblptrh	equ	0xFF7
   507                           tblptrl	equ	0xFF6
   508                           tablat	equ	0xFF5
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           postdec1	equ	0xFE5
   512                           fsr1l	equ	0xFE1
   513                           
   514                           	psect	dataCOMRAM
   515  000059                     __pdataCOMRAM:
   516                           	opt stack 0
   517  000059                     HD44780_CursorSet@F4400:
   518                           	opt stack 0
   519  000059                     	ds	4
   520  00005D                     _lamda:
   521                           	opt stack 0
   522  00005D                     	ds	3
   523  000060                     _int_key:
   524                           	opt stack 0
   525  000060                     	ds	2
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	dataBANK0
   536  000080                     __pdataBANK0:
   537                           	opt stack 0
   538  000080                     _sseg_codes:
   539                           	opt stack 0
   540  000080                     	ds	32
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           
   550                           	psect	cstackCOMRAM
   551  000001                     __pcstackCOMRAM:
   552                           	opt stack 0
   553  000001                     ??_ExternalInterrupt:
   554  000001                     
   555                           ; 2 bytes @ 0x0
   556  000001                     	ds	17
   557  000012                     ??_isdigit:
   558  000012                     ?_KEYPAD_Read:
   559                           	opt stack 0
   560  000012                     ?_ReadADC:
   561                           	opt stack 0
   562  000012                     ?___wmul:
   563                           	opt stack 0
   564  000012                     ?___lwdiv:
   565                           	opt stack 0
   566  000012                     ?___ftpack:
   567                           	opt stack 0
   568  000012                     ?___ftneg:
   569                           	opt stack 0
   570  000012                     ?___fttol:
   571                           	opt stack 0
   572  000012                     OpenADC@config2:
   573                           	opt stack 0
   574  000012                     Delayms@ms:
   575                           	opt stack 0
   576  000012                     Delay@us:
   577                           	opt stack 0
   578  000012                     HD44780_Delay@us:
   579                           	opt stack 0
   580  000012                     KEYPAD_KeytoASCII@KeyNumber:
   581                           	opt stack 0
   582  000012                     ___wmul@multiplier:
   583                           	opt stack 0
   584  000012                     ___lwdiv@dividend:
   585                           	opt stack 0
   586  000012                     ___ftpack@arg:
   587                           	opt stack 0
   588  000012                     ___ftneg@f1:
   589                           	opt stack 0
   590  000012                     ___fttol@f1:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x11
   594  000012                     	ds	1
   595  000013                     OpenADC@portconfig:
   596                           	opt stack 0
   597  000013                     _isdigit$1751:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x12
   601  000013                     	ds	1
   602  000014                     ??_OpenADC:
   603  000014                     ??_ReadADC:
   604  000014                     ??_Delayms:
   605  000014                     ??_Delay:
   606  000014                     ??_HD44780_Delay:
   607  000014                     isdigit@c:
   608                           	opt stack 0
   609  000014                     ___wmul@multiplicand:
   610                           	opt stack 0
   611  000014                     ___lwdiv@divisor:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x13
   615  000014                     	ds	1
   616  000015                     ___ftpack@exp:
   617                           	opt stack 0
   618  000015                     Delayms@i:
   619                           	opt stack 0
   620  000015                     Delay@i:
   621                           	opt stack 0
   622  000015                     HD44780_Delay@i:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x14
   626  000015                     	ds	1
   627  000016                     ??___fttol:
   628  000016                     OpenADC@config:
   629                           	opt stack 0
   630  000016                     ___ftpack@sign:
   631                           	opt stack 0
   632  000016                     ___wmul@product:
   633                           	opt stack 0
   634  000016                     ___lwdiv@quotient:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x15
   638  000016                     	ds	1
   639  000017                     ??_HD44780_Cmd4bit:
   640  000017                     ??___ftpack:
   641                           
   642                           ; 0 bytes @ 0x16
   643  000017                     	ds	1
   644  000018                     HD44780_Cmd4bit@cmd:
   645                           	opt stack 0
   646  000018                     ___lwdiv@counter:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x17
   650  000018                     	ds	1
   651  000019                     ?___lwmod:
   652                           	opt stack 0
   653  000019                     HD44780_Cmd@cmd:
   654                           	opt stack 0
   655  000019                     HD44780_Data@data:
   656                           	opt stack 0
   657  000019                     ___lwmod@dividend:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x18
   661  000019                     	ds	1
   662  00001A                     ?___awtoft:
   663                           	opt stack 0
   664  00001A                     HD44780_Init@rows:
   665                           	opt stack 0
   666  00001A                     HD44780_CursorSet@row:
   667                           	opt stack 0
   668  00001A                     ___awtoft@c:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x19
   672  00001A                     	ds	1
   673  00001B                     HD44780_Init@cols:
   674                           	opt stack 0
   675  00001B                     ___fttol@sign1:
   676                           	opt stack 0
   677  00001B                     ___lwmod@divisor:
   678                           	opt stack 0
   679  00001B                     HD44780_CursorSet@row_offsets:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x1A
   683  00001B                     	ds	1
   684  00001C                     ___fttol@lval:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x1B
   688  00001C                     	ds	1
   689  00001D                     ___awtoft@sign:
   690                           	opt stack 0
   691  00001D                     ___lwmod@counter:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x1C
   695  00001D                     	ds	1
   696  00001E                     ?___ftadd:
   697                           	opt stack 0
   698  00001E                     SSEG_Print@sseg:
   699                           	opt stack 0
   700  00001E                     ___ftadd@f1:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x1D
   704  00001E                     	ds	1
   705  00001F                     HD44780_CursorSet@col:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x1E
   709  00001F                     	ds	1
   710  000020                     putch@c:
   711                           	opt stack 0
   712  000020                     HD44780_Puts@y:
   713                           	opt stack 0
   714  000020                     ___fttol@exp1:
   715                           	opt stack 0
   716  000020                     SSEG_Print@n:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x1F
   720  000020                     	ds	1
   721  000021                     ?_printf:
   722                           	opt stack 0
   723  000021                     HD44780_Puts@str:
   724                           	opt stack 0
   725  000021                     printf@f:
   726                           	opt stack 0
   727  000021                     ___ftadd@f2:
   728                           	opt stack 0
   729                           
   730                           ; 3 bytes @ 0x20
   731  000021                     	ds	1
   732  000022                     ??_SSEG_Print:
   733                           
   734                           ; 0 bytes @ 0x21
   735  000022                     	ds	1
   736  000023                     HD44780_Puts@x:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x22
   740  000023                     	ds	1
   741  000024                     ??___ftadd:
   742                           
   743                           ; 0 bytes @ 0x23
   744  000024                     	ds	1
   745  000025                     ??_printf:
   746                           
   747                           ; 0 bytes @ 0x24
   748  000025                     	ds	2
   749  000027                     ___ftadd@sign:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x26
   753  000027                     	ds	1
   754  000028                     ___ftadd@exp2:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x27
   758  000028                     	ds	1
   759  000029                     ___ftadd@exp1:
   760                           	opt stack 0
   761  000029                     printf@cp:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x28
   765  000029                     	ds	1
   766  00002A                     ?___ftmul:
   767                           	opt stack 0
   768  00002A                     ___ftmul@f1:
   769                           	opt stack 0
   770                           
   771                           ; 3 bytes @ 0x29
   772  00002A                     	ds	1
   773  00002B                     printf@prec:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x2A
   777  00002B                     	ds	1
   778  00002C                     printf@ap:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x2B
   782  00002C                     	ds	1
   783  00002D                     ___ftmul@f2:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x2C
   787  00002D                     	ds	1
   788  00002E                     printf@flag:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x2D
   792  00002E                     	ds	1
   793  00002F                     printf@len:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x2E
   797  00002F                     	ds	1
   798  000030                     ??___ftmul:
   799                           
   800                           ; 0 bytes @ 0x2F
   801  000030                     	ds	1
   802  000031                     printf@val:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x30
   806  000031                     	ds	2
   807  000033                     ___ftmul@exp:
   808                           	opt stack 0
   809  000033                     printf@width:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x32
   813  000033                     	ds	1
   814  000034                     ___ftmul@f3_as_product:
   815                           	opt stack 0
   816                           
   817                           ; 3 bytes @ 0x33
   818  000034                     	ds	1
   819  000035                     printf@c:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x34
   823  000035                     	ds	2
   824  000037                     ___ftmul@cntr:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x36
   828  000037                     	ds	1
   829  000038                     ___ftmul@sign:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x37
   833  000038                     	ds	1
   834  000039                     _main$2010:
   835                           	opt stack 0
   836                           
   837                           ; 3 bytes @ 0x38
   838  000039                     	ds	3
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           
   848 ;;
   849 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   850 ;;
   851 ;; *************** function _main *****************
   852 ;; Defined at:
   853 ;;		line 62 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  2   82[None  ] int 
   860 ;; Registers used:
   861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         0       0       0       0       0       0       0
   868 ;;      Locals:         3       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0
   870 ;;      Totals:         3       0       0       0       0       0       0
   871 ;;Total ram usage:        3 bytes
   872 ;; Hardware stack levels required when called:    7
   873 ;; This function calls:
   874 ;;		_BusyADC
   875 ;;		_ConvertADC
   876 ;;		_Delay
   877 ;;		_Delayms
   878 ;;		_HD44780_Clear
   879 ;;		_HD44780_CursorSet
   880 ;;		_HD44780_Init
   881 ;;		_HD44780_Puts
   882 ;;		_KEYPAD_Init
   883 ;;		_KEYPAD_KeytoASCII
   884 ;;		_KEYPAD_Read
   885 ;;		_OpenADC
   886 ;;		_ReadADC
   887 ;;		_SSEG_Init
   888 ;;		_SSEG_Print
   889 ;;		___awtoft
   890 ;;		___ftadd
   891 ;;		___ftmul
   892 ;;		___ftneg
   893 ;;		___fttol
   894 ;;		___lwdiv
   895 ;;		___lwmod
   896 ;;		_printf
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text0
   903  0001AE                     __ptext0:
   904                           	opt stack 0
   905  0001AE                     _main:
   906                           	opt stack 24
   907                           
   908                           ;main.c: 63: TRISBbits.RB0 = 1;
   909                           
   910                           ;incstack = 0
   911  0001AE  8093               	bsf	3987,0,c	;volatile
   912                           
   913                           ;main.c: 64: TRISBbits.RB1 = 1;
   914  0001B0  8293               	bsf	3987,1,c	;volatile
   915                           
   916                           ;main.c: 65: TRISCbits.RC1 = 0;
   917  0001B2  9294               	bcf	3988,1,c	;volatile
   918                           
   919                           ;main.c: 66: TRISCbits.RC2 = 0;
   920  0001B4  9494               	bcf	3988,2,c	;volatile
   921                           
   922                           ;main.c: 67: LATCbits.LATC1 = 0;
   923  0001B6  928B               	bcf	3979,1,c	;volatile
   924                           
   925                           ;main.c: 68: LATCbits.LATC2 = 0;
   926  0001B8  948B               	bcf	3979,2,c	;volatile
   927                           
   928                           ;main.c: 71: INTCONbits.INT0E = 1;
   929  0001BA  88F2               	bsf	intcon,4,c	;volatile
   930                           
   931                           ;main.c: 72: INTCON2bits.INTEDG0 = 1;
   932  0001BC  8CF1               	bsf	intcon2,6,c	;volatile
   933                           
   934                           ;main.c: 73: INTCONbits.INT0F = 0;
   935  0001BE  92F2               	bcf	intcon,1,c	;volatile
   936                           
   937                           ;main.c: 74: INTCON3bits.INT1E = 1;
   938  0001C0  86F0               	bsf	intcon3,3,c	;volatile
   939                           
   940                           ;main.c: 75: INTCON2bits.INTEDG1 = 1;
   941  0001C2  8AF1               	bsf	intcon2,5,c	;volatile
   942                           
   943                           ;main.c: 76: INTCON3bits.INT1F = 0;
   944  0001C4  90F0               	bcf	intcon3,0,c	;volatile
   945                           
   946                           ;main.c: 77: (INTCONbits.GIE = 1);
   947  0001C6  8EF2               	bsf	intcon,7,c	;volatile
   948                           
   949                           ;main.c: 80: HD44780_Init(16, 2);
   950  0001C8  0E02               	movlw	2
   951  0001CA  6E1A               	movwf	HD44780_Init@rows,c
   952  0001CC  0E10               	movlw	16
   953  0001CE  EC54  F009         	call	_HD44780_Init
   954                           
   955                           ;main.c: 81: HD44780_Puts(3, 0, "PIC18F4520");
   956  0001D2  0E00               	movlw	0
   957  0001D4  6E20               	movwf	HD44780_Puts@y,c
   958  0001D6  0EC7               	movlw	low STR_1
   959  0001D8  6E21               	movwf	HD44780_Puts@str,c
   960  0001DA  0E7F               	movlw	high STR_1
   961  0001DC  6E22               	movwf	HD44780_Puts@str+1,c
   962  0001DE  0E03               	movlw	3
   963  0001E0  ECA7  F009         	call	_HD44780_Puts
   964                           
   965                           ;main.c: 82: HD44780_Puts(0, 1, "16x2 HD44780 LCD");
   966  0001E4  0E01               	movlw	1
   967  0001E6  6E20               	movwf	HD44780_Puts@y,c
   968  0001E8  0E6E               	movlw	low STR_2
   969  0001EA  6E21               	movwf	HD44780_Puts@str,c
   970  0001EC  0E7F               	movlw	high STR_2
   971  0001EE  6E22               	movwf	HD44780_Puts@str+1,c
   972  0001F0  0E00               	movlw	0
   973  0001F2  ECA7  F009         	call	_HD44780_Puts
   974                           
   975                           ;main.c: 83: Delayms(2000);
   976  0001F6  0E07               	movlw	7
   977  0001F8  6E13               	movwf	Delayms@ms+1,c
   978  0001FA  0ED0               	movlw	208
   979  0001FC  6E12               	movwf	Delayms@ms,c
   980  0001FE  EC84  F00B         	call	_Delayms	;wreg free
   981                           
   982                           ;main.c: 85: SSEG_Init();
   983  000202  ECCA  F00B         	call	_SSEG_Init	;wreg free
   984                           
   985                           ;main.c: 86: KEYPAD_Init();
   986  000206  EC16  F00C         	call	_KEYPAD_Init	;wreg free
   987                           
   988                           ;main.c: 88: OpenADC(0b10001111 &
   989                           ;main.c: 89: 0b11111111 &
   990                           ;main.c: 90: 0b11110001,
   991                           ;main.c: 91: 0b10000111 &
   992                           ;main.c: 92: 0b11111100 &
   993                           ;main.c: 93: 0b01111111,
   994                           ;main.c: 94: 0b11111110);
   995  00020A  0E04               	movlw	4
   996  00020C  6E12               	movwf	OpenADC@config2,c
   997  00020E  0EFE               	movlw	254
   998  000210  6E13               	movwf	OpenADC@portconfig,c
   999  000212  0E81               	movlw	129
  1000  000214  EC6D  F00A         	call	_OpenADC
  1001                           
  1002                           ;main.c: 95: Delay(50);
  1003  000218  0E00               	movlw	0
  1004  00021A  6E13               	movwf	Delay@us+1,c
  1005  00021C  0E32               	movlw	50
  1006  00021E  6E12               	movwf	Delay@us,c
  1007  000220  ECB4  F00B         	call	_Delay	;wreg free
  1008  000224  D000               	goto	l2802
  1009  000226                     l2802:
  1010                           
  1011                           ;main.c: 99: if (state == 0) {
  1012  000226  5053               	movf	_state,w,c
  1013  000228  1054               	iorwf	_state+1,w,c
  1014  00022A  A4D8               	btfss	status,2,c
  1015  00022C  D09E               	goto	l2844
  1016                           
  1017                           ;main.c: 100: counter = 0;
  1018  00022E  0E00               	movlw	0
  1019  000230  6E48               	movwf	_counter+1,c
  1020  000232  0E00               	movlw	0
  1021  000234  6E47               	movwf	_counter,c
  1022                           
  1023                           ;main.c: 101: lcd_flag = 0;
  1024  000236  0E00               	movlw	0
  1025  000238  6E4C               	movwf	_lcd_flag+1,c
  1026  00023A  0E00               	movlw	0
  1027  00023C  6E4B               	movwf	_lcd_flag,c
  1028                           
  1029                           ;main.c: 102: while(lcd_flag == 0) {
  1030  00023E  D032               	goto	l2818
  1031  000240                     l2806:
  1032                           
  1033                           ;main.c: 103: HD44780_Clear();
  1034  000240  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1035                           
  1036                           ;main.c: 104: Delayms(250);
  1037  000244  0E00               	movlw	0
  1038  000246  6E13               	movwf	Delayms@ms+1,c
  1039  000248  0EFA               	movlw	250
  1040  00024A  6E12               	movwf	Delayms@ms,c
  1041  00024C  EC84  F00B         	call	_Delayms	;wreg free
  1042                           
  1043                           ;main.c: 105: HD44780_Clear();
  1044  000250  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1045                           
  1046                           ;main.c: 106: HD44780_Puts(0, 0, "1.LCD TEST");
  1047  000254  0E00               	movlw	0
  1048  000256  6E20               	movwf	HD44780_Puts@y,c
  1049  000258  0EDD               	movlw	low STR_3
  1050  00025A  6E21               	movwf	HD44780_Puts@str,c
  1051  00025C  0E7F               	movlw	high STR_3
  1052  00025E  6E22               	movwf	HD44780_Puts@str+1,c
  1053  000260  0E00               	movlw	0
  1054  000262  ECA7  F009         	call	_HD44780_Puts
  1055                           
  1056                           ;main.c: 107: HD44780_Puts(0, 1, "<<ADC      LED>>");
  1057  000266  0E01               	movlw	1
  1058  000268  6E20               	movwf	HD44780_Puts@y,c
  1059  00026A  0E4C               	movlw	low STR_4
  1060  00026C  6E21               	movwf	HD44780_Puts@str,c
  1061  00026E  0E7F               	movlw	high STR_4
  1062  000270  6E22               	movwf	HD44780_Puts@str+1,c
  1063  000272  0E00               	movlw	0
  1064  000274  ECA7  F009         	call	_HD44780_Puts
  1065                           
  1066                           ;main.c: 108: Delayms(250);
  1067  000278  0E00               	movlw	0
  1068  00027A  6E13               	movwf	Delayms@ms+1,c
  1069  00027C  0EFA               	movlw	250
  1070  00027E  6E12               	movwf	Delayms@ms,c
  1071  000280  EC84  F00B         	call	_Delayms	;wreg free
  1072                           
  1073                           ;main.c: 109: counter++;
  1074  000284  4A47               	infsnz	_counter,f,c
  1075  000286  2A48               	incf	_counter+1,f,c
  1076                           
  1077                           ;main.c: 110: if(counter > 3) {counter = 0; break;}
  1078  000288  BE48               	btfsc	_counter+1,7,c
  1079  00028A  D00C               	goto	l2818
  1080  00028C  5048               	movf	_counter+1,w,c
  1081  00028E  E104               	bnz	u2920
  1082  000290  0E04               	movlw	4
  1083  000292  5C47               	subwf	_counter,w,c
  1084  000294  A0D8               	btfss	status,0,c
  1085  000296  D006               	goto	l2818
  1086  000298                     u2920:
  1087  000298  0E00               	movlw	0
  1088  00029A  6E48               	movwf	_counter+1,c
  1089  00029C  0E00               	movlw	0
  1090  00029E  6E47               	movwf	_counter,c
  1091  0002A0  D005               	goto	l2820
  1092  0002A2  D000               	goto	l2818
  1093  0002A4                     l2818:
  1094  0002A4  504B               	movf	_lcd_flag,w,c
  1095  0002A6  104C               	iorwf	_lcd_flag+1,w,c
  1096  0002A8  B4D8               	btfsc	status,2,c
  1097  0002AA  D7CA               	goto	l2806
  1098  0002AC                     l2820:
  1099                           
  1100                           ;main.c: 111: }
  1101                           ;main.c: 112: HD44780_Clear();
  1102  0002AC  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1103                           
  1104                           ;main.c: 113: HD44780_Puts(0, 0, "1.LCD TEST");
  1105  0002B0  0E00               	movlw	0
  1106  0002B2  6E20               	movwf	HD44780_Puts@y,c
  1107  0002B4  0EDD               	movlw	low STR_3
  1108  0002B6  6E21               	movwf	HD44780_Puts@str,c
  1109  0002B8  0E7F               	movlw	high STR_3
  1110  0002BA  6E22               	movwf	HD44780_Puts@str+1,c
  1111  0002BC  0E00               	movlw	0
  1112  0002BE  ECA7  F009         	call	_HD44780_Puts
  1113                           
  1114                           ;main.c: 114: HD44780_Puts(0, 1, "<<ADC      LED>>");
  1115  0002C2  0E01               	movlw	1
  1116  0002C4  6E20               	movwf	HD44780_Puts@y,c
  1117  0002C6  0E4C               	movlw	low STR_4
  1118  0002C8  6E21               	movwf	HD44780_Puts@str,c
  1119  0002CA  0E7F               	movlw	high STR_4
  1120  0002CC  6E22               	movwf	HD44780_Puts@str+1,c
  1121  0002CE  0E00               	movlw	0
  1122  0002D0  ECA7  F009         	call	_HD44780_Puts
  1123                           
  1124                           ;main.c: 116: while(lcd_flag == 0){
  1125  0002D4  D044               	goto	l2842
  1126  0002D6                     l2826:
  1127                           
  1128                           ;main.c: 117: HD44780_Clear();
  1129  0002D6  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1130                           
  1131                           ;main.c: 118: HD44780_Puts(0, 0, "PRESS KEY1 FOR");
  1132  0002DA  0E00               	movlw	0
  1133  0002DC  6E20               	movwf	HD44780_Puts@y,c
  1134  0002DE  0E8F               	movlw	low STR_7
  1135  0002E0  6E21               	movwf	HD44780_Puts@str,c
  1136  0002E2  0E7F               	movlw	high STR_7
  1137  0002E4  6E22               	movwf	HD44780_Puts@str+1,c
  1138  0002E6  0E00               	movlw	0
  1139  0002E8  ECA7  F009         	call	_HD44780_Puts
  1140                           
  1141                           ;main.c: 119: HD44780_Puts(0, 1, "LEFT");
  1142  0002EC  0E01               	movlw	1
  1143  0002EE  6E20               	movwf	HD44780_Puts@y,c
  1144  0002F0  0EF9               	movlw	low STR_8
  1145  0002F2  6E21               	movwf	HD44780_Puts@str,c
  1146  0002F4  0E7F               	movlw	high STR_8
  1147  0002F6  6E22               	movwf	HD44780_Puts@str+1,c
  1148  0002F8  0E00               	movlw	0
  1149  0002FA  ECA7  F009         	call	_HD44780_Puts
  1150                           
  1151                           ;main.c: 120: Delayms(500);
  1152  0002FE  0E01               	movlw	1
  1153  000300  6E13               	movwf	Delayms@ms+1,c
  1154  000302  0EF4               	movlw	244
  1155  000304  6E12               	movwf	Delayms@ms,c
  1156  000306  EC84  F00B         	call	_Delayms	;wreg free
  1157                           
  1158                           ;main.c: 121: HD44780_Clear();
  1159  00030A  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1160                           
  1161                           ;main.c: 122: HD44780_Puts(0, 0, "PRESS KEY2 FOR");
  1162  00030E  0E00               	movlw	0
  1163  000310  6E20               	movwf	HD44780_Puts@y,c
  1164  000312  0E9E               	movlw	low STR_9
  1165  000314  6E21               	movwf	HD44780_Puts@str,c
  1166  000316  0E7F               	movlw	high STR_9
  1167  000318  6E22               	movwf	HD44780_Puts@str+1,c
  1168  00031A  0E00               	movlw	0
  1169  00031C  ECA7  F009         	call	_HD44780_Puts
  1170                           
  1171                           ;main.c: 123: HD44780_Puts(0, 1, "RIGHT");
  1172  000320  0E01               	movlw	1
  1173  000322  6E20               	movwf	HD44780_Puts@y,c
  1174  000324  0EF3               	movlw	low STR_10
  1175  000326  6E21               	movwf	HD44780_Puts@str,c
  1176  000328  0E7F               	movlw	high STR_10
  1177  00032A  6E22               	movwf	HD44780_Puts@str+1,c
  1178  00032C  0E00               	movlw	0
  1179  00032E  ECA7  F009         	call	_HD44780_Puts
  1180                           
  1181                           ;main.c: 124: Delayms(500);
  1182  000332  0E01               	movlw	1
  1183  000334  6E13               	movwf	Delayms@ms+1,c
  1184  000336  0EF4               	movlw	244
  1185  000338  6E12               	movwf	Delayms@ms,c
  1186  00033A  EC84  F00B         	call	_Delayms	;wreg free
  1187                           
  1188                           ;main.c: 125: counter++;
  1189  00033E  4A47               	infsnz	_counter,f,c
  1190  000340  2A48               	incf	_counter+1,f,c
  1191                           
  1192                           ;main.c: 126: if(counter > 3) {counter = 0; break;}
  1193  000342  BE48               	btfsc	_counter+1,7,c
  1194  000344  D00C               	goto	l2842
  1195  000346  5048               	movf	_counter+1,w,c
  1196  000348  E104               	bnz	u2940
  1197  00034A  0E04               	movlw	4
  1198  00034C  5C47               	subwf	_counter,w,c
  1199  00034E  A0D8               	btfss	status,0,c
  1200  000350  D006               	goto	l2842
  1201  000352                     u2940:
  1202  000352  0E00               	movlw	0
  1203  000354  6E48               	movwf	_counter+1,c
  1204  000356  0E00               	movlw	0
  1205  000358  6E47               	movwf	_counter,c
  1206  00035A  D765               	goto	l2802
  1207  00035C  D000               	goto	l2842
  1208  00035E                     l2842:
  1209  00035E  504B               	movf	_lcd_flag,w,c
  1210  000360  104C               	iorwf	_lcd_flag+1,w,c
  1211  000362  A4D8               	btfss	status,2,c
  1212  000364  D760               	goto	l2802
  1213  000366  D7B7               	goto	l2826
  1214                           
  1215                           ;main.c: 127: }
  1216                           ;main.c: 128: }
  1217  000368  D75E               	goto	l2802
  1218  00036A                     l2844:
  1219                           
  1220                           ;main.c: 129: else if (state == 1) {
  1221  00036A  0453               	decf	_state,w,c
  1222  00036C  1054               	iorwf	_state+1,w,c
  1223  00036E  A4D8               	btfss	status,2,c
  1224  000370  D06B               	goto	l2876
  1225                           
  1226                           ;main.c: 130: counter = 0;
  1227  000372  0E00               	movlw	0
  1228  000374  6E48               	movwf	_counter+1,c
  1229  000376  0E00               	movlw	0
  1230  000378  6E47               	movwf	_counter,c
  1231                           
  1232                           ;main.c: 131: led_flag = 0;
  1233  00037A  0E00               	movlw	0
  1234  00037C  6E4E               	movwf	_led_flag+1,c
  1235  00037E  0E00               	movlw	0
  1236  000380  6E4D               	movwf	_led_flag,c
  1237                           
  1238                           ;main.c: 132: while(led_flag == 0) {
  1239  000382  D032               	goto	l2860
  1240  000384                     l2848:
  1241                           
  1242                           ;main.c: 133: HD44780_Clear();
  1243  000384  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1244                           
  1245                           ;main.c: 134: Delayms(250);
  1246  000388  0E00               	movlw	0
  1247  00038A  6E13               	movwf	Delayms@ms+1,c
  1248  00038C  0EFA               	movlw	250
  1249  00038E  6E12               	movwf	Delayms@ms,c
  1250  000390  EC84  F00B         	call	_Delayms	;wreg free
  1251                           
  1252                           ;main.c: 135: HD44780_Clear();
  1253  000394  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1254                           
  1255                           ;main.c: 136: HD44780_Puts(0, 0, "2.LED TEST");
  1256  000398  0E00               	movlw	0
  1257  00039A  6E20               	movwf	HD44780_Puts@y,c
  1258  00039C  0EE8               	movlw	low STR_11
  1259  00039E  6E21               	movwf	HD44780_Puts@str,c
  1260  0003A0  0E7F               	movlw	high STR_11
  1261  0003A2  6E22               	movwf	HD44780_Puts@str+1,c
  1262  0003A4  0E00               	movlw	0
  1263  0003A6  ECA7  F009         	call	_HD44780_Puts
  1264                           
  1265                           ;main.c: 137: HD44780_Puts(0, 1, "<<LCD     SSEG>>");
  1266  0003AA  0E01               	movlw	1
  1267  0003AC  6E20               	movwf	HD44780_Puts@y,c
  1268  0003AE  0E5D               	movlw	low STR_12
  1269  0003B0  6E21               	movwf	HD44780_Puts@str,c
  1270  0003B2  0E7F               	movlw	high STR_12
  1271  0003B4  6E22               	movwf	HD44780_Puts@str+1,c
  1272  0003B6  0E00               	movlw	0
  1273  0003B8  ECA7  F009         	call	_HD44780_Puts
  1274                           
  1275                           ;main.c: 138: Delayms(250);
  1276  0003BC  0E00               	movlw	0
  1277  0003BE  6E13               	movwf	Delayms@ms+1,c
  1278  0003C0  0EFA               	movlw	250
  1279  0003C2  6E12               	movwf	Delayms@ms,c
  1280  0003C4  EC84  F00B         	call	_Delayms	;wreg free
  1281                           
  1282                           ;main.c: 139: counter++;
  1283  0003C8  4A47               	infsnz	_counter,f,c
  1284  0003CA  2A48               	incf	_counter+1,f,c
  1285                           
  1286                           ;main.c: 140: if(counter > 3) {counter = 0; break;}
  1287  0003CC  BE48               	btfsc	_counter+1,7,c
  1288  0003CE  D00C               	goto	l2860
  1289  0003D0  5048               	movf	_counter+1,w,c
  1290  0003D2  E104               	bnz	u2970
  1291  0003D4  0E04               	movlw	4
  1292  0003D6  5C47               	subwf	_counter,w,c
  1293  0003D8  A0D8               	btfss	status,0,c
  1294  0003DA  D006               	goto	l2860
  1295  0003DC                     u2970:
  1296  0003DC  0E00               	movlw	0
  1297  0003DE  6E48               	movwf	_counter+1,c
  1298  0003E0  0E00               	movlw	0
  1299  0003E2  6E47               	movwf	_counter,c
  1300  0003E4  D005               	goto	l2862
  1301  0003E6  D000               	goto	l2860
  1302  0003E8                     l2860:
  1303  0003E8  504D               	movf	_led_flag,w,c
  1304  0003EA  104E               	iorwf	_led_flag+1,w,c
  1305  0003EC  B4D8               	btfsc	status,2,c
  1306  0003EE  D7CA               	goto	l2848
  1307  0003F0                     l2862:
  1308                           
  1309                           ;main.c: 141: }
  1310                           ;main.c: 142: HD44780_Clear();
  1311  0003F0  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1312                           
  1313                           ;main.c: 143: HD44780_Puts(0, 0, "2.LED TEST");
  1314  0003F4  0E00               	movlw	0
  1315  0003F6  6E20               	movwf	HD44780_Puts@y,c
  1316  0003F8  0EE8               	movlw	low STR_11
  1317  0003FA  6E21               	movwf	HD44780_Puts@str,c
  1318  0003FC  0E7F               	movlw	high STR_11
  1319  0003FE  6E22               	movwf	HD44780_Puts@str+1,c
  1320  000400  0E00               	movlw	0
  1321  000402  ECA7  F009         	call	_HD44780_Puts
  1322                           
  1323                           ;main.c: 144: HD44780_Puts(0, 1, "<<LCD     SSEG>>");
  1324  000406  0E01               	movlw	1
  1325  000408  6E20               	movwf	HD44780_Puts@y,c
  1326  00040A  0E5D               	movlw	low STR_12
  1327  00040C  6E21               	movwf	HD44780_Puts@str,c
  1328  00040E  0E7F               	movlw	high STR_12
  1329  000410  6E22               	movwf	HD44780_Puts@str+1,c
  1330  000412  0E00               	movlw	0
  1331  000414  ECA7  F009         	call	_HD44780_Puts
  1332                           
  1333                           ;main.c: 146: while(led_flag == 0) {
  1334  000418  D011               	goto	l2874
  1335  00041A                     l100:
  1336                           
  1337                           ;main.c: 147: LATCbits.LATC1 = 1;
  1338  00041A  828B               	bsf	3979,1,c	;volatile
  1339                           
  1340                           ;main.c: 148: LATCbits.LATC2 = 0;
  1341  00041C  948B               	bcf	3979,2,c	;volatile
  1342                           
  1343                           ;main.c: 149: Delayms(50);
  1344  00041E  0E00               	movlw	0
  1345  000420  6E13               	movwf	Delayms@ms+1,c
  1346  000422  0E32               	movlw	50
  1347  000424  6E12               	movwf	Delayms@ms,c
  1348  000426  EC84  F00B         	call	_Delayms	;wreg free
  1349                           
  1350                           ;main.c: 150: LATCbits.LATC1 = 0;
  1351  00042A  928B               	bcf	3979,1,c	;volatile
  1352                           
  1353                           ;main.c: 151: LATCbits.LATC2 = 1;
  1354  00042C  848B               	bsf	3979,2,c	;volatile
  1355                           
  1356                           ;main.c: 152: Delayms(50);
  1357  00042E  0E00               	movlw	0
  1358  000430  6E13               	movwf	Delayms@ms+1,c
  1359  000432  0E32               	movlw	50
  1360  000434  6E12               	movwf	Delayms@ms,c
  1361  000436  EC84  F00B         	call	_Delayms	;wreg free
  1362  00043A  D000               	goto	l2874
  1363  00043C                     l2874:
  1364  00043C  504D               	movf	_led_flag,w,c
  1365  00043E  104E               	iorwf	_led_flag+1,w,c
  1366  000440  B4D8               	btfsc	status,2,c
  1367  000442  D7EB               	goto	l100
  1368                           
  1369                           ;main.c: 153: }
  1370                           ;main.c: 154: LATCbits.LATC2 = 0;
  1371  000444  948B               	bcf	3979,2,c	;volatile
  1372                           
  1373                           ;main.c: 155: }
  1374  000446  D6EF               	goto	l2802
  1375  000448                     l2876:
  1376                           
  1377                           ;main.c: 156: else if (state == 2) {
  1378  000448  0E02               	movlw	2
  1379  00044A  1853               	xorwf	_state,w,c
  1380  00044C  1054               	iorwf	_state+1,w,c
  1381  00044E  A4D8               	btfss	status,2,c
  1382  000450  D09C               	goto	l2914
  1383                           
  1384                           ;main.c: 157: counter = 0;
  1385  000452  0E00               	movlw	0
  1386  000454  6E48               	movwf	_counter+1,c
  1387  000456  0E00               	movlw	0
  1388  000458  6E47               	movwf	_counter,c
  1389                           
  1390                           ;main.c: 158: sseg_flag = 0;
  1391  00045A  0E00               	movlw	0
  1392  00045C  6E52               	movwf	_sseg_flag+1,c
  1393  00045E  0E00               	movlw	0
  1394  000460  6E51               	movwf	_sseg_flag,c
  1395                           
  1396                           ;main.c: 159: while(sseg_flag == 0) {
  1397  000462  D032               	goto	l2892
  1398  000464                     l2880:
  1399                           
  1400                           ;main.c: 160: HD44780_Clear();
  1401  000464  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1402                           
  1403                           ;main.c: 161: Delayms(250);
  1404  000468  0E00               	movlw	0
  1405  00046A  6E13               	movwf	Delayms@ms+1,c
  1406  00046C  0EFA               	movlw	250
  1407  00046E  6E12               	movwf	Delayms@ms,c
  1408  000470  EC84  F00B         	call	_Delayms	;wreg free
  1409                           
  1410                           ;main.c: 162: HD44780_Clear();
  1411  000474  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1412                           
  1413                           ;main.c: 163: HD44780_Puts(0, 0, "3.SSEG TEST");
  1414  000478  0E00               	movlw	0
  1415  00047A  6E20               	movwf	HD44780_Puts@y,c
  1416  00047C  0EBB               	movlw	low STR_15
  1417  00047E  6E21               	movwf	HD44780_Puts@str,c
  1418  000480  0E7F               	movlw	high STR_15
  1419  000482  6E22               	movwf	HD44780_Puts@str+1,c
  1420  000484  0E00               	movlw	0
  1421  000486  ECA7  F009         	call	_HD44780_Puts
  1422                           
  1423                           ;main.c: 164: HD44780_Puts(0, 1, "<<LED   KEYPAD>>");
  1424  00048A  0E01               	movlw	1
  1425  00048C  6E20               	movwf	HD44780_Puts@y,c
  1426  00048E  0E2A               	movlw	low STR_16
  1427  000490  6E21               	movwf	HD44780_Puts@str,c
  1428  000492  0E7F               	movlw	high STR_16
  1429  000494  6E22               	movwf	HD44780_Puts@str+1,c
  1430  000496  0E00               	movlw	0
  1431  000498  ECA7  F009         	call	_HD44780_Puts
  1432                           
  1433                           ;main.c: 165: Delayms(250);
  1434  00049C  0E00               	movlw	0
  1435  00049E  6E13               	movwf	Delayms@ms+1,c
  1436  0004A0  0EFA               	movlw	250
  1437  0004A2  6E12               	movwf	Delayms@ms,c
  1438  0004A4  EC84  F00B         	call	_Delayms	;wreg free
  1439                           
  1440                           ;main.c: 166: counter++;
  1441  0004A8  4A47               	infsnz	_counter,f,c
  1442  0004AA  2A48               	incf	_counter+1,f,c
  1443                           
  1444                           ;main.c: 167: if(counter > 3) {counter = 0; break;}
  1445  0004AC  BE48               	btfsc	_counter+1,7,c
  1446  0004AE  D00C               	goto	l2892
  1447  0004B0  5048               	movf	_counter+1,w,c
  1448  0004B2  E104               	bnz	u3010
  1449  0004B4  0E04               	movlw	4
  1450  0004B6  5C47               	subwf	_counter,w,c
  1451  0004B8  A0D8               	btfss	status,0,c
  1452  0004BA  D006               	goto	l2892
  1453  0004BC                     u3010:
  1454  0004BC  0E00               	movlw	0
  1455  0004BE  6E48               	movwf	_counter+1,c
  1456  0004C0  0E00               	movlw	0
  1457  0004C2  6E47               	movwf	_counter,c
  1458  0004C4  D005               	goto	l2894
  1459  0004C6  D000               	goto	l2892
  1460  0004C8                     l2892:
  1461  0004C8  5051               	movf	_sseg_flag,w,c
  1462  0004CA  1052               	iorwf	_sseg_flag+1,w,c
  1463  0004CC  B4D8               	btfsc	status,2,c
  1464  0004CE  D7CA               	goto	l2880
  1465  0004D0                     l2894:
  1466                           
  1467                           ;main.c: 168: }
  1468                           ;main.c: 169: HD44780_Clear();
  1469  0004D0  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1470                           
  1471                           ;main.c: 170: HD44780_Puts(0, 0, "3.SSEG TEST");
  1472  0004D4  0E00               	movlw	0
  1473  0004D6  6E20               	movwf	HD44780_Puts@y,c
  1474  0004D8  0EBB               	movlw	low STR_15
  1475  0004DA  6E21               	movwf	HD44780_Puts@str,c
  1476  0004DC  0E7F               	movlw	high STR_15
  1477  0004DE  6E22               	movwf	HD44780_Puts@str+1,c
  1478  0004E0  0E00               	movlw	0
  1479  0004E2  ECA7  F009         	call	_HD44780_Puts
  1480                           
  1481                           ;main.c: 171: HD44780_Puts(0, 1, "<<LED   KEYPAD>>");
  1482  0004E6  0E01               	movlw	1
  1483  0004E8  6E20               	movwf	HD44780_Puts@y,c
  1484  0004EA  0E2A               	movlw	low STR_16
  1485  0004EC  6E21               	movwf	HD44780_Puts@str,c
  1486  0004EE  0E7F               	movlw	high STR_16
  1487  0004F0  6E22               	movwf	HD44780_Puts@str+1,c
  1488  0004F2  0E00               	movlw	0
  1489  0004F4  ECA7  F009         	call	_HD44780_Puts
  1490                           
  1491                           ;main.c: 173: while(sseg_flag == 0) {
  1492  0004F8  D041               	goto	l2912
  1493  0004FA                     l2900:
  1494                           
  1495                           ;main.c: 174: SSEG_Print(1,sseg_counter%10);
  1496  0004FA  0E00               	movlw	0
  1497  0004FC  6E1F               	movwf	SSEG_Print@sseg+1,c
  1498  0004FE  0E01               	movlw	1
  1499  000500  6E1E               	movwf	SSEG_Print@sseg,c
  1500  000502  C04F  F019         	movff	_sseg_counter,___lwmod@dividend
  1501  000506  C050  F01A         	movff	_sseg_counter+1,___lwmod@dividend+1
  1502  00050A  0E00               	movlw	0
  1503  00050C  6E1C               	movwf	___lwmod@divisor+1,c
  1504  00050E  0E0A               	movlw	10
  1505  000510  6E1B               	movwf	___lwmod@divisor,c
  1506  000512  EC1E  F00B         	call	___lwmod	;wreg free
  1507  000516  C019  F020         	movff	?___lwmod,SSEG_Print@n
  1508  00051A  C01A  F021         	movff	?___lwmod+1,SSEG_Print@n+1
  1509  00051E  EC93  F005         	call	_SSEG_Print	;wreg free
  1510                           
  1511                           ;main.c: 175: Delayms(10);
  1512  000522  0E00               	movlw	0
  1513  000524  6E13               	movwf	Delayms@ms+1,c
  1514  000526  0E0A               	movlw	10
  1515  000528  6E12               	movwf	Delayms@ms,c
  1516  00052A  EC84  F00B         	call	_Delayms	;wreg free
  1517                           
  1518                           ;main.c: 176: SSEG_Print(2,sseg_counter/10);
  1519  00052E  0E00               	movlw	0
  1520  000530  6E1F               	movwf	SSEG_Print@sseg+1,c
  1521  000532  0E02               	movlw	2
  1522  000534  6E1E               	movwf	SSEG_Print@sseg,c
  1523  000536  C04F  F012         	movff	_sseg_counter,___lwdiv@dividend
  1524  00053A  C050  F013         	movff	_sseg_counter+1,___lwdiv@dividend+1
  1525  00053E  0E00               	movlw	0
  1526  000540  6E15               	movwf	___lwdiv@divisor+1,c
  1527  000542  0E0A               	movlw	10
  1528  000544  6E14               	movwf	___lwdiv@divisor,c
  1529  000546  EC9C  F00A         	call	___lwdiv	;wreg free
  1530  00054A  C012  F020         	movff	?___lwdiv,SSEG_Print@n
  1531  00054E  C013  F021         	movff	?___lwdiv+1,SSEG_Print@n+1
  1532  000552  EC93  F005         	call	_SSEG_Print	;wreg free
  1533                           
  1534                           ;main.c: 177: Delayms(10);
  1535  000556  0E00               	movlw	0
  1536  000558  6E13               	movwf	Delayms@ms+1,c
  1537  00055A  0E0A               	movlw	10
  1538  00055C  6E12               	movwf	Delayms@ms,c
  1539  00055E  EC84  F00B         	call	_Delayms	;wreg free
  1540                           
  1541                           ;main.c: 178: sseg_counter++;
  1542  000562  4A4F               	infsnz	_sseg_counter,f,c
  1543  000564  2A50               	incf	_sseg_counter+1,f,c
  1544                           
  1545                           ;main.c: 179: if(sseg_counter > 99) sseg_counter = 0;
  1546  000566  5050               	movf	_sseg_counter+1,w,c
  1547  000568  E104               	bnz	u3030
  1548  00056A  0E64               	movlw	100
  1549  00056C  5C4F               	subwf	_sseg_counter,w,c
  1550  00056E  A0D8               	btfss	status,0,c
  1551  000570  D005               	goto	l2912
  1552  000572                     u3030:
  1553  000572  0E00               	movlw	0
  1554  000574  6E50               	movwf	_sseg_counter+1,c
  1555  000576  0E00               	movlw	0
  1556  000578  6E4F               	movwf	_sseg_counter,c
  1557  00057A  D000               	goto	l2912
  1558  00057C                     l2912:
  1559  00057C  5051               	movf	_sseg_flag,w,c
  1560  00057E  1052               	iorwf	_sseg_flag+1,w,c
  1561  000580  B4D8               	btfsc	status,2,c
  1562  000582  D7BB               	goto	l2900
  1563                           
  1564                           ;main.c: 180: }
  1565                           ;main.c: 181: LATCbits.LATC0 = 0;
  1566  000584  908B               	bcf	3979,0,c	;volatile
  1567                           
  1568                           ;main.c: 182: LATCbits.LATC5 = 0;
  1569  000586  9A8B               	bcf	3979,5,c	;volatile
  1570                           
  1571                           ;main.c: 183: }
  1572  000588  D64E               	goto	l2802
  1573  00058A                     l2914:
  1574                           
  1575                           ;main.c: 184: else if (state == 3) {
  1576  00058A  0E03               	movlw	3
  1577  00058C  1853               	xorwf	_state,w,c
  1578  00058E  1054               	iorwf	_state+1,w,c
  1579  000590  A4D8               	btfss	status,2,c
  1580  000592  D081               	goto	l2952
  1581                           
  1582                           ;main.c: 185: counter = 0;
  1583  000594  0E00               	movlw	0
  1584  000596  6E48               	movwf	_counter+1,c
  1585  000598  0E00               	movlw	0
  1586  00059A  6E47               	movwf	_counter,c
  1587                           
  1588                           ;main.c: 186: keypad_flag = 0;
  1589  00059C  0E00               	movlw	0
  1590  00059E  6E4A               	movwf	_keypad_flag+1,c
  1591  0005A0  0E00               	movlw	0
  1592  0005A2  6E49               	movwf	_keypad_flag,c
  1593                           
  1594                           ;main.c: 187: while(keypad_flag == 0) {
  1595  0005A4  D032               	goto	l2930
  1596  0005A6                     l2918:
  1597                           
  1598                           ;main.c: 188: HD44780_Clear();
  1599  0005A6  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1600                           
  1601                           ;main.c: 189: Delayms(250);
  1602  0005AA  0E00               	movlw	0
  1603  0005AC  6E13               	movwf	Delayms@ms+1,c
  1604  0005AE  0EFA               	movlw	250
  1605  0005B0  6E12               	movwf	Delayms@ms,c
  1606  0005B2  EC84  F00B         	call	_Delayms	;wreg free
  1607                           
  1608                           ;main.c: 190: HD44780_Clear();
  1609  0005B6  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1610                           
  1611                           ;main.c: 191: HD44780_Puts(0, 0, "4.KEYPAD TEST");
  1612  0005BA  0E00               	movlw	0
  1613  0005BC  6E20               	movwf	HD44780_Puts@y,c
  1614  0005BE  0EAD               	movlw	low STR_19
  1615  0005C0  6E21               	movwf	HD44780_Puts@str,c
  1616  0005C2  0E7F               	movlw	high STR_19
  1617  0005C4  6E22               	movwf	HD44780_Puts@str+1,c
  1618  0005C6  0E00               	movlw	0
  1619  0005C8  ECA7  F009         	call	_HD44780_Puts
  1620                           
  1621                           ;main.c: 192: HD44780_Puts(0, 1, "<<SSEG     ADC>>");
  1622  0005CC  0E01               	movlw	1
  1623  0005CE  6E20               	movwf	HD44780_Puts@y,c
  1624  0005D0  0E19               	movlw	low STR_20
  1625  0005D2  6E21               	movwf	HD44780_Puts@str,c
  1626  0005D4  0E7F               	movlw	high STR_20
  1627  0005D6  6E22               	movwf	HD44780_Puts@str+1,c
  1628  0005D8  0E00               	movlw	0
  1629  0005DA  ECA7  F009         	call	_HD44780_Puts
  1630                           
  1631                           ;main.c: 193: Delayms(250);
  1632  0005DE  0E00               	movlw	0
  1633  0005E0  6E13               	movwf	Delayms@ms+1,c
  1634  0005E2  0EFA               	movlw	250
  1635  0005E4  6E12               	movwf	Delayms@ms,c
  1636  0005E6  EC84  F00B         	call	_Delayms	;wreg free
  1637                           
  1638                           ;main.c: 194: counter++;
  1639  0005EA  4A47               	infsnz	_counter,f,c
  1640  0005EC  2A48               	incf	_counter+1,f,c
  1641                           
  1642                           ;main.c: 195: if(counter > 3) {counter = 0; break;}
  1643  0005EE  BE48               	btfsc	_counter+1,7,c
  1644  0005F0  D00C               	goto	l2930
  1645  0005F2  5048               	movf	_counter+1,w,c
  1646  0005F4  E104               	bnz	u3060
  1647  0005F6  0E04               	movlw	4
  1648  0005F8  5C47               	subwf	_counter,w,c
  1649  0005FA  A0D8               	btfss	status,0,c
  1650  0005FC  D006               	goto	l2930
  1651  0005FE                     u3060:
  1652  0005FE  0E00               	movlw	0
  1653  000600  6E48               	movwf	_counter+1,c
  1654  000602  0E00               	movlw	0
  1655  000604  6E47               	movwf	_counter,c
  1656  000606  D005               	goto	l2932
  1657  000608  D000               	goto	l2930
  1658  00060A                     l2930:
  1659  00060A  5049               	movf	_keypad_flag,w,c
  1660  00060C  104A               	iorwf	_keypad_flag+1,w,c
  1661  00060E  B4D8               	btfsc	status,2,c
  1662  000610  D7CA               	goto	l2918
  1663  000612                     l2932:
  1664                           
  1665                           ;main.c: 196: }
  1666                           ;main.c: 197: HD44780_Clear();
  1667  000612  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1668                           
  1669                           ;main.c: 198: HD44780_Puts(0, 0, "4.KEYPAD TEST");
  1670  000616  0E00               	movlw	0
  1671  000618  6E20               	movwf	HD44780_Puts@y,c
  1672  00061A  0EAD               	movlw	low STR_19
  1673  00061C  6E21               	movwf	HD44780_Puts@str,c
  1674  00061E  0E7F               	movlw	high STR_19
  1675  000620  6E22               	movwf	HD44780_Puts@str+1,c
  1676  000622  0E00               	movlw	0
  1677  000624  ECA7  F009         	call	_HD44780_Puts
  1678                           
  1679                           ;main.c: 199: HD44780_Puts(0, 1, "<<SSEG     ADC>>");
  1680  000628  0E01               	movlw	1
  1681  00062A  6E20               	movwf	HD44780_Puts@y,c
  1682  00062C  0E19               	movlw	low STR_20
  1683  00062E  6E21               	movwf	HD44780_Puts@str,c
  1684  000630  0E7F               	movlw	high STR_20
  1685  000632  6E22               	movwf	HD44780_Puts@str+1,c
  1686  000634  0E00               	movlw	0
  1687  000636  ECA7  F009         	call	_HD44780_Puts
  1688                           
  1689                           ;main.c: 201: while(keypad_flag == 0) {
  1690  00063A  D027               	goto	l2950
  1691  00063C                     l2938:
  1692                           
  1693                           ;main.c: 202: int_key = KEYPAD_Read();
  1694  00063C  EC6D  F007         	call	_KEYPAD_Read	;wreg free
  1695  000640  C012  F060         	movff	?_KEYPAD_Read,_int_key
  1696  000644  C013  F061         	movff	?_KEYPAD_Read+1,_int_key+1
  1697                           
  1698                           ;main.c: 203: char_key = (char)KEYPAD_KeytoASCII(int_key);
  1699  000648  C060  F012         	movff	_int_key,KEYPAD_KeytoASCII@KeyNumber
  1700  00064C  C061  F013         	movff	_int_key+1,KEYPAD_KeytoASCII@KeyNumber+1
  1701  000650  EC35  F00A         	call	_KEYPAD_KeytoASCII	;wreg free
  1702  000654  6E55               	movwf	_char_key,c
  1703                           
  1704                           ;main.c: 204: HD44780_CursorSet(0,0);
  1705  000656  0E00               	movlw	0
  1706  000658  6E1A               	movwf	HD44780_CursorSet@row,c
  1707  00065A  0E00               	movlw	0
  1708  00065C  EC44  F00B         	call	_HD44780_CursorSet
  1709                           
  1710                           ;main.c: 205: if(int_key != 0xFF)
  1711  000660  2860               	incf	_int_key,w,c
  1712  000662  1061               	iorwf	_int_key+1,w,c
  1713  000664  B4D8               	btfsc	status,2,c
  1714  000666  D00A               	goto	l2948
  1715                           
  1716                           ;main.c: 206: printf("4.KEYPAD TEST: %c", char_key);
  1717  000668  0E07               	movlw	low STR_23
  1718  00066A  6E21               	movwf	printf@f,c
  1719  00066C  0E7F               	movlw	high STR_23
  1720  00066E  6E22               	movwf	printf@f+1,c
  1721  000670  C055  F023         	movff	_char_key,?_printf+2
  1722  000674  6A24               	clrf	?_printf+3,c
  1723  000676  EC35  F004         	call	_printf	;wreg free
  1724  00067A  D000               	goto	l2948
  1725  00067C                     l2948:
  1726                           
  1727                           ;main.c: 207: Delayms(50);
  1728  00067C  0E00               	movlw	0
  1729  00067E  6E13               	movwf	Delayms@ms+1,c
  1730  000680  0E32               	movlw	50
  1731  000682  6E12               	movwf	Delayms@ms,c
  1732  000684  EC84  F00B         	call	_Delayms	;wreg free
  1733  000688  D000               	goto	l2950
  1734  00068A                     l2950:
  1735  00068A  5049               	movf	_keypad_flag,w,c
  1736  00068C  104A               	iorwf	_keypad_flag+1,w,c
  1737  00068E  A4D8               	btfss	status,2,c
  1738  000690  D5CA               	goto	l2802
  1739  000692  D7D4               	goto	l2938
  1740                           
  1741                           ;main.c: 208: }
  1742                           ;main.c: 209: }
  1743  000694  D5C8               	goto	l2802
  1744  000696                     l2952:
  1745                           
  1746                           ;main.c: 210: else if (state == 4) {
  1747  000696  0E04               	movlw	4
  1748  000698  1853               	xorwf	_state,w,c
  1749  00069A  1054               	iorwf	_state+1,w,c
  1750  00069C  A4D8               	btfss	status,2,c
  1751  00069E  D0DE               	goto	l2990
  1752                           
  1753                           ;main.c: 211: counter = 0;
  1754  0006A0  0E00               	movlw	0
  1755  0006A2  6E48               	movwf	_counter+1,c
  1756  0006A4  0E00               	movlw	0
  1757  0006A6  6E47               	movwf	_counter,c
  1758                           
  1759                           ;main.c: 212: adc_flag = 0;
  1760  0006A8  0E00               	movlw	0
  1761  0006AA  6E44               	movwf	_adc_flag+1,c
  1762  0006AC  0E00               	movlw	0
  1763  0006AE  6E43               	movwf	_adc_flag,c
  1764                           
  1765                           ;main.c: 213: while(adc_flag == 0) {
  1766  0006B0  D032               	goto	l2968
  1767  0006B2                     l2956:
  1768                           
  1769                           ;main.c: 214: HD44780_Clear();
  1770  0006B2  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1771                           
  1772                           ;main.c: 215: Delayms(250);
  1773  0006B6  0E00               	movlw	0
  1774  0006B8  6E13               	movwf	Delayms@ms+1,c
  1775  0006BA  0EFA               	movlw	250
  1776  0006BC  6E12               	movwf	Delayms@ms,c
  1777  0006BE  EC84  F00B         	call	_Delayms	;wreg free
  1778                           
  1779                           ;main.c: 216: HD44780_Clear();
  1780  0006C2  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1781                           
  1782                           ;main.c: 217: HD44780_Puts(0, 0, "5.ADC TEST");
  1783  0006C6  0E00               	movlw	0
  1784  0006C8  6E20               	movwf	HD44780_Puts@y,c
  1785  0006CA  0ED2               	movlw	low STR_24
  1786  0006CC  6E21               	movwf	HD44780_Puts@str,c
  1787  0006CE  0E7F               	movlw	high STR_24
  1788  0006D0  6E22               	movwf	HD44780_Puts@str+1,c
  1789  0006D2  0E00               	movlw	0
  1790  0006D4  ECA7  F009         	call	_HD44780_Puts
  1791                           
  1792                           ;main.c: 218: HD44780_Puts(0, 1, "<<KEYPAD   LCD>>");
  1793  0006D8  0E01               	movlw	1
  1794  0006DA  6E20               	movwf	HD44780_Puts@y,c
  1795  0006DC  0E3B               	movlw	low STR_25
  1796  0006DE  6E21               	movwf	HD44780_Puts@str,c
  1797  0006E0  0E7F               	movlw	high STR_25
  1798  0006E2  6E22               	movwf	HD44780_Puts@str+1,c
  1799  0006E4  0E00               	movlw	0
  1800  0006E6  ECA7  F009         	call	_HD44780_Puts
  1801                           
  1802                           ;main.c: 219: Delayms(250);
  1803  0006EA  0E00               	movlw	0
  1804  0006EC  6E13               	movwf	Delayms@ms+1,c
  1805  0006EE  0EFA               	movlw	250
  1806  0006F0  6E12               	movwf	Delayms@ms,c
  1807  0006F2  EC84  F00B         	call	_Delayms	;wreg free
  1808                           
  1809                           ;main.c: 220: counter++;
  1810  0006F6  4A47               	infsnz	_counter,f,c
  1811  0006F8  2A48               	incf	_counter+1,f,c
  1812                           
  1813                           ;main.c: 221: if(counter > 3) {counter = 0; break;}
  1814  0006FA  BE48               	btfsc	_counter+1,7,c
  1815  0006FC  D00C               	goto	l2968
  1816  0006FE  5048               	movf	_counter+1,w,c
  1817  000700  E104               	bnz	u3110
  1818  000702  0E04               	movlw	4
  1819  000704  5C47               	subwf	_counter,w,c
  1820  000706  A0D8               	btfss	status,0,c
  1821  000708  D006               	goto	l2968
  1822  00070A                     u3110:
  1823  00070A  0E00               	movlw	0
  1824  00070C  6E48               	movwf	_counter+1,c
  1825  00070E  0E00               	movlw	0
  1826  000710  6E47               	movwf	_counter,c
  1827  000712  D005               	goto	l2970
  1828  000714  D000               	goto	l2968
  1829  000716                     l2968:
  1830  000716  5043               	movf	_adc_flag,w,c
  1831  000718  1044               	iorwf	_adc_flag+1,w,c
  1832  00071A  B4D8               	btfsc	status,2,c
  1833  00071C  D7CA               	goto	l2956
  1834  00071E                     l2970:
  1835                           
  1836                           ;main.c: 222: }
  1837                           ;main.c: 223: HD44780_Clear();
  1838  00071E  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  1839                           
  1840                           ;main.c: 224: HD44780_Puts(0, 0, "5.ADC TEST");
  1841  000722  0E00               	movlw	0
  1842  000724  6E20               	movwf	HD44780_Puts@y,c
  1843  000726  0ED2               	movlw	low STR_24
  1844  000728  6E21               	movwf	HD44780_Puts@str,c
  1845  00072A  0E7F               	movlw	high STR_24
  1846  00072C  6E22               	movwf	HD44780_Puts@str+1,c
  1847  00072E  0E00               	movlw	0
  1848  000730  ECA7  F009         	call	_HD44780_Puts
  1849                           
  1850                           ;main.c: 225: HD44780_Puts(0, 1, "<<KEYPAD   LCD>>");
  1851  000734  0E01               	movlw	1
  1852  000736  6E20               	movwf	HD44780_Puts@y,c
  1853  000738  0E3B               	movlw	low STR_25
  1854  00073A  6E21               	movwf	HD44780_Puts@str,c
  1855  00073C  0E7F               	movlw	high STR_25
  1856  00073E  6E22               	movwf	HD44780_Puts@str+1,c
  1857  000740  0E00               	movlw	0
  1858  000742  ECA7  F009         	call	_HD44780_Puts
  1859                           
  1860                           ;main.c: 227: while(adc_flag == 0){
  1861  000746  D084               	goto	l2988
  1862  000748                     l2976:
  1863                           
  1864                           ;main.c: 228: ConvertADC();
  1865  000748  EC7E  F00C         	call	_ConvertADC	;wreg free
  1866                           
  1867                           ;main.c: 229: while( BusyADC() );
  1868  00074C  D000               	goto	l2978
  1869  00074E                     l2978:
  1870  00074E  EC6C  F00C         	call	_BusyADC	;wreg free
  1871  000752  0900               	iorlw	0
  1872  000754  A4D8               	btfss	status,2,c
  1873  000756  D7FB               	goto	l2978
  1874                           
  1875                           ;main.c: 230: adcin = 1023 - ReadADC();
  1876  000758  EC64  F00C         	call	_ReadADC	;wreg free
  1877  00075C  1E12               	comf	?_ReadADC,f,c
  1878  00075E  1E13               	comf	?_ReadADC+1,f,c
  1879  000760  4A12               	infsnz	?_ReadADC,f,c
  1880  000762  2A13               	incf	?_ReadADC+1,f,c
  1881  000764  0EFF               	movlw	255
  1882  000766  2412               	addwf	?_ReadADC,w,c
  1883  000768  6E45               	movwf	_adcin,c
  1884  00076A  0E03               	movlw	3
  1885  00076C  2013               	addwfc	?_ReadADC+1,w,c
  1886  00076E  6E46               	movwf	_adcin+1,c
  1887                           
  1888                           ;main.c: 231: dcf = (1-lamda)*dcf + lamda*adcin;
  1889  000770  C056  F02D         	movff	_dcf,___ftmul@f2
  1890  000774  C057  F02E         	movff	_dcf+1,___ftmul@f2+1
  1891  000778  C058  F02F         	movff	_dcf+2,___ftmul@f2+2
  1892  00077C  0E00               	movlw	0
  1893  00077E  6E21               	movwf	___ftadd@f2,c
  1894  000780  0E80               	movlw	128
  1895  000782  6E22               	movwf	___ftadd@f2+1,c
  1896  000784  0E3F               	movlw	63
  1897  000786  6E23               	movwf	___ftadd@f2+2,c
  1898  000788  C05D  F012         	movff	_lamda,___ftneg@f1
  1899  00078C  C05E  F013         	movff	_lamda+1,___ftneg@f1+1
  1900  000790  C05F  F014         	movff	_lamda+2,___ftneg@f1+2
  1901  000794  ECF3  F00B         	call	___ftneg	;wreg free
  1902  000798  C012  F01E         	movff	?___ftneg,___ftadd@f1
  1903  00079C  C013  F01F         	movff	?___ftneg+1,___ftadd@f1+1
  1904  0007A0  C014  F020         	movff	?___ftneg+2,___ftadd@f1+2
  1905  0007A4  EC8B  F006         	call	___ftadd	;wreg free
  1906  0007A8  C01E  F02A         	movff	?___ftadd,___ftmul@f1
  1907  0007AC  C01F  F02B         	movff	?___ftadd+1,___ftmul@f1+1
  1908  0007B0  C020  F02C         	movff	?___ftadd+2,___ftmul@f1+2
  1909  0007B4  EC02  F008         	call	___ftmul	;wreg free
  1910  0007B8  C02A  F039         	movff	?___ftmul,_main$2010
  1911  0007BC  C02B  F03A         	movff	?___ftmul+1,_main$2010+1
  1912  0007C0  C02C  F03B         	movff	?___ftmul+2,_main$2010+2
  1913                           
  1914                           ;main.c: 231: dcf = (1-lamda)*dcf + lamda*adcin;
  1915  0007C4  C039  F01E         	movff	_main$2010,___ftadd@f1
  1916  0007C8  C03A  F01F         	movff	_main$2010+1,___ftadd@f1+1
  1917  0007CC  C03B  F020         	movff	_main$2010+2,___ftadd@f1+2
  1918  0007D0  C05D  F02D         	movff	_lamda,___ftmul@f2
  1919  0007D4  C05E  F02E         	movff	_lamda+1,___ftmul@f2+1
  1920  0007D8  C05F  F02F         	movff	_lamda+2,___ftmul@f2+2
  1921  0007DC  C045  F01A         	movff	_adcin,___awtoft@c
  1922  0007E0  C046  F01B         	movff	_adcin+1,___awtoft@c+1
  1923  0007E4  EC66  F00B         	call	___awtoft	;wreg free
  1924  0007E8  C01A  F02A         	movff	?___awtoft,___ftmul@f1
  1925  0007EC  C01B  F02B         	movff	?___awtoft+1,___ftmul@f1+1
  1926  0007F0  C01C  F02C         	movff	?___awtoft+2,___ftmul@f1+2
  1927  0007F4  EC02  F008         	call	___ftmul	;wreg free
  1928  0007F8  C02A  F021         	movff	?___ftmul,___ftadd@f2
  1929  0007FC  C02B  F022         	movff	?___ftmul+1,___ftadd@f2+1
  1930  000800  C02C  F023         	movff	?___ftmul+2,___ftadd@f2+2
  1931  000804  EC8B  F006         	call	___ftadd	;wreg free
  1932  000808  C01E  F056         	movff	?___ftadd,_dcf
  1933  00080C  C01F  F057         	movff	?___ftadd+1,_dcf+1
  1934  000810  C020  F058         	movff	?___ftadd+2,_dcf+2
  1935                           
  1936                           ;main.c: 232: HD44780_CursorSet(0,0);
  1937  000814  0E00               	movlw	0
  1938  000816  6E1A               	movwf	HD44780_CursorSet@row,c
  1939  000818  0E00               	movlw	0
  1940  00081A  EC44  F00B         	call	_HD44780_CursorSet
  1941                           
  1942                           ;main.c: 233: printf("5.ADC TEST: %4d", (int)dcf);
  1943  00081E  0E7F               	movlw	low STR_28
  1944  000820  6E21               	movwf	printf@f,c
  1945  000822  0E7F               	movlw	high STR_28
  1946  000824  6E22               	movwf	printf@f+1,c
  1947  000826  C056  F012         	movff	_dcf,___fttol@f1
  1948  00082A  C057  F013         	movff	_dcf+1,___fttol@f1+1
  1949  00082E  C058  F014         	movff	_dcf+2,___fttol@f1+2
  1950  000832  EC7E  F008         	call	___fttol	;wreg free
  1951  000836  C012  F023         	movff	?___fttol,?_printf+2
  1952  00083A  C013  F024         	movff	?___fttol+1,?_printf+3
  1953  00083E  EC35  F004         	call	_printf	;wreg free
  1954                           
  1955                           ;main.c: 234: Delayms(1);
  1956  000842  0E00               	movlw	0
  1957  000844  6E13               	movwf	Delayms@ms+1,c
  1958  000846  0E01               	movlw	1
  1959  000848  6E12               	movwf	Delayms@ms,c
  1960  00084A  EC84  F00B         	call	_Delayms	;wreg free
  1961  00084E  D000               	goto	l2988
  1962  000850                     l2988:
  1963  000850  5043               	movf	_adc_flag,w,c
  1964  000852  1044               	iorwf	_adc_flag+1,w,c
  1965  000854  A4D8               	btfss	status,2,c
  1966  000856  D4E7               	goto	l2802
  1967  000858  D777               	goto	l2976
  1968                           
  1969                           ;main.c: 235: }
  1970                           ;main.c: 236: }
  1971  00085A  D4E5               	goto	l2802
  1972  00085C                     l2990:
  1973                           
  1974                           ;main.c: 237: else state = 0;
  1975  00085C  0E00               	movlw	0
  1976  00085E  6E54               	movwf	_state+1,c
  1977  000860  0E00               	movlw	0
  1978  000862  6E53               	movwf	_state,c
  1979  000864  D4E0               	goto	l2802
  1980  000866  EFD5  F000         	goto	start
  1981  00086A                     __end_of_main:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           intcon	equ	0xFF2
  1988                           intcon2	equ	0xFF1
  1989                           intcon3	equ	0xFF0
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           postdec1	equ	0xFE5
  1993                           fsr1l	equ	0xFE1
  1994                           status	equ	0xFD8
  1995                           
  1996 ;; *************** function _printf *****************
  1997 ;; Defined at:
  1998 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  f               2   32[COMRAM] PTR const unsigned char 
  2001 ;;		 -> STR_28(16), STR_23(18), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  tmpval          4    0        struct .
  2004 ;;  width           2   50[COMRAM] int 
  2005 ;;  val             2   48[COMRAM] unsigned int 
  2006 ;;  len             2   46[COMRAM] unsigned int 
  2007 ;;  ap              2   43[COMRAM] PTR void [1]
  2008 ;;		 -> ?_printf(2), 
  2009 ;;  cp              2   40[COMRAM] PTR const unsigned char 
  2010 ;;		 -> printf@c(1), 
  2011 ;;  c               1   52[COMRAM] char 
  2012 ;;  flag            1   45[COMRAM] unsigned char 
  2013 ;;  prec            1   42[COMRAM] char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2   32[COMRAM] int 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2023 ;;      Params:         4       0       0       0       0       0       0
  2024 ;;      Locals:        13       0       0       0       0       0       0
  2025 ;;      Temps:          4       0       0       0       0       0       0
  2026 ;;      Totals:        21       0       0       0       0       0       0
  2027 ;;Total ram usage:       21 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    6
  2030 ;; This function calls:
  2031 ;;		___lwdiv
  2032 ;;		___lwmod
  2033 ;;		___wmul
  2034 ;;		_isdigit
  2035 ;;		_putch
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text1
  2042  00086A                     __ptext1:
  2043                           	opt stack 0
  2044  00086A                     _printf:
  2045                           	opt stack 24
  2046                           
  2047                           ;doprnt.c: 466: va_list ap;
  2048                           ;doprnt.c: 499: signed char c;
  2049                           ;doprnt.c: 501: int width;
  2050                           ;doprnt.c: 506: signed char prec;
  2051                           ;doprnt.c: 508: unsigned char flag;
  2052                           ;doprnt.c: 523: union {
  2053                           ;doprnt.c: 524: unsigned long vd;
  2054                           ;doprnt.c: 525: double integ;
  2055                           ;doprnt.c: 526: } tmpval;
  2056                           ;doprnt.c: 528: unsigned int val;
  2057                           ;doprnt.c: 529: unsigned len;
  2058                           ;doprnt.c: 530: const char * cp;
  2059                           ;doprnt.c: 533: *ap = __va_start();
  2060                           
  2061                           ;incstack = 0
  2062  00086A  0E23               	movlw	low (?_printf+2)
  2063  00086C  6E2C               	movwf	printf@ap,c
  2064  00086E  0E00               	movlw	high (?_printf+2)
  2065  000870  6E2D               	movwf	printf@ap+1,c
  2066                           
  2067                           ;doprnt.c: 536: while(c = *f++) {
  2068  000872  D14A               	goto	l2598
  2069  000874                     l2498:
  2070                           
  2071                           ;doprnt.c: 538: if(c != '%')
  2072  000874  0E25               	movlw	37
  2073  000876  1835               	xorwf	printf@c,w,c
  2074  000878  B4D8               	btfsc	status,2,c
  2075  00087A  D004               	goto	l2502
  2076                           
  2077                           ;doprnt.c: 540: {
  2078                           ;doprnt.c: 541: (putch(c) );
  2079  00087C  5035               	movf	printf@c,w,c
  2080  00087E  ECF5  F00A         	call	_putch
  2081                           
  2082                           ;doprnt.c: 542: continue;
  2083  000882  D142               	goto	l2598
  2084  000884                     l2502:
  2085                           
  2086                           ;doprnt.c: 543: }
  2087                           ;doprnt.c: 546: width = 0;
  2088  000884  0E00               	movlw	0
  2089  000886  6E34               	movwf	printf@width+1,c
  2090  000888  0E00               	movlw	0
  2091  00088A  6E33               	movwf	printf@width,c
  2092                           
  2093                           ;doprnt.c: 548: flag = 0;
  2094  00088C  0E00               	movlw	0
  2095  00088E  6E2E               	movwf	printf@flag,c
  2096                           
  2097                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2098  000890  C021  FFF6         	movff	printf@f,tblptrl
  2099  000894  C022  FFF7         	movff	printf@f+1,tblptrh
  2100  000898                     	if	0	;tblptru may be non-zero
  2101  000898                     	endif
  2102  000898                     	if	0	;tblptru may be non-zero
  2103  000898                     	endif
  2104  000898  0008               	tblrd		*
  2105  00089A  50F5               	movf	tablat,w,c
  2106  00089C  EC05  F00C         	call	_isdigit
  2107  0008A0  A0D8               	btfss	status,0,c
  2108  0008A2  D07E               	goto	l2542
  2109                           
  2110                           ;doprnt.c: 598: width = 0;
  2111  0008A4  0E00               	movlw	0
  2112  0008A6  6E34               	movwf	printf@width+1,c
  2113  0008A8  0E00               	movlw	0
  2114  0008AA  6E33               	movwf	printf@width,c
  2115  0008AC  D000               	goto	l2508
  2116  0008AE                     l2508:
  2117                           
  2118                           ;doprnt.c: 600: width *= 10;
  2119  0008AE  C033  F012         	movff	printf@width,___wmul@multiplier
  2120  0008B2  C034  F013         	movff	printf@width+1,___wmul@multiplier+1
  2121  0008B6  0E00               	movlw	0
  2122  0008B8  6E15               	movwf	___wmul@multiplicand+1,c
  2123  0008BA  0E0A               	movlw	10
  2124  0008BC  6E14               	movwf	___wmul@multiplicand,c
  2125  0008BE  ECDF  F00B         	call	___wmul	;wreg free
  2126  0008C2  C012  F033         	movff	?___wmul,printf@width
  2127  0008C6  C013  F034         	movff	?___wmul+1,printf@width+1
  2128                           
  2129                           ;doprnt.c: 601: width += *f++ - '0';
  2130  0008CA  0ED0               	movlw	208
  2131  0008CC  6E25               	movwf	??_printf& (0+255),c
  2132  0008CE  0EFF               	movlw	255
  2133  0008D0  6E26               	movwf	(??_printf+1)& (0+255),c
  2134  0008D2  C021  FFF6         	movff	printf@f,tblptrl
  2135  0008D6  C022  FFF7         	movff	printf@f+1,tblptrh
  2136  0008DA                     	if	0	;tblptru may be non-zero
  2137  0008DA                     	endif
  2138  0008DA                     	if	0	;tblptru may be non-zero
  2139  0008DA                     	endif
  2140  0008DA  0008               	tblrd		*
  2141  0008DC  50F5               	movf	tablat,w,c
  2142  0008DE  6E27               	movwf	(??_printf+2)& (0+255),c
  2143  0008E0  6A28               	clrf	(??_printf+3)& (0+255),c
  2144  0008E2  5025               	movf	??_printf,w,c
  2145  0008E4  2627               	addwf	??_printf+2,f,c
  2146  0008E6  5026               	movf	??_printf+1,w,c
  2147  0008E8  2228               	addwfc	??_printf+3,f,c
  2148  0008EA  5027               	movf	??_printf+2,w,c
  2149  0008EC  2633               	addwf	printf@width,f,c
  2150  0008EE  5028               	movf	??_printf+3,w,c
  2151  0008F0  2234               	addwfc	printf@width+1,f,c
  2152  0008F2  4A21               	infsnz	printf@f,f,c
  2153  0008F4  2A22               	incf	printf@f+1,f,c
  2154                           
  2155                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2156  0008F6  C021  FFF6         	movff	printf@f,tblptrl
  2157  0008FA  C022  FFF7         	movff	printf@f+1,tblptrh
  2158  0008FE                     	if	0	;tblptru may be non-zero
  2159  0008FE                     	endif
  2160  0008FE                     	if	0	;tblptru may be non-zero
  2161  0008FE                     	endif
  2162  0008FE  0008               	tblrd		*
  2163  000900  50F5               	movf	tablat,w,c
  2164  000902  EC05  F00C         	call	_isdigit
  2165  000906  A0D8               	btfss	status,0,c
  2166  000908  D04B               	goto	l2542
  2167  00090A  D7D1               	goto	l2508
  2168                           
  2169                           ;doprnt.c: 608: }
  2170                           ;doprnt.c: 635: switch(c = *f++) {
  2171  00090C  D049               	goto	l2542
  2172                           
  2173                           ;doprnt.c: 638: goto alldone;
  2174                           
  2175                           ;doprnt.c: 637: case 0:
  2176  00090E  D10A               	goto	l384
  2177                           
  2178                           ;doprnt.c: 698: case 'i':
  2179                           ;doprnt.c: 699: break;
  2180                           
  2181                           ;doprnt.c: 697: case 'd':
  2182  000910  D05D               	goto	l2544
  2183  000912                     l2516:
  2184                           
  2185                           ;doprnt.c: 757: if(width > len)
  2186  000912  5033               	movf	printf@width,w,c
  2187  000914  5C2F               	subwf	printf@len,w,c
  2188  000916  5034               	movf	printf@width+1,w,c
  2189  000918  5830               	subwfb	printf@len+1,w,c
  2190  00091A  B0D8               	btfsc	status,0,c
  2191  00091C  D005               	goto	l2520
  2192                           
  2193                           ;doprnt.c: 758: width -= len;
  2194  00091E  502F               	movf	printf@len,w,c
  2195  000920  5E33               	subwf	printf@width,f,c
  2196  000922  5030               	movf	printf@len+1,w,c
  2197  000924  5A34               	subwfb	printf@width+1,f,c
  2198  000926  D009               	goto	l2524
  2199  000928                     l2520:
  2200                           
  2201                           ;doprnt.c: 759: else
  2202                           ;doprnt.c: 760: width = 0;
  2203  000928  0E00               	movlw	0
  2204  00092A  6E34               	movwf	printf@width+1,c
  2205  00092C  0E00               	movlw	0
  2206  00092E  6E33               	movwf	printf@width,c
  2207                           
  2208                           ;doprnt.c: 764: while(width--)
  2209  000930  D004               	goto	l2524
  2210  000932                     l2522:
  2211                           
  2212                           ;doprnt.c: 765: (putch(' ') );
  2213  000932  0E20               	movlw	32
  2214  000934  ECF5  F00A         	call	_putch
  2215  000938  D000               	goto	l2524
  2216  00093A                     l2524:
  2217  00093A  0633               	decf	printf@width,f,c
  2218  00093C  A0D8               	btfss	status,0,c
  2219  00093E  0634               	decf	printf@width+1,f,c
  2220  000940  2833               	incf	printf@width,w,c
  2221  000942  E1F7               	bnz	l2522
  2222  000944  2834               	incf	printf@width+1,w,c
  2223  000946  B4D8               	btfsc	status,2,c
  2224  000948  D00C               	goto	l2530
  2225  00094A  D7F3               	goto	l2522
  2226                           
  2227                           ;doprnt.c: 767: while(len--)
  2228  00094C  D00A               	goto	l2530
  2229  00094E                     l2526:
  2230                           
  2231                           ;doprnt.c: 768: (putch(*cp++) );
  2232  00094E  C029  FFD9         	movff	printf@cp,fsr2l
  2233  000952  C02A  FFDA         	movff	printf@cp+1,fsr2h
  2234  000956  50DF               	movf	indf2,w,c
  2235  000958  ECF5  F00A         	call	_putch
  2236  00095C  4A29               	infsnz	printf@cp,f,c
  2237  00095E  2A2A               	incf	printf@cp+1,f,c
  2238  000960  D000               	goto	l2530
  2239  000962                     l2530:
  2240  000962  062F               	decf	printf@len,f,c
  2241  000964  A0D8               	btfss	status,0,c
  2242  000966  0630               	decf	printf@len+1,f,c
  2243  000968  282F               	incf	printf@len,w,c
  2244  00096A  E1F1               	bnz	l2526
  2245  00096C  2830               	incf	printf@len+1,w,c
  2246  00096E  B4D8               	btfsc	status,2,c
  2247  000970  D0CB               	goto	l2598
  2248  000972  D7ED               	goto	l2526
  2249                           
  2250                           ;doprnt.c: 774: continue;
  2251  000974  D0C9               	goto	l2598
  2252  000976                     l2532:
  2253                           
  2254                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2255  000976  C02C  FFD9         	movff	printf@ap,fsr2l
  2256  00097A  C02D  FFDA         	movff	printf@ap+1,fsr2h
  2257  00097E  50DF               	movf	indf2,w,c
  2258  000980  6E35               	movwf	printf@c,c
  2259  000982  0E02               	movlw	2
  2260  000984  262C               	addwf	printf@ap,f,c
  2261  000986  0E00               	movlw	0
  2262  000988  222D               	addwfc	printf@ap+1,f,c
  2263  00098A  D000               	goto	l2536
  2264  00098C                     l2536:
  2265                           
  2266                           ;doprnt.c: 805: cp = (char *)&c;
  2267  00098C  0E35               	movlw	low printf@c
  2268  00098E  6E29               	movwf	printf@cp,c
  2269  000990  0E00               	movlw	high printf@c
  2270  000992  6E2A               	movwf	printf@cp+1,c
  2271                           
  2272                           ;doprnt.c: 806: len = 1;
  2273  000994  0E00               	movlw	0
  2274  000996  6E30               	movwf	printf@len+1,c
  2275  000998  0E01               	movlw	1
  2276  00099A  6E2F               	movwf	printf@len,c
  2277                           
  2278                           ;doprnt.c: 807: goto dostring;
  2279  00099C  D7BA               	goto	l2516
  2280                           
  2281                           ;doprnt.c: 822: }
  2282  00099E  D016               	goto	l2544
  2283  0009A0                     l2542:
  2284  0009A0  C021  FFF6         	movff	printf@f,tblptrl
  2285  0009A4  C022  FFF7         	movff	printf@f+1,tblptrh
  2286  0009A8  4A21               	infsnz	printf@f,f,c
  2287  0009AA  2A22               	incf	printf@f+1,f,c
  2288  0009AC                     	if	0	;tblptru may be non-zero
  2289  0009AC                     	endif
  2290  0009AC                     	if	0	;tblptru may be non-zero
  2291  0009AC                     	endif
  2292  0009AC  0008               	tblrd		*
  2293  0009AE  CFF5 F035          	movff	tablat,printf@c
  2294  0009B2  5035               	movf	printf@c,w,c
  2295                           
  2296                           ; Switch size 1, requested type "space"
  2297                           ; Number of cases is 4, Range of values is 0 to 105
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte           13     7 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302  0009B4  0A00               	xorlw	0	; case 0
  2303  0009B6  B4D8               	btfsc	status,2,c
  2304  0009B8  D0B5               	goto	l384
  2305  0009BA  0A63               	xorlw	99	; case 99
  2306  0009BC  B4D8               	btfsc	status,2,c
  2307  0009BE  D7DB               	goto	l2532
  2308  0009C0  0A07               	xorlw	7	; case 100
  2309  0009C2  B4D8               	btfsc	status,2,c
  2310  0009C4  D003               	goto	l2544
  2311  0009C6  0A0D               	xorlw	13	; case 105
  2312  0009C8  A4D8               	btfss	status,2,c
  2313  0009CA  D7E0               	goto	l2536
  2314  0009CC                     l2544:
  2315                           
  2316                           ;doprnt.c: 1253: {
  2317                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2318  0009CC  C02C  FFD9         	movff	printf@ap,fsr2l
  2319  0009D0  C02D  FFDA         	movff	printf@ap+1,fsr2h
  2320  0009D4  CFDE F031          	movff	postinc2,printf@val
  2321  0009D8  CFDD F032          	movff	postdec2,printf@val+1
  2322  0009DC  0E02               	movlw	2
  2323  0009DE  262C               	addwf	printf@ap,f,c
  2324  0009E0  0E00               	movlw	0
  2325  0009E2  222D               	addwfc	printf@ap+1,f,c
  2326                           
  2327                           ;doprnt.c: 1261: if((int)val < 0) {
  2328  0009E4  AE32               	btfss	printf@val+1,7,c
  2329  0009E6  D007               	goto	l2554
  2330                           
  2331                           ;doprnt.c: 1262: flag |= 0x03;
  2332  0009E8  0E03               	movlw	3
  2333  0009EA  122E               	iorwf	printf@flag,f,c
  2334                           
  2335                           ;doprnt.c: 1263: val = -val;
  2336  0009EC  6C31               	negf	printf@val,c
  2337  0009EE  1E32               	comf	printf@val+1,f,c
  2338  0009F0  B0D8               	btfsc	status,0,c
  2339  0009F2  2A32               	incf	printf@val+1,f,c
  2340  0009F4  D000               	goto	l2554
  2341  0009F6                     l2554:
  2342                           
  2343                           ;doprnt.c: 1264: }
  2344                           ;doprnt.c: 1266: }
  2345                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2346  0009F6  0E01               	movlw	1
  2347  0009F8  6E35               	movwf	printf@c,c
  2348  0009FA                     l2556:
  2349  0009FA  0E05               	movlw	5
  2350  0009FC  1835               	xorwf	printf@c,w,c
  2351  0009FE  B4D8               	btfsc	status,2,c
  2352  000A00  D016               	goto	l2568
  2353  000A02  D001               	goto	l2560
  2354  000A04  D014               	goto	l2568
  2355  000A06                     l2560:
  2356                           
  2357                           ;doprnt.c: 1306: if(val < dpowers[c])
  2358  000A06  5035               	movf	printf@c,w,c
  2359  000A08  0D02               	mullw	2
  2360  000A0A  0EFD               	movlw	low _dpowers
  2361  000A0C  24F3               	addwf	prodl,w,c
  2362  000A0E  6EF6               	movwf	tblptrl,c
  2363  000A10  0E7E               	movlw	high _dpowers
  2364  000A12  20F4               	addwfc	prodh,w,c
  2365  000A14  6EF7               	movwf	tblptrh,c
  2366  000A16                     	if	0	;There are less than 3 active tblptr bytes
  2367  000A16                     	endif
  2368  000A16  0009               	tblrd		*+
  2369  000A18  50F5               	movf	tablat,w,c
  2370  000A1A  5C31               	subwf	printf@val,w,c
  2371  000A1C  0009               	tblrd		*+
  2372  000A1E  50F5               	movf	tablat,w,c
  2373  000A20  5832               	subwfb	printf@val+1,w,c
  2374  000A22  A0D8               	btfss	status,0,c
  2375  000A24  D004               	goto	l2568
  2376  000A26  D001               	goto	l2564
  2377                           
  2378                           ;doprnt.c: 1307: break;
  2379  000A28  D002               	goto	l2568
  2380  000A2A                     l2564:
  2381  000A2A  2A35               	incf	printf@c,f,c
  2382  000A2C  D7E6               	goto	l2556
  2383  000A2E                     l2568:
  2384                           
  2385                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2386  000A2E  5033               	movf	printf@width,w,c
  2387  000A30  1034               	iorwf	printf@width+1,w,c
  2388  000A32  B4D8               	btfsc	status,2,c
  2389  000A34  D00A               	goto	l2574
  2390  000A36  C02E  F025         	movff	printf@flag,??_printf
  2391  000A3A  0E03               	movlw	3
  2392  000A3C  1625               	andwf	??_printf,f,c
  2393  000A3E  B4D8               	btfsc	status,2,c
  2394  000A40  D004               	goto	l2574
  2395                           
  2396                           ;doprnt.c: 1346: width--;
  2397  000A42  0633               	decf	printf@width,f,c
  2398  000A44  A0D8               	btfss	status,0,c
  2399  000A46  0634               	decf	printf@width+1,f,c
  2400  000A48  D000               	goto	l2574
  2401  000A4A                     l2574:
  2402                           
  2403                           ;doprnt.c: 1381: if(width > c)
  2404  000A4A  0E80               	movlw	128
  2405  000A4C  BE35               	btfsc	printf@c,7,c
  2406  000A4E  0E7F               	movlw	127
  2407  000A50  6E25               	movwf	??_printf& (0+255),c
  2408  000A52  5033               	movf	printf@width,w,c
  2409  000A54  5C35               	subwf	printf@c,w,c
  2410  000A56  5034               	movf	printf@width+1,w,c
  2411  000A58  0A80               	xorlw	128
  2412  000A5A  5825               	subwfb	??_printf& (0+255),w,c
  2413  000A5C  B0D8               	btfsc	status,0,c
  2414  000A5E  D007               	goto	l2578
  2415                           
  2416                           ;doprnt.c: 1382: width -= c;
  2417  000A60  5035               	movf	printf@c,w,c
  2418  000A62  5E33               	subwf	printf@width,f,c
  2419  000A64  0E00               	movlw	0
  2420  000A66  BE35               	btfsc	printf@c,7,c
  2421  000A68  0EFF               	movlw	255
  2422  000A6A  5A34               	subwfb	printf@width+1,f,c
  2423  000A6C  D005               	goto	l2580
  2424  000A6E                     l2578:
  2425                           
  2426                           ;doprnt.c: 1383: else
  2427                           ;doprnt.c: 1384: width = 0;
  2428  000A6E  0E00               	movlw	0
  2429  000A70  6E34               	movwf	printf@width+1,c
  2430  000A72  0E00               	movlw	0
  2431  000A74  6E33               	movwf	printf@width,c
  2432  000A76  D000               	goto	l2580
  2433  000A78                     l2580:
  2434                           
  2435                           ;doprnt.c: 1422: {
  2436                           ;doprnt.c: 1424: if(width
  2437                           ;doprnt.c: 1428: )
  2438  000A78  5033               	movf	printf@width,w,c
  2439  000A7A  1034               	iorwf	printf@width+1,w,c
  2440  000A7C  B4D8               	btfsc	status,2,c
  2441  000A7E  D00C               	goto	l2586
  2442  000A80                     l2582:
  2443                           
  2444                           ;doprnt.c: 1430: (putch(' ') );
  2445  000A80  0E20               	movlw	32
  2446  000A82  ECF5  F00A         	call	_putch
  2447                           
  2448                           ;doprnt.c: 1431: while(--width);
  2449  000A86  0633               	decf	printf@width,f,c
  2450  000A88  A0D8               	btfss	status,0,c
  2451  000A8A  0634               	decf	printf@width+1,f,c
  2452  000A8C  5033               	movf	printf@width,w,c
  2453  000A8E  1034               	iorwf	printf@width+1,w,c
  2454  000A90  B4D8               	btfsc	status,2,c
  2455  000A92  D002               	goto	l2586
  2456  000A94  D7F5               	goto	l2582
  2457  000A96  D000               	goto	l2586
  2458  000A98                     l2586:
  2459                           
  2460                           ;doprnt.c: 1438: if(flag & 0x03)
  2461  000A98  C02E  F025         	movff	printf@flag,??_printf
  2462  000A9C  0E03               	movlw	3
  2463  000A9E  1625               	andwf	??_printf,f,c
  2464  000AA0  B4D8               	btfsc	status,2,c
  2465  000AA2  D004               	goto	l2590
  2466                           
  2467                           ;doprnt.c: 1439: (putch('-') );
  2468  000AA4  0E2D               	movlw	45
  2469  000AA6  ECF5  F00A         	call	_putch
  2470  000AAA  D000               	goto	l2590
  2471  000AAC                     l2590:
  2472                           
  2473                           ;doprnt.c: 1469: }
  2474                           ;doprnt.c: 1472: prec = c;
  2475  000AAC  C035  F02B         	movff	printf@c,printf@prec
  2476                           
  2477                           ;doprnt.c: 1474: while(prec--) {
  2478  000AB0  D025               	goto	l2596
  2479  000AB2                     l2592:
  2480                           
  2481                           ;doprnt.c: 1478: {
  2482                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2483  000AB2  502B               	movf	printf@prec,w,c
  2484  000AB4  0D02               	mullw	2
  2485  000AB6  0EFD               	movlw	low _dpowers
  2486  000AB8  24F3               	addwf	prodl,w,c
  2487  000ABA  6EF6               	movwf	tblptrl,c
  2488  000ABC  0E7E               	movlw	high _dpowers
  2489  000ABE  20F4               	addwfc	prodh,w,c
  2490  000AC0  6EF7               	movwf	tblptrh,c
  2491  000AC2                     	if	0	;There are less than 3 active tblptr bytes
  2492  000AC2                     	endif
  2493  000AC2  0009               	tblrd		*+
  2494  000AC4  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2495  000AC8  000A               	tblrd		*-
  2496  000ACA  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2497  000ACE  C031  F012         	movff	printf@val,___lwdiv@dividend
  2498  000AD2  C032  F013         	movff	printf@val+1,___lwdiv@dividend+1
  2499  000AD6  EC9C  F00A         	call	___lwdiv	;wreg free
  2500  000ADA  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2501  000ADE  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2502  000AE2  0E00               	movlw	0
  2503  000AE4  6E1C               	movwf	___lwmod@divisor+1,c
  2504  000AE6  0E0A               	movlw	10
  2505  000AE8  6E1B               	movwf	___lwmod@divisor,c
  2506  000AEA  EC1E  F00B         	call	___lwmod	;wreg free
  2507  000AEE  5019               	movf	?___lwmod,w,c
  2508  000AF0  0F30               	addlw	48
  2509  000AF2  6E35               	movwf	printf@c,c
  2510                           
  2511                           ;doprnt.c: 1523: }
  2512                           ;doprnt.c: 1524: (putch(c) );
  2513  000AF4  5035               	movf	printf@c,w,c
  2514  000AF6  ECF5  F00A         	call	_putch
  2515  000AFA  D000               	goto	l2596
  2516  000AFC                     l2596:
  2517  000AFC  062B               	decf	printf@prec,f,c
  2518  000AFE  282B               	incf	printf@prec,w,c
  2519  000B00  B4D8               	btfsc	status,2,c
  2520  000B02  D002               	goto	l2598
  2521  000B04  D7D6               	goto	l2592
  2522  000B06  D000               	goto	l2598
  2523  000B08                     l2598:
  2524  000B08  C021  FFF6         	movff	printf@f,tblptrl
  2525  000B0C  C022  FFF7         	movff	printf@f+1,tblptrh
  2526  000B10  4A21               	infsnz	printf@f,f,c
  2527  000B12  2A22               	incf	printf@f+1,f,c
  2528  000B14                     	if	0	;tblptru may be non-zero
  2529  000B14                     	endif
  2530  000B14                     	if	0	;tblptru may be non-zero
  2531  000B14                     	endif
  2532  000B14  0008               	tblrd		*
  2533  000B16  CFF5 F035          	movff	tablat,printf@c
  2534  000B1A  5035               	movf	printf@c,w,c
  2535  000B1C  B4D8               	btfsc	status,2,c
  2536  000B1E  D002               	goto	l384
  2537  000B20  D6A9               	goto	l2498
  2538  000B22  D000               	goto	l384
  2539  000B24                     l384:
  2540  000B24  0012               	return		;funcret
  2541  000B26                     __end_of_printf:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           intcon2	equ	0xFF1
  2551                           intcon3	equ	0xFF0
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec1	equ	0xFE5
  2555                           fsr1l	equ	0xFE1
  2556                           indf2	equ	0xFDF
  2557                           postinc2	equ	0xFDE
  2558                           postdec2	equ	0xFDD
  2559                           fsr2h	equ	0xFDA
  2560                           fsr2l	equ	0xFD9
  2561                           status	equ	0xFD8
  2562                           
  2563 ;; *************** function _putch *****************
  2564 ;; Defined at:
  2565 ;;		line 87 in file "../Libraries/pic18f4520_hd44780.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  c               1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  c               1   31[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;		None               void
  2572 ;; Registers used:
  2573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2579 ;;      Params:         0       0       0       0       0       0       0
  2580 ;;      Locals:         1       0       0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0
  2582 ;;      Totals:         1       0       0       0       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    5
  2586 ;; This function calls:
  2587 ;;		_HD44780_CursorSet
  2588 ;;		_HD44780_Data
  2589 ;; This function is called by:
  2590 ;;		_printf
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text2
  2595  0015EA                     __ptext2:
  2596                           	opt stack 0
  2597  0015EA                     _putch:
  2598                           	opt stack 24
  2599                           
  2600                           ;incstack = 0
  2601                           ;putch@c stored from wreg
  2602  0015EA  6E20               	movwf	putch@c,c
  2603                           
  2604                           ;pic18f4520_hd44780.c: 89: if (HD44780_Opts.currentX >= HD44780_Opts.Cols) {
  2605  0015EC  5040               	movf	_HD44780_Opts+4,w,c
  2606  0015EE  5C41               	subwf	_HD44780_Opts+5,w,c
  2607  0015F0  A0D8               	btfss	status,0,c
  2608  0015F2  D009               	goto	l2108
  2609                           
  2610                           ;pic18f4520_hd44780.c: 90: HD44780_Opts.currentX = 0;
  2611  0015F4  0E00               	movlw	0
  2612  0015F6  6E41               	movwf	_HD44780_Opts+5,c
  2613                           
  2614                           ;pic18f4520_hd44780.c: 91: HD44780_Opts.currentY++;
  2615  0015F8  2A42               	incf	_HD44780_Opts+6,f,c
  2616                           
  2617                           ;pic18f4520_hd44780.c: 92: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.current
      +                          Y);
  2618  0015FA  C042  F01A         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  2619  0015FE  5041               	movf	_HD44780_Opts+5,w,c
  2620  001600  EC44  F00B         	call	_HD44780_CursorSet
  2621  001604  D000               	goto	l2108
  2622  001606                     l2108:
  2623                           
  2624                           ;pic18f4520_hd44780.c: 93: }
  2625                           ;pic18f4520_hd44780.c: 94: if (c == '\n') {
  2626  001606  0E0A               	movlw	10
  2627  001608  1820               	xorwf	putch@c,w,c
  2628  00160A  A4D8               	btfss	status,2,c
  2629  00160C  D007               	goto	l2114
  2630                           
  2631                           ;pic18f4520_hd44780.c: 95: HD44780_Opts.currentY++;
  2632  00160E  2A42               	incf	_HD44780_Opts+6,f,c
  2633                           
  2634                           ;pic18f4520_hd44780.c: 96: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.current
      +                          Y);
  2635  001610  C042  F01A         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  2636  001614  5041               	movf	_HD44780_Opts+5,w,c
  2637  001616  EC44  F00B         	call	_HD44780_CursorSet
  2638                           
  2639                           ;pic18f4520_hd44780.c: 97: } else if (c == '\r') {
  2640  00161A  D00F               	goto	l193
  2641  00161C                     l2114:
  2642  00161C  0E0D               	movlw	13
  2643  00161E  1820               	xorwf	putch@c,w,c
  2644  001620  A4D8               	btfss	status,2,c
  2645  001622  D006               	goto	l2118
  2646                           
  2647                           ;pic18f4520_hd44780.c: 98: HD44780_CursorSet(0, HD44780_Opts.currentY);
  2648  001624  C042  F01A         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  2649  001628  0E00               	movlw	0
  2650  00162A  EC44  F00B         	call	_HD44780_CursorSet
  2651                           
  2652                           ;pic18f4520_hd44780.c: 99: } else {
  2653  00162E  D005               	goto	l193
  2654  001630                     l2118:
  2655                           
  2656                           ;pic18f4520_hd44780.c: 100: HD44780_Data(c);
  2657  001630  5020               	movf	putch@c,w,c
  2658  001632  EC44  F00C         	call	_HD44780_Data
  2659                           
  2660                           ;pic18f4520_hd44780.c: 101: HD44780_Opts.currentX++;
  2661  001636  2A41               	incf	_HD44780_Opts+5,f,c
  2662  001638  D000               	goto	l193
  2663  00163A                     l193:
  2664  00163A  0012               	return		;funcret
  2665  00163C                     __end_of_putch:
  2666                           	opt stack 0
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           prodh	equ	0xFF4
  2672                           prodl	equ	0xFF3
  2673                           intcon	equ	0xFF2
  2674                           intcon2	equ	0xFF1
  2675                           intcon3	equ	0xFF0
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function _isdigit *****************
  2688 ;; Defined at:
  2689 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  c               1    wreg     unsigned char 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  c               1   19[COMRAM] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2703 ;;      Params:         0       0       0       0       0       0       0
  2704 ;;      Locals:         2       0       0       0       0       0       0
  2705 ;;      Temps:          1       0       0       0       0       0       0
  2706 ;;      Totals:         3       0       0       0       0       0       0
  2707 ;;Total ram usage:        3 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_printf
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text3
  2718  00180A                     __ptext3:
  2719                           	opt stack 0
  2720  00180A                     _isdigit:
  2721                           	opt stack 28
  2722                           
  2723                           ;incstack = 0
  2724                           ;isdigit@c stored from wreg
  2725  00180A  6E14               	movwf	isdigit@c,c
  2726  00180C  0E00               	movlw	0
  2727  00180E  6E13               	movwf	_isdigit$1751,c
  2728  001810  0E3A               	movlw	58
  2729  001812  6014               	cpfslt	isdigit@c,c
  2730  001814  D006               	goto	l2136
  2731  001816  0E2F               	movlw	47
  2732  001818  6414               	cpfsgt	isdigit@c,c
  2733  00181A  D003               	goto	l2136
  2734  00181C  0E01               	movlw	1
  2735  00181E  6E13               	movwf	_isdigit$1751,c
  2736  001820  D000               	goto	l2136
  2737  001822                     l2136:
  2738  001822  C013  F012         	movff	_isdigit$1751,??_isdigit
  2739  001826  3012               	rrcf	??_isdigit,w,c
  2740  001828  D000               	goto	l853
  2741  00182A                     l853:
  2742  00182A  0012               	return		;funcret
  2743  00182C                     __end_of_isdigit:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           intcon	equ	0xFF2
  2752                           intcon2	equ	0xFF1
  2753                           intcon3	equ	0xFF0
  2754                           postinc0	equ	0xFEE
  2755                           wreg	equ	0xFE8
  2756                           postdec1	equ	0xFE5
  2757                           fsr1l	equ	0xFE1
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function ___wmul *****************
  2766 ;; Defined at:
  2767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  multiplier      2   17[COMRAM] unsigned int 
  2770 ;;  multiplicand    2   19[COMRAM] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  product         2   21[COMRAM] unsigned int 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2   17[COMRAM] unsigned int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, prodl, prodh
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2782 ;;      Params:         4       0       0       0       0       0       0
  2783 ;;      Locals:         2       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0
  2785 ;;      Totals:         6       0       0       0       0       0       0
  2786 ;;Total ram usage:        6 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_printf
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text4
  2797  0017BE                     __ptext4:
  2798                           	opt stack 0
  2799  0017BE                     ___wmul:
  2800                           	opt stack 28
  2801                           
  2802                           ;incstack = 0
  2803  0017BE  5012               	movf	___wmul@multiplier,w,c
  2804  0017C0  0214               	mulwf	___wmul@multiplicand,c
  2805  0017C2  CFF3 F016          	movff	prodl,___wmul@product
  2806  0017C6  CFF4 F017          	movff	prodh,___wmul@product+1
  2807  0017CA  5012               	movf	___wmul@multiplier,w,c
  2808  0017CC  0215               	mulwf	___wmul@multiplicand+1,c
  2809  0017CE  50F3               	movf	prodl,w,c
  2810  0017D0  2617               	addwf	___wmul@product+1,f,c
  2811  0017D2  5013               	movf	___wmul@multiplier+1,w,c
  2812  0017D4  0214               	mulwf	___wmul@multiplicand,c
  2813  0017D6  50F3               	movf	prodl,w,c
  2814  0017D8  2617               	addwf	___wmul@product+1,f,c
  2815  0017DA  C016  F012         	movff	___wmul@product,?___wmul
  2816  0017DE  C017  F013         	movff	___wmul@product+1,?___wmul+1
  2817  0017E2  D000               	goto	l422
  2818  0017E4                     l422:
  2819  0017E4  0012               	return		;funcret
  2820  0017E6                     __end_of___wmul:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           intcon2	equ	0xFF1
  2830                           intcon3	equ	0xFF0
  2831                           postinc0	equ	0xFEE
  2832                           wreg	equ	0xFE8
  2833                           postdec1	equ	0xFE5
  2834                           fsr1l	equ	0xFE1
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function ___lwmod *****************
  2843 ;; Defined at:
  2844 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  dividend        2   24[COMRAM] unsigned int 
  2847 ;;  divisor         2   26[COMRAM] unsigned int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  counter         1   28[COMRAM] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2   24[COMRAM] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2859 ;;      Params:         4       0       0       0       0       0       0
  2860 ;;      Locals:         1       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0
  2862 ;;      Totals:         5       0       0       0       0       0       0
  2863 ;;Total ram usage:        5 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;;		_printf
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text5
  2875  00163C                     __ptext5:
  2876                           	opt stack 0
  2877  00163C                     ___lwmod:
  2878                           	opt stack 28
  2879                           
  2880                           ;incstack = 0
  2881  00163C  501B               	movf	___lwmod@divisor,w,c
  2882  00163E  101C               	iorwf	___lwmod@divisor+1,w,c
  2883  001640  B4D8               	btfsc	status,2,c
  2884  001642  D01D               	goto	l955
  2885  001644  0E01               	movlw	1
  2886  001646  6E1D               	movwf	___lwmod@counter,c
  2887  001648  D005               	goto	l2210
  2888  00164A                     l2208:
  2889  00164A  90D8               	bcf	status,0,c
  2890  00164C  361B               	rlcf	___lwmod@divisor,f,c
  2891  00164E  361C               	rlcf	___lwmod@divisor+1,f,c
  2892  001650  2A1D               	incf	___lwmod@counter,f,c
  2893  001652  D000               	goto	l2210
  2894  001654                     l2210:
  2895  001654  BE1C               	btfsc	___lwmod@divisor+1,7,c
  2896  001656  D002               	goto	l2212
  2897  001658  D7F8               	goto	l2208
  2898  00165A  D000               	goto	l2212
  2899  00165C                     l2212:
  2900  00165C  501B               	movf	___lwmod@divisor,w,c
  2901  00165E  5C19               	subwf	___lwmod@dividend,w,c
  2902  001660  501C               	movf	___lwmod@divisor+1,w,c
  2903  001662  581A               	subwfb	___lwmod@dividend+1,w,c
  2904  001664  A0D8               	btfss	status,0,c
  2905  001666  D005               	goto	l2216
  2906  001668  501B               	movf	___lwmod@divisor,w,c
  2907  00166A  5E19               	subwf	___lwmod@dividend,f,c
  2908  00166C  501C               	movf	___lwmod@divisor+1,w,c
  2909  00166E  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2910  001670  D000               	goto	l2216
  2911  001672                     l2216:
  2912  001672  90D8               	bcf	status,0,c
  2913  001674  321C               	rrcf	___lwmod@divisor+1,f,c
  2914  001676  321B               	rrcf	___lwmod@divisor,f,c
  2915  001678  2E1D               	decfsz	___lwmod@counter,f,c
  2916  00167A  D7F0               	goto	l2212
  2917  00167C  D000               	goto	l955
  2918  00167E                     l955:
  2919  00167E  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2920  001682  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2921  001686  0012               	return		;funcret
  2922  001688                     __end_of___lwmod:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           prodh	equ	0xFF4
  2929                           prodl	equ	0xFF3
  2930                           intcon	equ	0xFF2
  2931                           intcon2	equ	0xFF1
  2932                           intcon3	equ	0xFF0
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           postdec1	equ	0xFE5
  2936                           fsr1l	equ	0xFE1
  2937                           indf2	equ	0xFDF
  2938                           postinc2	equ	0xFDE
  2939                           postdec2	equ	0xFDD
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function ___lwdiv *****************
  2945 ;; Defined at:
  2946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  dividend        2   17[COMRAM] unsigned int 
  2949 ;;  divisor         2   19[COMRAM] unsigned int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  quotient        2   21[COMRAM] unsigned int 
  2952 ;;  counter         1   23[COMRAM] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2   17[COMRAM] unsigned int 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2962 ;;      Params:         4       0       0       0       0       0       0
  2963 ;;      Locals:         3       0       0       0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0
  2965 ;;      Totals:         7       0       0       0       0       0       0
  2966 ;;Total ram usage:        7 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;;		_printf
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text6
  2978  001538                     __ptext6:
  2979                           	opt stack 0
  2980  001538                     ___lwdiv:
  2981                           	opt stack 28
  2982                           
  2983                           ;incstack = 0
  2984  001538  0E00               	movlw	0
  2985  00153A  6E17               	movwf	___lwdiv@quotient+1,c
  2986  00153C  0E00               	movlw	0
  2987  00153E  6E16               	movwf	___lwdiv@quotient,c
  2988  001540  5014               	movf	___lwdiv@divisor,w,c
  2989  001542  1015               	iorwf	___lwdiv@divisor+1,w,c
  2990  001544  B4D8               	btfsc	status,2,c
  2991  001546  D021               	goto	l945
  2992  001548  0E01               	movlw	1
  2993  00154A  6E18               	movwf	___lwdiv@counter,c
  2994  00154C  D005               	goto	l2190
  2995  00154E                     l2188:
  2996  00154E  90D8               	bcf	status,0,c
  2997  001550  3614               	rlcf	___lwdiv@divisor,f,c
  2998  001552  3615               	rlcf	___lwdiv@divisor+1,f,c
  2999  001554  2A18               	incf	___lwdiv@counter,f,c
  3000  001556  D000               	goto	l2190
  3001  001558                     l2190:
  3002  001558  BE15               	btfsc	___lwdiv@divisor+1,7,c
  3003  00155A  D002               	goto	l2192
  3004  00155C  D7F8               	goto	l2188
  3005  00155E  D000               	goto	l2192
  3006  001560                     l2192:
  3007  001560  90D8               	bcf	status,0,c
  3008  001562  3616               	rlcf	___lwdiv@quotient,f,c
  3009  001564  3617               	rlcf	___lwdiv@quotient+1,f,c
  3010  001566  5014               	movf	___lwdiv@divisor,w,c
  3011  001568  5C12               	subwf	___lwdiv@dividend,w,c
  3012  00156A  5015               	movf	___lwdiv@divisor+1,w,c
  3013  00156C  5813               	subwfb	___lwdiv@dividend+1,w,c
  3014  00156E  A0D8               	btfss	status,0,c
  3015  001570  D006               	goto	l2200
  3016  001572  5014               	movf	___lwdiv@divisor,w,c
  3017  001574  5E12               	subwf	___lwdiv@dividend,f,c
  3018  001576  5015               	movf	___lwdiv@divisor+1,w,c
  3019  001578  5A13               	subwfb	___lwdiv@dividend+1,f,c
  3020  00157A  8016               	bsf	___lwdiv@quotient,0,c
  3021  00157C  D000               	goto	l2200
  3022  00157E                     l2200:
  3023  00157E  90D8               	bcf	status,0,c
  3024  001580  3215               	rrcf	___lwdiv@divisor+1,f,c
  3025  001582  3214               	rrcf	___lwdiv@divisor,f,c
  3026  001584  2E18               	decfsz	___lwdiv@counter,f,c
  3027  001586  D7EC               	goto	l2192
  3028  001588  D000               	goto	l945
  3029  00158A                     l945:
  3030  00158A  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  3031  00158E  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3032  001592  0012               	return		;funcret
  3033  001594                     __end_of___lwdiv:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           intcon2	equ	0xFF1
  3043                           intcon3	equ	0xFF0
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           postdec1	equ	0xFE5
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           postdec2	equ	0xFDD
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055 ;; *************** function ___fttol *****************
  3056 ;; Defined at:
  3057 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  f1              3   17[COMRAM] float 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  lval            4   27[COMRAM] unsigned long 
  3062 ;;  exp1            1   31[COMRAM] unsigned char 
  3063 ;;  sign1           1   26[COMRAM] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  4   17[COMRAM] long 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3073 ;;      Params:         4       0       0       0       0       0       0
  3074 ;;      Locals:         6       0       0       0       0       0       0
  3075 ;;      Temps:          5       0       0       0       0       0       0
  3076 ;;      Totals:        15       0       0       0       0       0       0
  3077 ;;Total ram usage:       15 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text7
  3088  0010FC                     __ptext7:
  3089                           	opt stack 0
  3090  0010FC                     ___fttol:
  3091                           	opt stack 29
  3092                           
  3093                           ;incstack = 0
  3094  0010FC  C014  F016         	movff	___fttol@f1+2,??___fttol
  3095  001100  6A17               	clrf	(??___fttol+1)& (0+255),c
  3096  001102  6A18               	clrf	(??___fttol+2)& (0+255),c
  3097  001104  3413               	rlcf	___fttol@f1+1,w,c
  3098  001106  3616               	rlcf	??___fttol& (0+255),f,c
  3099  001108  E301               	bnc	u2831
  3100  00110A  8017               	bsf	(??___fttol+1)& (0+255),0,c
  3101  00110C                     u2831:
  3102  00110C  5016               	movf	??___fttol,w,c
  3103  00110E  6E20               	movwf	___fttol@exp1,c
  3104  001110  5020               	movf	___fttol@exp1,w,c
  3105  001112  A4D8               	btfss	status,2,c
  3106  001114  D002               	goto	l2750
  3107  001116  D039               	goto	l2774
  3108  001118  D063               	goto	l838
  3109  00111A                     l2750:
  3110  00111A  0E17               	movlw	23
  3111  00111C  6E16               	movwf	??___fttol& (0+255),c
  3112  00111E  C012  F017         	movff	___fttol@f1,??___fttol+1
  3113  001122  C013  F018         	movff	___fttol@f1+1,??___fttol+2
  3114  001126  C014  F019         	movff	___fttol@f1+2,??___fttol+3
  3115  00112A  2816               	incf	??___fttol,w,c
  3116  00112C  6E1A               	movwf	(??___fttol+4)& (0+255),c
  3117  00112E  D004               	goto	u2850
  3118  001130                     u2855:
  3119  001130  90D8               	bcf	status,0,c
  3120  001132  3219               	rrcf	??___fttol+3,f,c
  3121  001134  3218               	rrcf	??___fttol+2,f,c
  3122  001136  3217               	rrcf	??___fttol+1,f,c
  3123  001138                     u2850:
  3124  001138  2E1A               	decfsz	(??___fttol+4)& (0+255),f,c
  3125  00113A  D7FA               	goto	u2855
  3126  00113C  5017               	movf	??___fttol+1,w,c
  3127  00113E  6E1B               	movwf	___fttol@sign1,c
  3128  001140  8E13               	bsf	___fttol@f1+1,7,c
  3129  001142  0EFF               	movlw	255
  3130  001144  1612               	andwf	___fttol@f1,f,c
  3131  001146  0EFF               	movlw	255
  3132  001148  1613               	andwf	___fttol@f1+1,f,c
  3133  00114A  0E00               	movlw	0
  3134  00114C  1614               	andwf	___fttol@f1+2,f,c
  3135  00114E  5012               	movf	___fttol@f1,w,c
  3136  001150  6E1C               	movwf	___fttol@lval,c
  3137  001152  5013               	movf	___fttol@f1+1,w,c
  3138  001154  6E1D               	movwf	___fttol@lval+1,c
  3139  001156  5014               	movf	___fttol@f1+2,w,c
  3140  001158  6E1E               	movwf	___fttol@lval+2,c
  3141  00115A  6A1F               	clrf	___fttol@lval+3,c
  3142  00115C  0E8E               	movlw	142
  3143  00115E  5E20               	subwf	___fttol@exp1,f,c
  3144  001160  AE20               	btfss	___fttol@exp1,7,c
  3145  001162  D010               	goto	l2772
  3146  001164  5020               	movf	___fttol@exp1,w,c
  3147  001166  0A80               	xorlw	128
  3148  001168  0F8F               	addlw	143
  3149  00116A  B0D8               	btfsc	status,0,c
  3150  00116C  D003               	goto	l2768
  3151  00116E  D00D               	goto	l2774
  3152  001170  D037               	goto	l838
  3153  001172  D000               	goto	l2768
  3154  001174                     l2768:
  3155  001174  90D8               	bcf	status,0,c
  3156  001176  321F               	rrcf	___fttol@lval+3,f,c
  3157  001178  321E               	rrcf	___fttol@lval+2,f,c
  3158  00117A  321D               	rrcf	___fttol@lval+1,f,c
  3159  00117C  321C               	rrcf	___fttol@lval,f,c
  3160  00117E  3E20               	incfsz	___fttol@exp1,f,c
  3161  001180  D7F9               	goto	l2768
  3162  001182  D019               	goto	l2782
  3163  001184                     l2772:
  3164  001184  0E17               	movlw	23
  3165  001186  6420               	cpfsgt	___fttol@exp1,c
  3166  001188  D011               	goto	l2780
  3167  00118A                     l2774:
  3168  00118A  0E00               	movlw	0
  3169  00118C  6E12               	movwf	?___fttol,c
  3170  00118E  0E00               	movlw	0
  3171  001190  6E13               	movwf	?___fttol+1,c
  3172  001192  0E00               	movlw	0
  3173  001194  6E14               	movwf	?___fttol+2,c
  3174  001196  0E00               	movlw	0
  3175  001198  6E15               	movwf	?___fttol+3,c
  3176  00119A  D022               	goto	l838
  3177  00119C  D007               	goto	l2780
  3178  00119E                     l2778:
  3179  00119E  90D8               	bcf	status,0,c
  3180  0011A0  361C               	rlcf	___fttol@lval,f,c
  3181  0011A2  361D               	rlcf	___fttol@lval+1,f,c
  3182  0011A4  361E               	rlcf	___fttol@lval+2,f,c
  3183  0011A6  361F               	rlcf	___fttol@lval+3,f,c
  3184  0011A8  0620               	decf	___fttol@exp1,f,c
  3185  0011AA  D000               	goto	l2780
  3186  0011AC                     l2780:
  3187  0011AC  5020               	movf	___fttol@exp1,w,c
  3188  0011AE  B4D8               	btfsc	status,2,c
  3189  0011B0  D002               	goto	l2782
  3190  0011B2  D7F5               	goto	l2778
  3191  0011B4  D000               	goto	l2782
  3192  0011B6                     l2782:
  3193  0011B6  501B               	movf	___fttol@sign1,w,c
  3194  0011B8  B4D8               	btfsc	status,2,c
  3195  0011BA  D009               	goto	l2786
  3196  0011BC  1E1F               	comf	___fttol@lval+3,f,c
  3197  0011BE  1E1E               	comf	___fttol@lval+2,f,c
  3198  0011C0  1E1D               	comf	___fttol@lval+1,f,c
  3199  0011C2  6C1C               	negf	___fttol@lval,c
  3200  0011C4  0E00               	movlw	0
  3201  0011C6  221D               	addwfc	___fttol@lval+1,f,c
  3202  0011C8  221E               	addwfc	___fttol@lval+2,f,c
  3203  0011CA  221F               	addwfc	___fttol@lval+3,f,c
  3204  0011CC  D000               	goto	l2786
  3205  0011CE                     l2786:
  3206  0011CE  C01C  F012         	movff	___fttol@lval,?___fttol
  3207  0011D2  C01D  F013         	movff	___fttol@lval+1,?___fttol+1
  3208  0011D6  C01E  F014         	movff	___fttol@lval+2,?___fttol+2
  3209  0011DA  C01F  F015         	movff	___fttol@lval+3,?___fttol+3
  3210  0011DE  D000               	goto	l838
  3211  0011E0                     l838:
  3212  0011E0  0012               	return		;funcret
  3213  0011E2                     __end_of___fttol:
  3214                           	opt stack 0
  3215                           tblptru	equ	0xFF8
  3216                           tblptrh	equ	0xFF7
  3217                           tblptrl	equ	0xFF6
  3218                           tablat	equ	0xFF5
  3219                           prodh	equ	0xFF4
  3220                           prodl	equ	0xFF3
  3221                           intcon	equ	0xFF2
  3222                           intcon2	equ	0xFF1
  3223                           intcon3	equ	0xFF0
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1l	equ	0xFE1
  3228                           indf2	equ	0xFDF
  3229                           postinc2	equ	0xFDE
  3230                           postdec2	equ	0xFDD
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function ___ftneg *****************
  3236 ;; Defined at:
  3237 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  f1              3   17[COMRAM] float 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  3   17[COMRAM] float 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3251 ;;      Params:         3       0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0
  3254 ;;      Totals:         3       0       0       0       0       0       0
  3255 ;;Total ram usage:        3 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text8
  3266  0017E6                     __ptext8:
  3267                           	opt stack 0
  3268  0017E6                     ___ftneg:
  3269                           	opt stack 29
  3270                           
  3271                           ;incstack = 0
  3272  0017E6  5012               	movf	___ftneg@f1,w,c
  3273  0017E8  1013               	iorwf	___ftneg@f1+1,w,c
  3274  0017EA  1014               	iorwf	___ftneg@f1+2,w,c
  3275  0017EC  B4D8               	btfsc	status,2,c
  3276  0017EE  D006               	goto	l827
  3277  0017F0  0E00               	movlw	0
  3278  0017F2  1A12               	xorwf	___ftneg@f1,f,c
  3279  0017F4  0E00               	movlw	0
  3280  0017F6  1A13               	xorwf	___ftneg@f1+1,f,c
  3281  0017F8  0E80               	movlw	128
  3282  0017FA  1A14               	xorwf	___ftneg@f1+2,f,c
  3283  0017FC                     l827:
  3284  0017FC  C012  F012         	movff	___ftneg@f1,?___ftneg
  3285  001800  C013  F013         	movff	___ftneg@f1+1,?___ftneg+1
  3286  001804  C014  F014         	movff	___ftneg@f1+2,?___ftneg+2
  3287  001808  0012               	return		;funcret
  3288  00180A                     __end_of___ftneg:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodh	equ	0xFF4
  3295                           prodl	equ	0xFF3
  3296                           intcon	equ	0xFF2
  3297                           intcon2	equ	0xFF1
  3298                           intcon3	equ	0xFF0
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1l	equ	0xFE1
  3303                           indf2	equ	0xFDF
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function ___ftmul *****************
  3311 ;; Defined at:
  3312 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  f1              3   41[COMRAM] float 
  3315 ;;  f2              3   44[COMRAM] float 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  f3_as_produc    3   51[COMRAM] unsigned um
  3318 ;;  sign            1   55[COMRAM] unsigned char 
  3319 ;;  cntr            1   54[COMRAM] unsigned char 
  3320 ;;  exp             1   50[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  3   41[COMRAM] float 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3330 ;;      Params:         6       0       0       0       0       0       0
  3331 ;;      Locals:         6       0       0       0       0       0       0
  3332 ;;      Temps:          3       0       0       0       0       0       0
  3333 ;;      Totals:        15       0       0       0       0       0       0
  3334 ;;Total ram usage:       15 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    2
  3337 ;; This function calls:
  3338 ;;		___ftpack
  3339 ;; This function is called by:
  3340 ;;		_main
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text9
  3345  001004                     __ptext9:
  3346                           	opt stack 0
  3347  001004                     ___ftmul:
  3348                           	opt stack 28
  3349                           
  3350                           ;incstack = 0
  3351  001004  C02C  F030         	movff	___ftmul@f1+2,??___ftmul
  3352  001008  6A31               	clrf	(??___ftmul+1)& (0+255),c
  3353  00100A  6A32               	clrf	(??___ftmul+2)& (0+255),c
  3354  00100C  342B               	rlcf	___ftmul@f1+1,w,c
  3355  00100E  3630               	rlcf	??___ftmul& (0+255),f,c
  3356  001010  E301               	bnc	u2751
  3357  001012  8031               	bsf	(??___ftmul+1)& (0+255),0,c
  3358  001014                     u2751:
  3359  001014  5030               	movf	??___ftmul,w,c
  3360  001016  6E33               	movwf	___ftmul@exp,c
  3361  001018  5033               	movf	___ftmul@exp,w,c
  3362  00101A  A4D8               	btfss	status,2,c
  3363  00101C  D002               	goto	l2686
  3364  00101E  D00E               	goto	l2688
  3365  001020  D06C               	goto	l817
  3366  001022                     l2686:
  3367  001022  C02F  F030         	movff	___ftmul@f2+2,??___ftmul
  3368  001026  6A31               	clrf	(??___ftmul+1)& (0+255),c
  3369  001028  6A32               	clrf	(??___ftmul+2)& (0+255),c
  3370  00102A  342E               	rlcf	___ftmul@f2+1,w,c
  3371  00102C  3630               	rlcf	??___ftmul& (0+255),f,c
  3372  00102E  E301               	bnc	u2771
  3373  001030  8031               	bsf	(??___ftmul+1)& (0+255),0,c
  3374  001032                     u2771:
  3375  001032  5030               	movf	??___ftmul,w,c
  3376  001034  6E38               	movwf	___ftmul@sign,c
  3377  001036  5038               	movf	___ftmul@sign,w,c
  3378  001038  A4D8               	btfss	status,2,c
  3379  00103A  D007               	goto	l2692
  3380  00103C                     l2688:
  3381  00103C  0E00               	movlw	0
  3382  00103E  6E2A               	movwf	?___ftmul,c
  3383  001040  0E00               	movlw	0
  3384  001042  6E2B               	movwf	?___ftmul+1,c
  3385  001044  0E00               	movlw	0
  3386  001046  6E2C               	movwf	?___ftmul+2,c
  3387  001048  D058               	goto	l817
  3388  00104A                     l2692:
  3389  00104A  5038               	movf	___ftmul@sign,w,c
  3390  00104C  0F7B               	addlw	123
  3391  00104E  2633               	addwf	___ftmul@exp,f,c
  3392  001050  C02C  F038         	movff	___ftmul@f1+2,___ftmul@sign
  3393  001054  502F               	movf	___ftmul@f2+2,w,c
  3394  001056  1A38               	xorwf	___ftmul@sign,f,c
  3395  001058  0E80               	movlw	128
  3396  00105A  1638               	andwf	___ftmul@sign,f,c
  3397  00105C  8E2B               	bsf	___ftmul@f1+1,7,c
  3398  00105E  8E2E               	bsf	___ftmul@f2+1,7,c
  3399  001060  0EFF               	movlw	255
  3400  001062  162D               	andwf	___ftmul@f2,f,c
  3401  001064  0EFF               	movlw	255
  3402  001066  162E               	andwf	___ftmul@f2+1,f,c
  3403  001068  0E00               	movlw	0
  3404  00106A  162F               	andwf	___ftmul@f2+2,f,c
  3405  00106C  0E00               	movlw	0
  3406  00106E  6E34               	movwf	___ftmul@f3_as_product,c
  3407  001070  0E00               	movlw	0
  3408  001072  6E35               	movwf	___ftmul@f3_as_product+1,c
  3409  001074  0E00               	movlw	0
  3410  001076  6E36               	movwf	___ftmul@f3_as_product+2,c
  3411  001078  0E07               	movlw	7
  3412  00107A  6E37               	movwf	___ftmul@cntr,c
  3413  00107C  D000               	goto	l2706
  3414  00107E                     l2706:
  3415  00107E  A02A               	btfss	___ftmul@f1,0,c
  3416  001080  D007               	goto	l2710
  3417  001082  502D               	movf	___ftmul@f2,w,c
  3418  001084  2634               	addwf	___ftmul@f3_as_product,f,c
  3419  001086  502E               	movf	___ftmul@f2+1,w,c
  3420  001088  2235               	addwfc	___ftmul@f3_as_product+1,f,c
  3421  00108A  502F               	movf	___ftmul@f2+2,w,c
  3422  00108C  2236               	addwfc	___ftmul@f3_as_product+2,f,c
  3423  00108E  D000               	goto	l2710
  3424  001090                     l2710:
  3425  001090  90D8               	bcf	status,0,c
  3426  001092  322C               	rrcf	___ftmul@f1+2,f,c
  3427  001094  322B               	rrcf	___ftmul@f1+1,f,c
  3428  001096  322A               	rrcf	___ftmul@f1,f,c
  3429  001098  90D8               	bcf	status,0,c
  3430  00109A  362D               	rlcf	___ftmul@f2,f,c
  3431  00109C  362E               	rlcf	___ftmul@f2+1,f,c
  3432  00109E  362F               	rlcf	___ftmul@f2+2,f,c
  3433  0010A0  2E37               	decfsz	___ftmul@cntr,f,c
  3434  0010A2  D7ED               	goto	l2706
  3435  0010A4  D000               	goto	l2714
  3436  0010A6                     l2714:
  3437  0010A6  0E09               	movlw	9
  3438  0010A8  6E37               	movwf	___ftmul@cntr,c
  3439  0010AA  D000               	goto	l2716
  3440  0010AC                     l2716:
  3441  0010AC  A02A               	btfss	___ftmul@f1,0,c
  3442  0010AE  D007               	goto	l2720
  3443  0010B0  502D               	movf	___ftmul@f2,w,c
  3444  0010B2  2634               	addwf	___ftmul@f3_as_product,f,c
  3445  0010B4  502E               	movf	___ftmul@f2+1,w,c
  3446  0010B6  2235               	addwfc	___ftmul@f3_as_product+1,f,c
  3447  0010B8  502F               	movf	___ftmul@f2+2,w,c
  3448  0010BA  2236               	addwfc	___ftmul@f3_as_product+2,f,c
  3449  0010BC  D000               	goto	l2720
  3450  0010BE                     l2720:
  3451  0010BE  90D8               	bcf	status,0,c
  3452  0010C0  322C               	rrcf	___ftmul@f1+2,f,c
  3453  0010C2  322B               	rrcf	___ftmul@f1+1,f,c
  3454  0010C4  322A               	rrcf	___ftmul@f1,f,c
  3455  0010C6  90D8               	bcf	status,0,c
  3456  0010C8  3236               	rrcf	___ftmul@f3_as_product+2,f,c
  3457  0010CA  3235               	rrcf	___ftmul@f3_as_product+1,f,c
  3458  0010CC  3234               	rrcf	___ftmul@f3_as_product,f,c
  3459  0010CE  2E37               	decfsz	___ftmul@cntr,f,c
  3460  0010D0  D7ED               	goto	l2716
  3461  0010D2  D000               	goto	l2724
  3462  0010D4                     l2724:
  3463  0010D4  C034  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  3464  0010D8  C035  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3465  0010DC  C036  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3466  0010E0  C033  F015         	movff	___ftmul@exp,___ftpack@exp
  3467  0010E4  C038  F016         	movff	___ftmul@sign,___ftpack@sign
  3468  0010E8  ECF1  F008         	call	___ftpack	;wreg free
  3469  0010EC  C012  F02A         	movff	?___ftpack,?___ftmul
  3470  0010F0  C013  F02B         	movff	?___ftpack+1,?___ftmul+1
  3471  0010F4  C014  F02C         	movff	?___ftpack+2,?___ftmul+2
  3472  0010F8  D000               	goto	l817
  3473  0010FA                     l817:
  3474  0010FA  0012               	return		;funcret
  3475  0010FC                     __end_of___ftmul:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           intcon	equ	0xFF2
  3484                           intcon2	equ	0xFF1
  3485                           intcon3	equ	0xFF0
  3486                           postinc0	equ	0xFEE
  3487                           wreg	equ	0xFE8
  3488                           postdec1	equ	0xFE5
  3489                           fsr1l	equ	0xFE1
  3490                           indf2	equ	0xFDF
  3491                           postinc2	equ	0xFDE
  3492                           postdec2	equ	0xFDD
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function ___ftadd *****************
  3498 ;; Defined at:
  3499 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  f1              3   29[COMRAM] float 
  3502 ;;  f2              3   32[COMRAM] float 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  exp1            1   40[COMRAM] unsigned char 
  3505 ;;  exp2            1   39[COMRAM] unsigned char 
  3506 ;;  sign            1   38[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  3   29[COMRAM] float 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3516 ;;      Params:         6       0       0       0       0       0       0
  3517 ;;      Locals:         3       0       0       0       0       0       0
  3518 ;;      Temps:          3       0       0       0       0       0       0
  3519 ;;      Totals:        12       0       0       0       0       0       0
  3520 ;;Total ram usage:       12 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    2
  3523 ;; This function calls:
  3524 ;;		___ftpack
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text10
  3531  000D16                     __ptext10:
  3532                           	opt stack 0
  3533  000D16                     ___ftadd:
  3534                           	opt stack 28
  3535                           
  3536                           ;incstack = 0
  3537  000D16  C020  F024         	movff	___ftadd@f1+2,??___ftadd
  3538  000D1A  6A25               	clrf	(??___ftadd+1)& (0+255),c
  3539  000D1C  6A26               	clrf	(??___ftadd+2)& (0+255),c
  3540  000D1E  341F               	rlcf	___ftadd@f1+1,w,c
  3541  000D20  3624               	rlcf	??___ftadd& (0+255),f,c
  3542  000D22  E301               	bnc	u2541
  3543  000D24  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  3544  000D26                     u2541:
  3545  000D26  5024               	movf	??___ftadd,w,c
  3546  000D28  6E29               	movwf	___ftadd@exp1,c
  3547  000D2A  C023  F024         	movff	___ftadd@f2+2,??___ftadd
  3548  000D2E  6A25               	clrf	(??___ftadd+1)& (0+255),c
  3549  000D30  6A26               	clrf	(??___ftadd+2)& (0+255),c
  3550  000D32  3422               	rlcf	___ftadd@f2+1,w,c
  3551  000D34  3624               	rlcf	??___ftadd& (0+255),f,c
  3552  000D36  E301               	bnc	u2551
  3553  000D38  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  3554  000D3A                     u2551:
  3555  000D3A  5024               	movf	??___ftadd,w,c
  3556  000D3C  6E28               	movwf	___ftadd@exp2,c
  3557  000D3E  5029               	movf	___ftadd@exp1,w,c
  3558  000D40  B4D8               	btfsc	status,2,c
  3559  000D42  D00B               	goto	l770
  3560  000D44  5028               	movf	___ftadd@exp2,w,c
  3561  000D46  5C29               	subwf	___ftadd@exp1,w,c
  3562  000D48  B0D8               	btfsc	status,0,c
  3563  000D4A  D00E               	goto	l2618
  3564  000D4C  5029               	movf	___ftadd@exp1,w,c
  3565  000D4E  0800               	sublw	0
  3566  000D50  2428               	addwf	___ftadd@exp2,w,c
  3567  000D52  6E24               	movwf	??___ftadd& (0+255),c
  3568  000D54  0E18               	movlw	24
  3569  000D56  6424               	cpfsgt	??___ftadd,c
  3570  000D58  D007               	goto	l2618
  3571  000D5A                     l770:
  3572  000D5A  C021  F01E         	movff	___ftadd@f2,?___ftadd
  3573  000D5E  C022  F01F         	movff	___ftadd@f2+1,?___ftadd+1
  3574  000D62  C023  F020         	movff	___ftadd@f2+2,?___ftadd+2
  3575  000D66  D0B8               	goto	l771
  3576  000D68                     l2618:
  3577  000D68  5028               	movf	___ftadd@exp2,w,c
  3578  000D6A  B4D8               	btfsc	status,2,c
  3579  000D6C  D00B               	goto	l774
  3580  000D6E  5029               	movf	___ftadd@exp1,w,c
  3581  000D70  5C28               	subwf	___ftadd@exp2,w,c
  3582  000D72  B0D8               	btfsc	status,0,c
  3583  000D74  D00E               	goto	l2624
  3584  000D76  5028               	movf	___ftadd@exp2,w,c
  3585  000D78  0800               	sublw	0
  3586  000D7A  2429               	addwf	___ftadd@exp1,w,c
  3587  000D7C  6E24               	movwf	??___ftadd& (0+255),c
  3588  000D7E  0E18               	movlw	24
  3589  000D80  6424               	cpfsgt	??___ftadd,c
  3590  000D82  D007               	goto	l2624
  3591  000D84                     l774:
  3592  000D84  C01E  F01E         	movff	___ftadd@f1,?___ftadd
  3593  000D88  C01F  F01F         	movff	___ftadd@f1+1,?___ftadd+1
  3594  000D8C  C020  F020         	movff	___ftadd@f1+2,?___ftadd+2
  3595  000D90  D0A3               	goto	l771
  3596  000D92                     l2624:
  3597  000D92  0E06               	movlw	6
  3598  000D94  6E27               	movwf	___ftadd@sign,c
  3599  000D96  AE20               	btfss	___ftadd@f1+2,7,c
  3600  000D98  D002               	goto	l2630
  3601  000D9A  8E27               	bsf	___ftadd@sign,7,c
  3602  000D9C  D000               	goto	l2630
  3603  000D9E                     l2630:
  3604  000D9E  BE23               	btfsc	___ftadd@f2+2,7,c
  3605  000DA0  8C27               	bsf	___ftadd@sign,6,c
  3606  000DA2  8E1F               	bsf	___ftadd@f1+1,7,c
  3607  000DA4  0EFF               	movlw	255
  3608  000DA6  161E               	andwf	___ftadd@f1,f,c
  3609  000DA8  0EFF               	movlw	255
  3610  000DAA  161F               	andwf	___ftadd@f1+1,f,c
  3611  000DAC  0E00               	movlw	0
  3612  000DAE  1620               	andwf	___ftadd@f1+2,f,c
  3613  000DB0  8E22               	bsf	___ftadd@f2+1,7,c
  3614  000DB2  0EFF               	movlw	255
  3615  000DB4  1621               	andwf	___ftadd@f2,f,c
  3616  000DB6  0EFF               	movlw	255
  3617  000DB8  1622               	andwf	___ftadd@f2+1,f,c
  3618  000DBA  0E00               	movlw	0
  3619  000DBC  1623               	andwf	___ftadd@f2+2,f,c
  3620  000DBE  5028               	movf	___ftadd@exp2,w,c
  3621  000DC0  5C29               	subwf	___ftadd@exp1,w,c
  3622  000DC2  B0D8               	btfsc	status,0,c
  3623  000DC4  D01E               	goto	l2650
  3624  000DC6                     l2640:
  3625  000DC6  90D8               	bcf	status,0,c
  3626  000DC8  3621               	rlcf	___ftadd@f2,f,c
  3627  000DCA  3622               	rlcf	___ftadd@f2+1,f,c
  3628  000DCC  3623               	rlcf	___ftadd@f2+2,f,c
  3629  000DCE  0628               	decf	___ftadd@exp2,f,c
  3630  000DD0  5029               	movf	___ftadd@exp1,w,c
  3631  000DD2  1828               	xorwf	___ftadd@exp2,w,c
  3632  000DD4  B4D8               	btfsc	status,2,c
  3633  000DD6  D00F               	goto	l2648
  3634  000DD8  0627               	decf	___ftadd@sign,f,c
  3635  000DDA  C027  F024         	movff	___ftadd@sign,??___ftadd
  3636  000DDE  0E07               	movlw	7
  3637  000DE0  1624               	andwf	??___ftadd,f,c
  3638  000DE2  B4D8               	btfsc	status,2,c
  3639  000DE4  D008               	goto	l2648
  3640  000DE6  D7EF               	goto	l2640
  3641  000DE8  D006               	goto	l2648
  3642  000DEA                     l2646:
  3643  000DEA  90D8               	bcf	status,0,c
  3644  000DEC  3220               	rrcf	___ftadd@f1+2,f,c
  3645  000DEE  321F               	rrcf	___ftadd@f1+1,f,c
  3646  000DF0  321E               	rrcf	___ftadd@f1,f,c
  3647  000DF2  2A29               	incf	___ftadd@exp1,f,c
  3648  000DF4  D000               	goto	l2648
  3649  000DF6                     l2648:
  3650  000DF6  5028               	movf	___ftadd@exp2,w,c
  3651  000DF8  1829               	xorwf	___ftadd@exp1,w,c
  3652  000DFA  B4D8               	btfsc	status,2,c
  3653  000DFC  D024               	goto	l785
  3654  000DFE  D7F5               	goto	l2646
  3655  000E00  D022               	goto	l785
  3656  000E02                     l2650:
  3657  000E02  5029               	movf	___ftadd@exp1,w,c
  3658  000E04  5C28               	subwf	___ftadd@exp2,w,c
  3659  000E06  B0D8               	btfsc	status,0,c
  3660  000E08  D01E               	goto	l785
  3661  000E0A                     l2652:
  3662  000E0A  90D8               	bcf	status,0,c
  3663  000E0C  361E               	rlcf	___ftadd@f1,f,c
  3664  000E0E  361F               	rlcf	___ftadd@f1+1,f,c
  3665  000E10  3620               	rlcf	___ftadd@f1+2,f,c
  3666  000E12  0629               	decf	___ftadd@exp1,f,c
  3667  000E14  5029               	movf	___ftadd@exp1,w,c
  3668  000E16  1828               	xorwf	___ftadd@exp2,w,c
  3669  000E18  B4D8               	btfsc	status,2,c
  3670  000E1A  D00F               	goto	l2660
  3671  000E1C  0627               	decf	___ftadd@sign,f,c
  3672  000E1E  C027  F024         	movff	___ftadd@sign,??___ftadd
  3673  000E22  0E07               	movlw	7
  3674  000E24  1624               	andwf	??___ftadd,f,c
  3675  000E26  B4D8               	btfsc	status,2,c
  3676  000E28  D008               	goto	l2660
  3677  000E2A  D7EF               	goto	l2652
  3678  000E2C  D006               	goto	l2660
  3679  000E2E                     l2658:
  3680  000E2E  90D8               	bcf	status,0,c
  3681  000E30  3223               	rrcf	___ftadd@f2+2,f,c
  3682  000E32  3222               	rrcf	___ftadd@f2+1,f,c
  3683  000E34  3221               	rrcf	___ftadd@f2,f,c
  3684  000E36  2A28               	incf	___ftadd@exp2,f,c
  3685  000E38  D000               	goto	l2660
  3686  000E3A                     l2660:
  3687  000E3A  5028               	movf	___ftadd@exp2,w,c
  3688  000E3C  1829               	xorwf	___ftadd@exp1,w,c
  3689  000E3E  B4D8               	btfsc	status,2,c
  3690  000E40  D002               	goto	l785
  3691  000E42  D7F5               	goto	l2658
  3692  000E44  D000               	goto	l785
  3693  000E46                     l785:
  3694  000E46  AE27               	btfss	___ftadd@sign,7,c
  3695  000E48  D00C               	goto	l794
  3696  000E4A  0EFF               	movlw	255
  3697  000E4C  1A1E               	xorwf	___ftadd@f1,f,c
  3698  000E4E  0EFF               	movlw	255
  3699  000E50  1A1F               	xorwf	___ftadd@f1+1,f,c
  3700  000E52  0EFF               	movlw	255
  3701  000E54  1A20               	xorwf	___ftadd@f1+2,f,c
  3702  000E56  0E01               	movlw	1
  3703  000E58  261E               	addwf	___ftadd@f1,f,c
  3704  000E5A  0E00               	movlw	0
  3705  000E5C  221F               	addwfc	___ftadd@f1+1,f,c
  3706  000E5E  0E00               	movlw	0
  3707  000E60  2220               	addwfc	___ftadd@f1+2,f,c
  3708  000E62                     l794:
  3709  000E62  AC27               	btfss	___ftadd@sign,6,c
  3710  000E64  D00D               	goto	l2666
  3711  000E66  0EFF               	movlw	255
  3712  000E68  1A21               	xorwf	___ftadd@f2,f,c
  3713  000E6A  0EFF               	movlw	255
  3714  000E6C  1A22               	xorwf	___ftadd@f2+1,f,c
  3715  000E6E  0EFF               	movlw	255
  3716  000E70  1A23               	xorwf	___ftadd@f2+2,f,c
  3717  000E72  0E01               	movlw	1
  3718  000E74  2621               	addwf	___ftadd@f2,f,c
  3719  000E76  0E00               	movlw	0
  3720  000E78  2222               	addwfc	___ftadd@f2+1,f,c
  3721  000E7A  0E00               	movlw	0
  3722  000E7C  2223               	addwfc	___ftadd@f2+2,f,c
  3723  000E7E  D000               	goto	l2666
  3724  000E80                     l2666:
  3725  000E80  0E00               	movlw	0
  3726  000E82  6E27               	movwf	___ftadd@sign,c
  3727  000E84  501E               	movf	___ftadd@f1,w,c
  3728  000E86  2621               	addwf	___ftadd@f2,f,c
  3729  000E88  501F               	movf	___ftadd@f1+1,w,c
  3730  000E8A  2222               	addwfc	___ftadd@f2+1,f,c
  3731  000E8C  5020               	movf	___ftadd@f1+2,w,c
  3732  000E8E  2223               	addwfc	___ftadd@f2+2,f,c
  3733  000E90  AE23               	btfss	___ftadd@f2+2,7,c
  3734  000E92  D00F               	goto	l2676
  3735  000E94  0EFF               	movlw	255
  3736  000E96  1A21               	xorwf	___ftadd@f2,f,c
  3737  000E98  0EFF               	movlw	255
  3738  000E9A  1A22               	xorwf	___ftadd@f2+1,f,c
  3739  000E9C  0EFF               	movlw	255
  3740  000E9E  1A23               	xorwf	___ftadd@f2+2,f,c
  3741  000EA0  0E01               	movlw	1
  3742  000EA2  2621               	addwf	___ftadd@f2,f,c
  3743  000EA4  0E00               	movlw	0
  3744  000EA6  2222               	addwfc	___ftadd@f2+1,f,c
  3745  000EA8  0E00               	movlw	0
  3746  000EAA  2223               	addwfc	___ftadd@f2+2,f,c
  3747  000EAC  0E01               	movlw	1
  3748  000EAE  6E27               	movwf	___ftadd@sign,c
  3749  000EB0  D000               	goto	l2676
  3750  000EB2                     l2676:
  3751  000EB2  C021  F012         	movff	___ftadd@f2,___ftpack@arg
  3752  000EB6  C022  F013         	movff	___ftadd@f2+1,___ftpack@arg+1
  3753  000EBA  C023  F014         	movff	___ftadd@f2+2,___ftpack@arg+2
  3754  000EBE  C029  F015         	movff	___ftadd@exp1,___ftpack@exp
  3755  000EC2  C027  F016         	movff	___ftadd@sign,___ftpack@sign
  3756  000EC6  ECF1  F008         	call	___ftpack	;wreg free
  3757  000ECA  C012  F01E         	movff	?___ftpack,?___ftadd
  3758  000ECE  C013  F01F         	movff	?___ftpack+1,?___ftadd+1
  3759  000ED2  C014  F020         	movff	?___ftpack+2,?___ftadd+2
  3760  000ED6  D000               	goto	l771
  3761  000ED8                     l771:
  3762  000ED8  0012               	return		;funcret
  3763  000EDA                     __end_of___ftadd:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           intcon2	equ	0xFF1
  3773                           intcon3	equ	0xFF0
  3774                           postinc0	equ	0xFEE
  3775                           wreg	equ	0xFE8
  3776                           postdec1	equ	0xFE5
  3777                           fsr1l	equ	0xFE1
  3778                           indf2	equ	0xFDF
  3779                           postinc2	equ	0xFDE
  3780                           postdec2	equ	0xFDD
  3781                           fsr2h	equ	0xFDA
  3782                           fsr2l	equ	0xFD9
  3783                           status	equ	0xFD8
  3784                           
  3785 ;; *************** function ___awtoft *****************
  3786 ;; Defined at:
  3787 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  c               2   25[COMRAM] int 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  sign            1   28[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  3   25[COMRAM] float 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3801 ;;      Params:         3       0       0       0       0       0       0
  3802 ;;      Locals:         1       0       0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0
  3804 ;;      Totals:         4       0       0       0       0       0       0
  3805 ;;Total ram usage:        4 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    2
  3808 ;; This function calls:
  3809 ;;		___ftpack
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text11
  3816  0016CC                     __ptext11:
  3817                           	opt stack 0
  3818  0016CC                     ___awtoft:
  3819                           	opt stack 28
  3820                           
  3821                           ;incstack = 0
  3822  0016CC  0E00               	movlw	0
  3823  0016CE  6E1D               	movwf	___awtoft@sign,c
  3824  0016D0  AE1B               	btfss	___awtoft@c+1,7,c
  3825  0016D2  D007               	goto	l2736
  3826  0016D4  6C1A               	negf	___awtoft@c,c
  3827  0016D6  1E1B               	comf	___awtoft@c+1,f,c
  3828  0016D8  B0D8               	btfsc	status,0,c
  3829  0016DA  2A1B               	incf	___awtoft@c+1,f,c
  3830  0016DC  0E01               	movlw	1
  3831  0016DE  6E1D               	movwf	___awtoft@sign,c
  3832  0016E0  D000               	goto	l2736
  3833  0016E2                     l2736:
  3834  0016E2  C01A  F012         	movff	___awtoft@c,___ftpack@arg
  3835  0016E6  C01B  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  3836  0016EA  6A14               	clrf	___ftpack@arg+2,c
  3837  0016EC  0E8E               	movlw	142
  3838  0016EE  6E15               	movwf	___ftpack@exp,c
  3839  0016F0  C01D  F016         	movff	___awtoft@sign,___ftpack@sign
  3840  0016F4  ECF1  F008         	call	___ftpack	;wreg free
  3841  0016F8  C012  F01A         	movff	?___ftpack,?___awtoft
  3842  0016FC  C013  F01B         	movff	?___ftpack+1,?___awtoft+1
  3843  001700  C014  F01C         	movff	?___ftpack+2,?___awtoft+2
  3844  001704  D000               	goto	l640
  3845  001706                     l640:
  3846  001706  0012               	return		;funcret
  3847  001708                     __end_of___awtoft:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           prodh	equ	0xFF4
  3854                           prodl	equ	0xFF3
  3855                           intcon	equ	0xFF2
  3856                           intcon2	equ	0xFF1
  3857                           intcon3	equ	0xFF0
  3858                           postinc0	equ	0xFEE
  3859                           wreg	equ	0xFE8
  3860                           postdec1	equ	0xFE5
  3861                           fsr1l	equ	0xFE1
  3862                           indf2	equ	0xFDF
  3863                           postinc2	equ	0xFDE
  3864                           postdec2	equ	0xFDD
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function ___ftpack *****************
  3870 ;; Defined at:
  3871 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  arg             3   17[COMRAM] unsigned um
  3874 ;;  exp             1   20[COMRAM] unsigned char 
  3875 ;;  sign            1   21[COMRAM] unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  3   17[COMRAM] float 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3887 ;;      Params:         5       0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0
  3889 ;;      Temps:          3       0       0       0       0       0       0
  3890 ;;      Totals:         8       0       0       0       0       0       0
  3891 ;;Total ram usage:        8 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		___awtoft
  3898 ;;		___ftadd
  3899 ;;		___ftmul
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text12
  3904  0011E2                     __ptext12:
  3905                           	opt stack 0
  3906  0011E2                     ___ftpack:
  3907                           	opt stack 28
  3908                           
  3909                           ;incstack = 0
  3910  0011E2  5015               	movf	___ftpack@exp,w,c
  3911  0011E4  B4D8               	btfsc	status,2,c
  3912  0011E6  D005               	goto	l2150
  3913  0011E8  5012               	movf	___ftpack@arg,w,c
  3914  0011EA  1013               	iorwf	___ftpack@arg+1,w,c
  3915  0011EC  1014               	iorwf	___ftpack@arg+2,w,c
  3916  0011EE  A4D8               	btfss	status,2,c
  3917  0011F0  D00E               	goto	l2156
  3918  0011F2                     l2150:
  3919  0011F2  0E00               	movlw	0
  3920  0011F4  6E12               	movwf	?___ftpack,c
  3921  0011F6  0E00               	movlw	0
  3922  0011F8  6E13               	movwf	?___ftpack+1,c
  3923  0011FA  0E00               	movlw	0
  3924  0011FC  6E14               	movwf	?___ftpack+2,c
  3925  0011FE  D053               	goto	l730
  3926  001200  D006               	goto	l2156
  3927  001202                     l2154:
  3928  001202  2A15               	incf	___ftpack@exp,f,c
  3929  001204  90D8               	bcf	status,0,c
  3930  001206  3214               	rrcf	___ftpack@arg+2,f,c
  3931  001208  3213               	rrcf	___ftpack@arg+1,f,c
  3932  00120A  3212               	rrcf	___ftpack@arg,f,c
  3933  00120C  D000               	goto	l2156
  3934  00120E                     l2156:
  3935  00120E  0E00               	movlw	0
  3936  001210  1412               	andwf	___ftpack@arg,w,c
  3937  001212  6E17               	movwf	??___ftpack& (0+255),c
  3938  001214  0E00               	movlw	0
  3939  001216  1413               	andwf	___ftpack@arg+1,w,c
  3940  001218  6E18               	movwf	(??___ftpack+1)& (0+255),c
  3941  00121A  0EFE               	movlw	254
  3942  00121C  1414               	andwf	___ftpack@arg+2,w,c
  3943  00121E  6E19               	movwf	(??___ftpack+2)& (0+255),c
  3944  001220  5017               	movf	??___ftpack,w,c
  3945  001222  1018               	iorwf	??___ftpack+1,w,c
  3946  001224  1019               	iorwf	??___ftpack+2,w,c
  3947  001226  B4D8               	btfsc	status,2,c
  3948  001228  D00E               	goto	l2162
  3949  00122A  D7EB               	goto	l2154
  3950  00122C  D00C               	goto	l2162
  3951  00122E                     l2158:
  3952  00122E  2A15               	incf	___ftpack@exp,f,c
  3953  001230  0E01               	movlw	1
  3954  001232  2612               	addwf	___ftpack@arg,f,c
  3955  001234  0E00               	movlw	0
  3956  001236  2213               	addwfc	___ftpack@arg+1,f,c
  3957  001238  0E00               	movlw	0
  3958  00123A  2214               	addwfc	___ftpack@arg+2,f,c
  3959  00123C  90D8               	bcf	status,0,c
  3960  00123E  3214               	rrcf	___ftpack@arg+2,f,c
  3961  001240  3213               	rrcf	___ftpack@arg+1,f,c
  3962  001242  3212               	rrcf	___ftpack@arg,f,c
  3963  001244  D000               	goto	l2162
  3964  001246                     l2162:
  3965  001246  0E00               	movlw	0
  3966  001248  1412               	andwf	___ftpack@arg,w,c
  3967  00124A  6E17               	movwf	??___ftpack& (0+255),c
  3968  00124C  0E00               	movlw	0
  3969  00124E  1413               	andwf	___ftpack@arg+1,w,c
  3970  001250  6E18               	movwf	(??___ftpack+1)& (0+255),c
  3971  001252  0EFF               	movlw	255
  3972  001254  1414               	andwf	___ftpack@arg+2,w,c
  3973  001256  6E19               	movwf	(??___ftpack+2)& (0+255),c
  3974  001258  5017               	movf	??___ftpack,w,c
  3975  00125A  1018               	iorwf	??___ftpack+1,w,c
  3976  00125C  1019               	iorwf	??___ftpack+2,w,c
  3977  00125E  B4D8               	btfsc	status,2,c
  3978  001260  D008               	goto	l2166
  3979  001262  D7E5               	goto	l2158
  3980  001264  D006               	goto	l2166
  3981  001266                     l2164:
  3982  001266  0615               	decf	___ftpack@exp,f,c
  3983  001268  90D8               	bcf	status,0,c
  3984  00126A  3612               	rlcf	___ftpack@arg,f,c
  3985  00126C  3613               	rlcf	___ftpack@arg+1,f,c
  3986  00126E  3614               	rlcf	___ftpack@arg+2,f,c
  3987  001270  D000               	goto	l2166
  3988  001272                     l2166:
  3989  001272  BE13               	btfsc	___ftpack@arg+1,7,c
  3990  001274  D004               	goto	l741
  3991  001276  0E02               	movlw	2
  3992  001278  6015               	cpfslt	___ftpack@exp,c
  3993  00127A  D7F5               	goto	l2164
  3994  00127C  D000               	goto	l741
  3995  00127E                     l741:
  3996  00127E  B015               	btfsc	___ftpack@exp,0,c
  3997  001280  D002               	goto	l2172
  3998  001282  9E13               	bcf	___ftpack@arg+1,7,c
  3999  001284  D000               	goto	l2172
  4000  001286                     l2172:
  4001  001286  90D8               	bcf	status,0,c
  4002  001288  3215               	rrcf	___ftpack@exp,f,c
  4003  00128A  5015               	movf	___ftpack@exp,w,c
  4004  00128C  1214               	iorwf	___ftpack@arg+2,f,c
  4005  00128E  5016               	movf	___ftpack@sign,w,c
  4006  001290  B4D8               	btfsc	status,2,c
  4007  001292  D002               	goto	l2178
  4008  001294  8E14               	bsf	___ftpack@arg+2,7,c
  4009  001296  D000               	goto	l2178
  4010  001298                     l2178:
  4011  001298  C012  F012         	movff	___ftpack@arg,?___ftpack
  4012  00129C  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  4013  0012A0  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  4014  0012A4  D000               	goto	l730
  4015  0012A6                     l730:
  4016  0012A6  0012               	return		;funcret
  4017  0012A8                     __end_of___ftpack:
  4018                           	opt stack 0
  4019                           tblptru	equ	0xFF8
  4020                           tblptrh	equ	0xFF7
  4021                           tblptrl	equ	0xFF6
  4022                           tablat	equ	0xFF5
  4023                           prodh	equ	0xFF4
  4024                           prodl	equ	0xFF3
  4025                           intcon	equ	0xFF2
  4026                           intcon2	equ	0xFF1
  4027                           intcon3	equ	0xFF0
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postdec1	equ	0xFE5
  4031                           fsr1l	equ	0xFE1
  4032                           indf2	equ	0xFDF
  4033                           postinc2	equ	0xFDE
  4034                           postdec2	equ	0xFDD
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _SSEG_Print *****************
  4040 ;; Defined at:
  4041 ;;		line 53 in file "../Libraries/pic18f4520_sseg.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  sseg            2   29[COMRAM] int 
  4044 ;;  n               2   31[COMRAM] int 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4056 ;;      Params:         4       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0
  4058 ;;      Temps:          4       0       0       0       0       0       0
  4059 ;;      Totals:         8       0       0       0       0       0       0
  4060 ;;Total ram usage:        8 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_main
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text13
  4071  000B26                     __ptext13:
  4072                           	opt stack 0
  4073  000B26                     _SSEG_Print:
  4074                           	opt stack 29
  4075                           
  4076                           ;pic18f4520_sseg.c: 55: LATCbits.LATC0 = (sseg == 1) ? 1 : 0;
  4077                           
  4078                           ;incstack = 0
  4079  000B26  041E               	decf	SSEG_Print@sseg,w,c
  4080  000B28  101F               	iorwf	SSEG_Print@sseg+1,w,c
  4081  000B2A  A4D8               	btfss	status,2,c
  4082  000B2C  D003               	goto	u2040
  4083  000B2E  6A22               	clrf	??_SSEG_Print& (0+255),c
  4084  000B30  2A22               	incf	??_SSEG_Print& (0+255),f,c
  4085  000B32  D001               	goto	u2058
  4086  000B34                     u2040:
  4087  000B34  6A22               	clrf	??_SSEG_Print& (0+255),c
  4088  000B36                     u2058:
  4089  000B36  508B               	movf	3979,w,c	;volatile
  4090  000B38  1822               	xorwf	??_SSEG_Print,w,c
  4091  000B3A  0BFE               	andlw	-2
  4092  000B3C  1822               	xorwf	??_SSEG_Print,w,c
  4093  000B3E  6E8B               	movwf	3979,c	;volatile
  4094                           
  4095                           ;pic18f4520_sseg.c: 56: LATCbits.LATC5 = (sseg == 2) ? 1 : 0;
  4096  000B40  0E02               	movlw	2
  4097  000B42  181E               	xorwf	SSEG_Print@sseg,w,c
  4098  000B44  101F               	iorwf	SSEG_Print@sseg+1,w,c
  4099  000B46  A4D8               	btfss	status,2,c
  4100  000B48  D003               	goto	u2060
  4101  000B4A  6A22               	clrf	??_SSEG_Print& (0+255),c
  4102  000B4C  2A22               	incf	??_SSEG_Print& (0+255),f,c
  4103  000B4E  D001               	goto	u2078
  4104  000B50                     u2060:
  4105  000B50  6A22               	clrf	??_SSEG_Print& (0+255),c
  4106  000B52                     u2078:
  4107  000B52  3A22               	swapf	??_SSEG_Print,f,c
  4108  000B54  4622               	rlncf	??_SSEG_Print,f,c
  4109  000B56  508B               	movf	3979,w,c	;volatile
  4110  000B58  1822               	xorwf	??_SSEG_Print,w,c
  4111  000B5A  0BDF               	andlw	-33
  4112  000B5C  1822               	xorwf	??_SSEG_Print,w,c
  4113  000B5E  6E8B               	movwf	3979,c	;volatile
  4114                           
  4115                           ;pic18f4520_sseg.c: 57: LATEbits.LATE2 = ((sseg_codes[n] & (0x01 << 0)) >> 0);
  4116  000B60  90D8               	bcf	status,0,c
  4117  000B62  3420               	rlcf	SSEG_Print@n,w,c
  4118  000B64  6ED9               	movwf	fsr2l,c
  4119  000B66  3421               	rlcf	SSEG_Print@n+1,w,c
  4120  000B68  6EDA               	movwf	fsr2h,c
  4121  000B6A  0E80               	movlw	low _sseg_codes
  4122  000B6C  26D9               	addwf	fsr2l,f,c
  4123  000B6E  0E00               	movlw	high _sseg_codes
  4124  000B70  22DA               	addwfc	fsr2h,f,c
  4125  000B72  50DF               	movf	indf2,w,c
  4126  000B74  6E22               	movwf	??_SSEG_Print& (0+255),c
  4127  000B76  0E01               	movlw	1
  4128  000B78  1622               	andwf	??_SSEG_Print,f,c
  4129  000B7A  4622               	rlncf	??_SSEG_Print,f,c
  4130  000B7C  4622               	rlncf	??_SSEG_Print,f,c
  4131  000B7E  508D               	movf	3981,w,c	;volatile
  4132  000B80  1822               	xorwf	??_SSEG_Print,w,c
  4133  000B82  0BFB               	andlw	-5
  4134  000B84  1822               	xorwf	??_SSEG_Print,w,c
  4135  000B86  6E8D               	movwf	3981,c	;volatile
  4136                           
  4137                           ;pic18f4520_sseg.c: 58: LATEbits.LATE1 = ((sseg_codes[n] & (0x01 << 1)) >> 1);
  4138  000B88  90D8               	bcf	status,0,c
  4139  000B8A  3420               	rlcf	SSEG_Print@n,w,c
  4140  000B8C  6ED9               	movwf	fsr2l,c
  4141  000B8E  3421               	rlcf	SSEG_Print@n+1,w,c
  4142  000B90  6EDA               	movwf	fsr2h,c
  4143  000B92  0E80               	movlw	low _sseg_codes
  4144  000B94  26D9               	addwf	fsr2l,f,c
  4145  000B96  0E00               	movlw	high _sseg_codes
  4146  000B98  22DA               	addwfc	fsr2h,f,c
  4147  000B9A  CFDE F022          	movff	postinc2,??_SSEG_Print
  4148  000B9E  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4149  000BA2  3423               	rlcf	??_SSEG_Print+1,w,c
  4150  000BA4  3023               	rrcf	??_SSEG_Print+1,w,c
  4151  000BA6  6E25               	movwf	(??_SSEG_Print+3)& (0+255),c
  4152  000BA8  3022               	rrcf	??_SSEG_Print,w,c
  4153  000BAA  6E24               	movwf	(??_SSEG_Print+2)& (0+255),c
  4154  000BAC  0E01               	movlw	1
  4155  000BAE  1624               	andwf	??_SSEG_Print+2,f,c
  4156  000BB0  4624               	rlncf	??_SSEG_Print+2,f,c
  4157  000BB2  508D               	movf	3981,w,c	;volatile
  4158  000BB4  1824               	xorwf	??_SSEG_Print+2,w,c
  4159  000BB6  0BFD               	andlw	-3
  4160  000BB8  1824               	xorwf	??_SSEG_Print+2,w,c
  4161  000BBA  6E8D               	movwf	3981,c	;volatile
  4162                           
  4163                           ;pic18f4520_sseg.c: 59: LATAbits.LATA2 = ((sseg_codes[n] & (0x01 << 2)) >> 2);
  4164  000BBC  90D8               	bcf	status,0,c
  4165  000BBE  3420               	rlcf	SSEG_Print@n,w,c
  4166  000BC0  6ED9               	movwf	fsr2l,c
  4167  000BC2  3421               	rlcf	SSEG_Print@n+1,w,c
  4168  000BC4  6EDA               	movwf	fsr2h,c
  4169  000BC6  0E80               	movlw	low _sseg_codes
  4170  000BC8  26D9               	addwf	fsr2l,f,c
  4171  000BCA  0E00               	movlw	high _sseg_codes
  4172  000BCC  22DA               	addwfc	fsr2h,f,c
  4173  000BCE  CFDE F022          	movff	postinc2,??_SSEG_Print
  4174  000BD2  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4175  000BD6  3423               	rlcf	??_SSEG_Print+1,w,c
  4176  000BD8  3223               	rrcf	??_SSEG_Print+1,f,c
  4177  000BDA  3222               	rrcf	??_SSEG_Print,f,c
  4178  000BDC  3423               	rlcf	??_SSEG_Print+1,w,c
  4179  000BDE  3223               	rrcf	??_SSEG_Print+1,f,c
  4180  000BE0  3222               	rrcf	??_SSEG_Print,f,c
  4181  000BE2  0E01               	movlw	1
  4182  000BE4  1622               	andwf	??_SSEG_Print,f,c
  4183  000BE6  4622               	rlncf	??_SSEG_Print,f,c
  4184  000BE8  4622               	rlncf	??_SSEG_Print,f,c
  4185  000BEA  5089               	movf	3977,w,c	;volatile
  4186  000BEC  1822               	xorwf	??_SSEG_Print,w,c
  4187  000BEE  0BFB               	andlw	-5
  4188  000BF0  1822               	xorwf	??_SSEG_Print,w,c
  4189  000BF2  6E89               	movwf	3977,c	;volatile
  4190                           
  4191                           ;pic18f4520_sseg.c: 60: LATAbits.LATA3 = ((sseg_codes[n] & (0x01 << 3)) >> 3);
  4192  000BF4  90D8               	bcf	status,0,c
  4193  000BF6  3420               	rlcf	SSEG_Print@n,w,c
  4194  000BF8  6ED9               	movwf	fsr2l,c
  4195  000BFA  3421               	rlcf	SSEG_Print@n+1,w,c
  4196  000BFC  6EDA               	movwf	fsr2h,c
  4197  000BFE  0E80               	movlw	low _sseg_codes
  4198  000C00  26D9               	addwf	fsr2l,f,c
  4199  000C02  0E00               	movlw	high _sseg_codes
  4200  000C04  22DA               	addwfc	fsr2h,f,c
  4201  000C06  CFDE F022          	movff	postinc2,??_SSEG_Print
  4202  000C0A  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4203  000C0E  3423               	rlcf	??_SSEG_Print+1,w,c
  4204  000C10  3223               	rrcf	??_SSEG_Print+1,f,c
  4205  000C12  3222               	rrcf	??_SSEG_Print,f,c
  4206  000C14  3423               	rlcf	??_SSEG_Print+1,w,c
  4207  000C16  3223               	rrcf	??_SSEG_Print+1,f,c
  4208  000C18  3222               	rrcf	??_SSEG_Print,f,c
  4209  000C1A  3423               	rlcf	??_SSEG_Print+1,w,c
  4210  000C1C  3223               	rrcf	??_SSEG_Print+1,f,c
  4211  000C1E  3222               	rrcf	??_SSEG_Print,f,c
  4212  000C20  0E01               	movlw	1
  4213  000C22  1622               	andwf	??_SSEG_Print,f,c
  4214  000C24  4622               	rlncf	??_SSEG_Print,f,c
  4215  000C26  4622               	rlncf	??_SSEG_Print,f,c
  4216  000C28  4622               	rlncf	??_SSEG_Print,f,c
  4217  000C2A  5089               	movf	3977,w,c	;volatile
  4218  000C2C  1822               	xorwf	??_SSEG_Print,w,c
  4219  000C2E  0BF7               	andlw	-9
  4220  000C30  1822               	xorwf	??_SSEG_Print,w,c
  4221  000C32  6E89               	movwf	3977,c	;volatile
  4222                           
  4223                           ;pic18f4520_sseg.c: 61: LATAbits.LATA4 = ((sseg_codes[n] & (0x01 << 4)) >> 4);
  4224  000C34  90D8               	bcf	status,0,c
  4225  000C36  3420               	rlcf	SSEG_Print@n,w,c
  4226  000C38  6ED9               	movwf	fsr2l,c
  4227  000C3A  3421               	rlcf	SSEG_Print@n+1,w,c
  4228  000C3C  6EDA               	movwf	fsr2h,c
  4229  000C3E  0E80               	movlw	low _sseg_codes
  4230  000C40  26D9               	addwf	fsr2l,f,c
  4231  000C42  0E00               	movlw	high _sseg_codes
  4232  000C44  22DA               	addwfc	fsr2h,f,c
  4233  000C46  CFDE F022          	movff	postinc2,??_SSEG_Print
  4234  000C4A  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4235  000C4E  0E04               	movlw	4
  4236  000C50  6E24               	movwf	(??_SSEG_Print+2)& (0+255),c
  4237  000C52                     u2085:
  4238  000C52  3423               	rlcf	??_SSEG_Print+1,w,c
  4239  000C54  3223               	rrcf	??_SSEG_Print+1,f,c
  4240  000C56  3222               	rrcf	??_SSEG_Print,f,c
  4241  000C58  2E24               	decfsz	(??_SSEG_Print+2)& (0+255),f,c
  4242  000C5A  D7FB               	goto	u2085
  4243  000C5C  0E01               	movlw	1
  4244  000C5E  1622               	andwf	??_SSEG_Print,f,c
  4245  000C60  3A22               	swapf	??_SSEG_Print,f,c
  4246  000C62  5089               	movf	3977,w,c	;volatile
  4247  000C64  1822               	xorwf	??_SSEG_Print,w,c
  4248  000C66  0BEF               	andlw	-17
  4249  000C68  1822               	xorwf	??_SSEG_Print,w,c
  4250  000C6A  6E89               	movwf	3977,c	;volatile
  4251                           
  4252                           ;pic18f4520_sseg.c: 62: LATEbits.LATE0 = ((sseg_codes[n] & (0x01 << 5)) >> 5);
  4253  000C6C  90D8               	bcf	status,0,c
  4254  000C6E  3420               	rlcf	SSEG_Print@n,w,c
  4255  000C70  6ED9               	movwf	fsr2l,c
  4256  000C72  3421               	rlcf	SSEG_Print@n+1,w,c
  4257  000C74  6EDA               	movwf	fsr2h,c
  4258  000C76  0E80               	movlw	low _sseg_codes
  4259  000C78  26D9               	addwf	fsr2l,f,c
  4260  000C7A  0E00               	movlw	high _sseg_codes
  4261  000C7C  22DA               	addwfc	fsr2h,f,c
  4262  000C7E  CFDE F022          	movff	postinc2,??_SSEG_Print
  4263  000C82  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4264  000C86  0E05               	movlw	5
  4265  000C88  6E24               	movwf	(??_SSEG_Print+2)& (0+255),c
  4266  000C8A                     u2095:
  4267  000C8A  3423               	rlcf	??_SSEG_Print+1,w,c
  4268  000C8C  3223               	rrcf	??_SSEG_Print+1,f,c
  4269  000C8E  3222               	rrcf	??_SSEG_Print,f,c
  4270  000C90  2E24               	decfsz	(??_SSEG_Print+2)& (0+255),f,c
  4271  000C92  D7FB               	goto	u2095
  4272  000C94  0E01               	movlw	1
  4273  000C96  1622               	andwf	??_SSEG_Print,f,c
  4274  000C98  508D               	movf	3981,w,c	;volatile
  4275  000C9A  1822               	xorwf	??_SSEG_Print,w,c
  4276  000C9C  0BFE               	andlw	-2
  4277  000C9E  1822               	xorwf	??_SSEG_Print,w,c
  4278  000CA0  6E8D               	movwf	3981,c	;volatile
  4279                           
  4280                           ;pic18f4520_sseg.c: 63: LATAbits.LATA5 = ((sseg_codes[n] & (0x01 << 6)) >> 6);
  4281  000CA2  90D8               	bcf	status,0,c
  4282  000CA4  3420               	rlcf	SSEG_Print@n,w,c
  4283  000CA6  6ED9               	movwf	fsr2l,c
  4284  000CA8  3421               	rlcf	SSEG_Print@n+1,w,c
  4285  000CAA  6EDA               	movwf	fsr2h,c
  4286  000CAC  0E80               	movlw	low _sseg_codes
  4287  000CAE  26D9               	addwf	fsr2l,f,c
  4288  000CB0  0E00               	movlw	high _sseg_codes
  4289  000CB2  22DA               	addwfc	fsr2h,f,c
  4290  000CB4  CFDE F022          	movff	postinc2,??_SSEG_Print
  4291  000CB8  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4292  000CBC  0E06               	movlw	6
  4293  000CBE  6E24               	movwf	(??_SSEG_Print+2)& (0+255),c
  4294  000CC0                     u2105:
  4295  000CC0  3423               	rlcf	??_SSEG_Print+1,w,c
  4296  000CC2  3223               	rrcf	??_SSEG_Print+1,f,c
  4297  000CC4  3222               	rrcf	??_SSEG_Print,f,c
  4298  000CC6  2E24               	decfsz	(??_SSEG_Print+2)& (0+255),f,c
  4299  000CC8  D7FB               	goto	u2105
  4300  000CCA  0E01               	movlw	1
  4301  000CCC  1622               	andwf	??_SSEG_Print,f,c
  4302  000CCE  3A22               	swapf	??_SSEG_Print,f,c
  4303  000CD0  4622               	rlncf	??_SSEG_Print,f,c
  4304  000CD2  5089               	movf	3977,w,c	;volatile
  4305  000CD4  1822               	xorwf	??_SSEG_Print,w,c
  4306  000CD6  0BDF               	andlw	-33
  4307  000CD8  1822               	xorwf	??_SSEG_Print,w,c
  4308  000CDA  6E89               	movwf	3977,c	;volatile
  4309                           
  4310                           ;pic18f4520_sseg.c: 64: LATAbits.LATA1 = ((sseg_codes[n] & (0x01 << 7)) >> 7);
  4311  000CDC  90D8               	bcf	status,0,c
  4312  000CDE  3420               	rlcf	SSEG_Print@n,w,c
  4313  000CE0  6ED9               	movwf	fsr2l,c
  4314  000CE2  3421               	rlcf	SSEG_Print@n+1,w,c
  4315  000CE4  6EDA               	movwf	fsr2h,c
  4316  000CE6  0E80               	movlw	low _sseg_codes
  4317  000CE8  26D9               	addwf	fsr2l,f,c
  4318  000CEA  0E00               	movlw	high _sseg_codes
  4319  000CEC  22DA               	addwfc	fsr2h,f,c
  4320  000CEE  CFDE F022          	movff	postinc2,??_SSEG_Print
  4321  000CF2  CFDD F023          	movff	postdec2,??_SSEG_Print+1
  4322  000CF6  0E07               	movlw	7
  4323  000CF8  6E24               	movwf	(??_SSEG_Print+2)& (0+255),c
  4324  000CFA                     u2115:
  4325  000CFA  3423               	rlcf	??_SSEG_Print+1,w,c
  4326  000CFC  3223               	rrcf	??_SSEG_Print+1,f,c
  4327  000CFE  3222               	rrcf	??_SSEG_Print,f,c
  4328  000D00  2E24               	decfsz	(??_SSEG_Print+2)& (0+255),f,c
  4329  000D02  D7FB               	goto	u2115
  4330  000D04  0E01               	movlw	1
  4331  000D06  1622               	andwf	??_SSEG_Print,f,c
  4332  000D08  4622               	rlncf	??_SSEG_Print,f,c
  4333  000D0A  5089               	movf	3977,w,c	;volatile
  4334  000D0C  1822               	xorwf	??_SSEG_Print,w,c
  4335  000D0E  0BFD               	andlw	-3
  4336  000D10  1822               	xorwf	??_SSEG_Print,w,c
  4337  000D12  6E89               	movwf	3977,c	;volatile
  4338  000D14  0012               	return		;funcret
  4339  000D16                     __end_of_SSEG_Print:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           intcon	equ	0xFF2
  4348                           intcon2	equ	0xFF1
  4349                           intcon3	equ	0xFF0
  4350                           postinc0	equ	0xFEE
  4351                           wreg	equ	0xFE8
  4352                           postdec1	equ	0xFE5
  4353                           fsr1l	equ	0xFE1
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _SSEG_Init *****************
  4362 ;; Defined at:
  4363 ;;		line 28 in file "../Libraries/pic18f4520_sseg.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;		None               void
  4370 ;; Registers used:
  4371 ;;		None
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4377 ;;      Params:         0       0       0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    1
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_main
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text14
  4392  001794                     __ptext14:
  4393                           	opt stack 0
  4394  001794                     _SSEG_Init:
  4395                           	opt stack 29
  4396                           
  4397                           ;pic18f4520_sseg.c: 30: TRISCbits.RC0 = 0;
  4398                           
  4399                           ;incstack = 0
  4400  001794  9094               	bcf	3988,0,c	;volatile
  4401                           
  4402                           ;pic18f4520_sseg.c: 31: TRISCbits.RC5 = 0;
  4403  001796  9A94               	bcf	3988,5,c	;volatile
  4404                           
  4405                           ;pic18f4520_sseg.c: 32: TRISEbits.RE2 = 0;
  4406  001798  9496               	bcf	3990,2,c	;volatile
  4407                           
  4408                           ;pic18f4520_sseg.c: 33: TRISEbits.RE1 = 0;
  4409  00179A  9296               	bcf	3990,1,c	;volatile
  4410                           
  4411                           ;pic18f4520_sseg.c: 34: TRISAbits.RA2 = 0;
  4412  00179C  9492               	bcf	3986,2,c	;volatile
  4413                           
  4414                           ;pic18f4520_sseg.c: 35: TRISAbits.RA3 = 0;
  4415  00179E  9692               	bcf	3986,3,c	;volatile
  4416                           
  4417                           ;pic18f4520_sseg.c: 36: TRISAbits.RA4 = 0;
  4418  0017A0  9892               	bcf	3986,4,c	;volatile
  4419                           
  4420                           ;pic18f4520_sseg.c: 37: TRISEbits.RE0 = 0;
  4421  0017A2  9096               	bcf	3990,0,c	;volatile
  4422                           
  4423                           ;pic18f4520_sseg.c: 38: TRISAbits.RA5 = 0;
  4424  0017A4  9A92               	bcf	3986,5,c	;volatile
  4425                           
  4426                           ;pic18f4520_sseg.c: 39: TRISAbits.RA1 = 0;
  4427  0017A6  9292               	bcf	3986,1,c	;volatile
  4428                           
  4429                           ;pic18f4520_sseg.c: 41: LATCbits.LATC0 = 0;
  4430  0017A8  908B               	bcf	3979,0,c	;volatile
  4431                           
  4432                           ;pic18f4520_sseg.c: 42: LATCbits.LATC5 = 0;
  4433  0017AA  9A8B               	bcf	3979,5,c	;volatile
  4434                           
  4435                           ;pic18f4520_sseg.c: 43: LATEbits.LATE2 = 0;
  4436  0017AC  948D               	bcf	3981,2,c	;volatile
  4437                           
  4438                           ;pic18f4520_sseg.c: 44: LATEbits.LATE1 = 0;
  4439  0017AE  928D               	bcf	3981,1,c	;volatile
  4440                           
  4441                           ;pic18f4520_sseg.c: 45: LATAbits.LATA2 = 0;
  4442  0017B0  9489               	bcf	3977,2,c	;volatile
  4443                           
  4444                           ;pic18f4520_sseg.c: 46: LATAbits.LATA3 = 0;
  4445  0017B2  9689               	bcf	3977,3,c	;volatile
  4446                           
  4447                           ;pic18f4520_sseg.c: 47: LATAbits.LATA4 = 0;
  4448  0017B4  9889               	bcf	3977,4,c	;volatile
  4449                           
  4450                           ;pic18f4520_sseg.c: 48: LATEbits.LATE0 = 0;
  4451  0017B6  908D               	bcf	3981,0,c	;volatile
  4452                           
  4453                           ;pic18f4520_sseg.c: 49: LATAbits.LATA5 = 0;
  4454  0017B8  9A89               	bcf	3977,5,c	;volatile
  4455                           
  4456                           ;pic18f4520_sseg.c: 50: LATAbits.LATA1 = 0;
  4457  0017BA  9289               	bcf	3977,1,c	;volatile
  4458  0017BC  0012               	return		;funcret
  4459  0017BE                     __end_of_SSEG_Init:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           intcon2	equ	0xFF1
  4469                           intcon3	equ	0xFF0
  4470                           postinc0	equ	0xFEE
  4471                           wreg	equ	0xFE8
  4472                           postdec1	equ	0xFE5
  4473                           fsr1l	equ	0xFE1
  4474                           indf2	equ	0xFDF
  4475                           postinc2	equ	0xFDE
  4476                           postdec2	equ	0xFDD
  4477                           fsr2h	equ	0xFDA
  4478                           fsr2l	equ	0xFD9
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _ReadADC *****************
  4482 ;; Defined at:
  4483 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2   17[COMRAM] int 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4497 ;;      Params:         2       0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0
  4499 ;;      Temps:          2       0       0       0       0       0       0
  4500 ;;      Totals:         4       0       0       0       0       0       0
  4501 ;;Total ram usage:        4 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text15
  4512  0018C8                     __ptext15:
  4513                           	opt stack 0
  4514  0018C8                     _ReadADC:
  4515                           	opt stack 29
  4516                           
  4517                           ;incstack = 0
  4518  0018C8  50C4               	movf	4036,w,c	;volatile
  4519  0018CA  6E14               	movwf	??_ReadADC& (0+255),c
  4520  0018CC  50C3               	movf	4035,w,c	;volatile
  4521  0018CE  6E12               	movwf	?_ReadADC,c
  4522  0018D0  C014  F013         	movff	??_ReadADC,?_ReadADC+1
  4523  0018D4  D000               	goto	l419
  4524  0018D6                     l419:
  4525  0018D6  0012               	return		;funcret
  4526  0018D8                     __end_of_ReadADC:
  4527                           	opt stack 0
  4528                           tblptru	equ	0xFF8
  4529                           tblptrh	equ	0xFF7
  4530                           tblptrl	equ	0xFF6
  4531                           tablat	equ	0xFF5
  4532                           prodh	equ	0xFF4
  4533                           prodl	equ	0xFF3
  4534                           intcon	equ	0xFF2
  4535                           intcon2	equ	0xFF1
  4536                           intcon3	equ	0xFF0
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           postdec1	equ	0xFE5
  4540                           fsr1l	equ	0xFE1
  4541                           indf2	equ	0xFDF
  4542                           postinc2	equ	0xFDE
  4543                           postdec2	equ	0xFDD
  4544                           fsr2h	equ	0xFDA
  4545                           fsr2l	equ	0xFD9
  4546                           status	equ	0xFD8
  4547                           
  4548 ;; *************** function _OpenADC *****************
  4549 ;; Defined at:
  4550 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  config          1    wreg     unsigned char 
  4553 ;;  config2         1   17[COMRAM] unsigned char 
  4554 ;;  portconfig      1   18[COMRAM] unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  config          1   21[COMRAM] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;		None               void
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         2       0       0       0       0       0       0
  4567 ;;      Locals:         1       0       0       0       0       0       0
  4568 ;;      Temps:          2       0       0       0       0       0       0
  4569 ;;      Totals:         5       0       0       0       0       0       0
  4570 ;;Total ram usage:        5 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text16
  4581  0014DA                     __ptext16:
  4582                           	opt stack 0
  4583  0014DA                     _OpenADC:
  4584                           	opt stack 29
  4585                           
  4586                           ;incstack = 0
  4587                           ;OpenADC@config stored from wreg
  4588  0014DA  6E16               	movwf	OpenADC@config,c
  4589  0014DC  0E00               	movlw	0
  4590  0014DE  6EC2               	movwf	4034,c	;volatile
  4591  0014E0  0E00               	movlw	0
  4592  0014E2  6EC0               	movwf	4032,c	;volatile
  4593  0014E4  90D8               	bcf	status,0,c
  4594  0014E6  3012               	rrcf	OpenADC@config2,w,c
  4595  0014E8  0B3C               	andlw	60
  4596  0014EA  6EC2               	movwf	4034,c	;volatile
  4597  0014EC  C012  F014         	movff	OpenADC@config2,??_OpenADC
  4598  0014F0  3A14               	swapf	??_OpenADC,f,c
  4599  0014F2  0EF0               	movlw	240
  4600  0014F4  1614               	andwf	??_OpenADC,f,c
  4601  0014F6  0E30               	movlw	48
  4602  0014F8  1614               	andwf	??_OpenADC,f,c
  4603  0014FA  5013               	movf	OpenADC@portconfig,w,c
  4604  0014FC  0B0F               	andlw	15
  4605  0014FE  1014               	iorwf	??_OpenADC,w,c
  4606  001500  6EC1               	movwf	4033,c	;volatile
  4607  001502  C016  F014         	movff	OpenADC@config,??_OpenADC
  4608  001506  90D8               	bcf	status,0,c
  4609  001508  3614               	rlcf	??_OpenADC,f,c
  4610  00150A  90D8               	bcf	status,0,c
  4611  00150C  3614               	rlcf	??_OpenADC,f,c
  4612  00150E  0E38               	movlw	56
  4613  001510  1614               	andwf	??_OpenADC,f,c
  4614  001512  C016  F015         	movff	OpenADC@config,??_OpenADC+1
  4615  001516  3A15               	swapf	??_OpenADC+1,f,c
  4616  001518  0E0F               	movlw	15
  4617  00151A  1615               	andwf	??_OpenADC+1,f,c
  4618  00151C  0E07               	movlw	7
  4619  00151E  1615               	andwf	??_OpenADC+1,f,c
  4620  001520  5016               	movf	OpenADC@config,w,c
  4621  001522  0B80               	andlw	128
  4622  001524  1015               	iorwf	??_OpenADC+1,w,c
  4623  001526  1014               	iorwf	??_OpenADC,w,c
  4624  001528  6EC0               	movwf	4032,c	;volatile
  4625  00152A  AE12               	btfss	OpenADC@config2,7,c
  4626  00152C  D003               	goto	l411
  4627  00152E  9C9E               	bcf	3998,6,c	;volatile
  4628  001530  8C9D               	bsf	3997,6,c	;volatile
  4629  001532  8CF2               	bsf	intcon,6,c	;volatile
  4630  001534                     l411:
  4631  001534  80C2               	bsf	4034,0,c	;volatile
  4632  001536  0012               	return		;funcret
  4633  001538                     __end_of_OpenADC:
  4634                           	opt stack 0
  4635                           tblptru	equ	0xFF8
  4636                           tblptrh	equ	0xFF7
  4637                           tblptrl	equ	0xFF6
  4638                           tablat	equ	0xFF5
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           intcon	equ	0xFF2
  4642                           intcon2	equ	0xFF1
  4643                           intcon3	equ	0xFF0
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           postdec1	equ	0xFE5
  4647                           fsr1l	equ	0xFE1
  4648                           indf2	equ	0xFDF
  4649                           postinc2	equ	0xFDE
  4650                           postdec2	equ	0xFDD
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _KEYPAD_Read *****************
  4656 ;; Defined at:
  4657 ;;		line 46 in file "../Libraries/pic18f4520_keypad.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2   17[COMRAM] int 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4671 ;;      Params:         2       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0
  4674 ;;      Totals:         2       0       0       0       0       0       0
  4675 ;;Total ram usage:        2 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_main
  4682 ;;		_KEYPAD_WaitUntilRelease
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text17
  4687  000EDA                     __ptext17:
  4688                           	opt stack 0
  4689  000EDA                     _KEYPAD_Read:
  4690                           	opt stack 29
  4691                           
  4692                           ;pic18f4520_keypad.c: 50: PORTDbits.RD3=1; PORTDbits.RD2=0;
  4693                           
  4694                           ;incstack = 0
  4695  000EDA  8683               	bsf	3971,3,c	;volatile
  4696  000EDC  9483               	bcf	3971,2,c	;volatile
  4697                           
  4698                           ;pic18f4520_keypad.c: 51: PORTDbits.RD1=0; PORTDbits.RD0=0;
  4699  000EDE  9283               	bcf	3971,1,c	;volatile
  4700  000EE0  9083               	bcf	3971,0,c	;volatile
  4701                           
  4702                           ;pic18f4520_keypad.c: 52: if(PORTDbits.RD7) return 1; if(PORTDbits.RD6) return 4;
  4703  000EE2  AE83               	btfss	3971,7,c	;volatile
  4704  000EE4  D005               	goto	l279
  4705  000EE6  0E00               	movlw	0
  4706  000EE8  6E13               	movwf	?_KEYPAD_Read+1,c
  4707  000EEA  0E01               	movlw	1
  4708  000EEC  D080               	goto	L15
  4709  000EEE  D089               	goto	l280
  4710  000EF0                     l279:
  4711  000EF0  AC83               	btfss	3971,6,c	;volatile
  4712  000EF2  D005               	goto	l281
  4713  000EF4  0E00               	movlw	0
  4714  000EF6  6E13               	movwf	?_KEYPAD_Read+1,c
  4715  000EF8  0E04               	movlw	4
  4716  000EFA  D079               	goto	L15
  4717  000EFC  D082               	goto	l280
  4718  000EFE                     l281:
  4719                           
  4720                           ;pic18f4520_keypad.c: 53: if(PORTDbits.RD5) return 7; if(PORTDbits.RD4) return 14;
  4721  000EFE  AA83               	btfss	3971,5,c	;volatile
  4722  000F00  D005               	goto	l282
  4723  000F02  0E00               	movlw	0
  4724  000F04  6E13               	movwf	?_KEYPAD_Read+1,c
  4725  000F06  0E07               	movlw	7
  4726  000F08  D072               	goto	L15
  4727  000F0A  D07B               	goto	l280
  4728  000F0C                     l282:
  4729  000F0C  A883               	btfss	3971,4,c	;volatile
  4730  000F0E  D005               	goto	l2360
  4731  000F10  0E00               	movlw	0
  4732  000F12  6E13               	movwf	?_KEYPAD_Read+1,c
  4733  000F14  0E0E               	movlw	14
  4734  000F16  D06B               	goto	L15
  4735  000F18  D074               	goto	l280
  4736  000F1A                     l2360:
  4737                           
  4738                           ;pic18f4520_keypad.c: 54: _delay((unsigned long)((10)*(32000000/4000000.0)));
  4739  000F1A  0E1A               	movlw	26
  4740  000F1C                     u3197:
  4741  000F1C  2EE8               	decfsz	wreg,f,c
  4742  000F1E  D7FE               	goto	u3197
  4743  000F20  D000               	nop2		;nop
  4744                           
  4745                           ;pic18f4520_keypad.c: 56: PORTDbits.RD3=0; PORTDbits.RD2=1;
  4746  000F22  9683               	bcf	3971,3,c	;volatile
  4747  000F24  8483               	bsf	3971,2,c	;volatile
  4748                           
  4749                           ;pic18f4520_keypad.c: 57: PORTDbits.RD1=0; PORTDbits.RD0=0;
  4750  000F26  9283               	bcf	3971,1,c	;volatile
  4751  000F28  9083               	bcf	3971,0,c	;volatile
  4752                           
  4753                           ;pic18f4520_keypad.c: 58: if(PORTDbits.RD7) return 2; if(PORTDbits.RD6) return 5;
  4754  000F2A  AE83               	btfss	3971,7,c	;volatile
  4755  000F2C  D005               	goto	l284
  4756  000F2E  0E00               	movlw	0
  4757  000F30  6E13               	movwf	?_KEYPAD_Read+1,c
  4758  000F32  0E02               	movlw	2
  4759  000F34  D05C               	goto	L15
  4760  000F36  D065               	goto	l280
  4761  000F38                     l284:
  4762  000F38  AC83               	btfss	3971,6,c	;volatile
  4763  000F3A  D005               	goto	l285
  4764  000F3C  0E00               	movlw	0
  4765  000F3E  6E13               	movwf	?_KEYPAD_Read+1,c
  4766  000F40  0E05               	movlw	5
  4767  000F42  D055               	goto	L15
  4768  000F44  D05E               	goto	l280
  4769  000F46                     l285:
  4770                           
  4771                           ;pic18f4520_keypad.c: 59: if(PORTDbits.RD5) return 8; if(PORTDbits.RD4) return 0;
  4772  000F46  AA83               	btfss	3971,5,c	;volatile
  4773  000F48  D005               	goto	l286
  4774  000F4A  0E00               	movlw	0
  4775  000F4C  6E13               	movwf	?_KEYPAD_Read+1,c
  4776  000F4E  0E08               	movlw	8
  4777  000F50  D04E               	goto	L15
  4778  000F52  D057               	goto	l280
  4779  000F54                     l286:
  4780  000F54  A883               	btfss	3971,4,c	;volatile
  4781  000F56  D005               	goto	l2388
  4782  000F58  0E00               	movlw	0
  4783  000F5A  6E13               	movwf	?_KEYPAD_Read+1,c
  4784  000F5C  0E00               	movlw	0
  4785  000F5E  D047               	goto	L15
  4786  000F60  D050               	goto	l280
  4787  000F62                     l2388:
  4788                           
  4789                           ;pic18f4520_keypad.c: 60: _delay((unsigned long)((10)*(32000000/4000000.0)));
  4790  000F62  0E1A               	movlw	26
  4791  000F64                     u3207:
  4792  000F64  2EE8               	decfsz	wreg,f,c
  4793  000F66  D7FE               	goto	u3207
  4794  000F68  D000               	nop2		;nop
  4795                           
  4796                           ;pic18f4520_keypad.c: 62: PORTDbits.RD3=0; PORTDbits.RD2=0;
  4797  000F6A  9683               	bcf	3971,3,c	;volatile
  4798  000F6C  9483               	bcf	3971,2,c	;volatile
  4799                           
  4800                           ;pic18f4520_keypad.c: 63: PORTDbits.RD1=1; PORTDbits.RD0=0;
  4801  000F6E  8283               	bsf	3971,1,c	;volatile
  4802  000F70  9083               	bcf	3971,0,c	;volatile
  4803                           
  4804                           ;pic18f4520_keypad.c: 64: if(PORTDbits.RD7) return 3; if(PORTDbits.RD6) return 6;
  4805  000F72  AE83               	btfss	3971,7,c	;volatile
  4806  000F74  D005               	goto	l288
  4807  000F76  0E00               	movlw	0
  4808  000F78  6E13               	movwf	?_KEYPAD_Read+1,c
  4809  000F7A  0E03               	movlw	3
  4810  000F7C  D038               	goto	L15
  4811  000F7E  D041               	goto	l280
  4812  000F80                     l288:
  4813  000F80  AC83               	btfss	3971,6,c	;volatile
  4814  000F82  D005               	goto	l289
  4815  000F84  0E00               	movlw	0
  4816  000F86  6E13               	movwf	?_KEYPAD_Read+1,c
  4817  000F88  0E06               	movlw	6
  4818  000F8A  D031               	goto	L15
  4819  000F8C  D03A               	goto	l280
  4820  000F8E                     l289:
  4821                           
  4822                           ;pic18f4520_keypad.c: 65: if(PORTDbits.RD5) return 9; if(PORTDbits.RD4) return 15;
  4823  000F8E  AA83               	btfss	3971,5,c	;volatile
  4824  000F90  D005               	goto	l290
  4825  000F92  0E00               	movlw	0
  4826  000F94  6E13               	movwf	?_KEYPAD_Read+1,c
  4827  000F96  0E09               	movlw	9
  4828  000F98  D02A               	goto	L15
  4829  000F9A  D033               	goto	l280
  4830  000F9C                     l290:
  4831  000F9C  A883               	btfss	3971,4,c	;volatile
  4832  000F9E  D005               	goto	l2416
  4833  000FA0  0E00               	movlw	0
  4834  000FA2  6E13               	movwf	?_KEYPAD_Read+1,c
  4835  000FA4  0E0F               	movlw	15
  4836  000FA6  D023               	goto	L15
  4837  000FA8  D02C               	goto	l280
  4838  000FAA                     l2416:
  4839                           
  4840                           ;pic18f4520_keypad.c: 66: _delay((unsigned long)((10)*(32000000/4000000.0)));
  4841  000FAA  0E1A               	movlw	26
  4842  000FAC                     u3217:
  4843  000FAC  2EE8               	decfsz	wreg,f,c
  4844  000FAE  D7FE               	goto	u3217
  4845  000FB0  D000               	nop2		;nop
  4846                           
  4847                           ;pic18f4520_keypad.c: 68: PORTDbits.RD3=0; PORTDbits.RD2=0;
  4848  000FB2  9683               	bcf	3971,3,c	;volatile
  4849  000FB4  9483               	bcf	3971,2,c	;volatile
  4850                           
  4851                           ;pic18f4520_keypad.c: 69: PORTDbits.RD1=0; PORTDbits.RD0=1;
  4852  000FB6  9283               	bcf	3971,1,c	;volatile
  4853  000FB8  8083               	bsf	3971,0,c	;volatile
  4854                           
  4855                           ;pic18f4520_keypad.c: 70: if(PORTDbits.RD7) return 10; if(PORTDbits.RD6) return 11;
  4856  000FBA  AE83               	btfss	3971,7,c	;volatile
  4857  000FBC  D005               	goto	l292
  4858  000FBE  0E00               	movlw	0
  4859  000FC0  6E13               	movwf	?_KEYPAD_Read+1,c
  4860  000FC2  0E0A               	movlw	10
  4861  000FC4  D014               	goto	L15
  4862  000FC6  D01D               	goto	l280
  4863  000FC8                     l292:
  4864  000FC8  AC83               	btfss	3971,6,c	;volatile
  4865  000FCA  D005               	goto	l293
  4866  000FCC  0E00               	movlw	0
  4867  000FCE  6E13               	movwf	?_KEYPAD_Read+1,c
  4868  000FD0  0E0B               	movlw	11
  4869  000FD2  D00D               	goto	L15
  4870  000FD4  D016               	goto	l280
  4871  000FD6                     l293:
  4872                           
  4873                           ;pic18f4520_keypad.c: 71: if(PORTDbits.RD5) return 12; if(PORTDbits.RD4) return 13;
  4874  000FD6  AA83               	btfss	3971,5,c	;volatile
  4875  000FD8  D005               	goto	l294
  4876  000FDA  0E00               	movlw	0
  4877  000FDC  6E13               	movwf	?_KEYPAD_Read+1,c
  4878  000FDE  0E0C               	movlw	12
  4879  000FE0  D006               	goto	L15
  4880  000FE2  D00F               	goto	l280
  4881  000FE4                     l294:
  4882  000FE4  A883               	btfss	3971,4,c	;volatile
  4883  000FE6  D005               	goto	l2444
  4884  000FE8  0E00               	movlw	0
  4885  000FEA  6E13               	movwf	?_KEYPAD_Read+1,c
  4886  000FEC  0E0D               	movlw	13
  4887  000FEE                     L15:
  4888  000FEE  6E12               	movwf	?_KEYPAD_Read,c
  4889  000FF0  D008               	goto	l280
  4890  000FF2                     l2444:
  4891                           
  4892                           ;pic18f4520_keypad.c: 72: _delay((unsigned long)((10)*(32000000/4000000.0)));
  4893  000FF2  0E1A               	movlw	26
  4894  000FF4                     u3227:
  4895  000FF4  2EE8               	decfsz	wreg,f,c
  4896  000FF6  D7FE               	goto	u3227
  4897  000FF8  D000               	nop2		;nop
  4898                           
  4899                           ;pic18f4520_keypad.c: 74: return 0xFF;
  4900  000FFA  0E00               	movlw	0
  4901  000FFC  6E13               	movwf	?_KEYPAD_Read+1,c
  4902  000FFE  6812               	setf	?_KEYPAD_Read,c
  4903  001000  D000               	goto	l280
  4904  001002                     l280:
  4905  001002  0012               	return		;funcret
  4906  001004                     __end_of_KEYPAD_Read:
  4907                           	opt stack 0
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           intcon2	equ	0xFF1
  4916                           intcon3	equ	0xFF0
  4917                           postinc0	equ	0xFEE
  4918                           wreg	equ	0xFE8
  4919                           postdec1	equ	0xFE5
  4920                           fsr1l	equ	0xFE1
  4921                           indf2	equ	0xFDF
  4922                           postinc2	equ	0xFDE
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function _KEYPAD_KeytoASCII *****************
  4929 ;; Defined at:
  4930 ;;		line 77 in file "../Libraries/pic18f4520_keypad.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  KeyNumber       2   17[COMRAM] int 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      unsigned char 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4944 ;;      Params:         2       0       0       0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0
  4947 ;;      Totals:         2       0       0       0       0       0       0
  4948 ;;Total ram usage:        2 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text18
  4959  00146A                     __ptext18:
  4960                           	opt stack 0
  4961  00146A                     _KEYPAD_KeytoASCII:
  4962                           	opt stack 29
  4963                           
  4964                           ;pic18f4520_keypad.c: 80: if (KeyNumber < 10) return KeyNumber + 0x30;
  4965                           
  4966                           ;incstack = 0
  4967  00146A  BE13               	btfsc	KEYPAD_KeytoASCII@KeyNumber+1,7,c
  4968  00146C  D006               	goto	l2452
  4969  00146E  5013               	movf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  4970  001470  E107               	bnz	l2456
  4971  001472  0E0A               	movlw	10
  4972  001474  5C12               	subwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  4973  001476  B0D8               	btfsc	status,0,c
  4974  001478  D003               	goto	l2456
  4975  00147A                     l2452:
  4976  00147A  5012               	movf	KEYPAD_KeytoASCII@KeyNumber,w,c
  4977  00147C  0F30               	addlw	48
  4978  00147E  D02C               	goto	l299
  4979  001480                     l2456:
  4980                           
  4981                           ;pic18f4520_keypad.c: 82: if (KeyNumber == 10) return 'A';
  4982  001480  0E0A               	movlw	10
  4983  001482  1812               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  4984  001484  1013               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  4985  001486  A4D8               	btfss	status,2,c
  4986  001488  D002               	goto	l2462
  4987  00148A  0E41               	movlw	65
  4988  00148C  D025               	goto	l299
  4989  00148E                     l2462:
  4990                           
  4991                           ;pic18f4520_keypad.c: 83: if (KeyNumber == 11) return 'B';
  4992  00148E  0E0B               	movlw	11
  4993  001490  1812               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  4994  001492  1013               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  4995  001494  A4D8               	btfss	status,2,c
  4996  001496  D002               	goto	l2468
  4997  001498  0E42               	movlw	66
  4998  00149A  D01E               	goto	l299
  4999  00149C                     l2468:
  5000                           
  5001                           ;pic18f4520_keypad.c: 84: if (KeyNumber == 12) return 'C';
  5002  00149C  0E0C               	movlw	12
  5003  00149E  1812               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  5004  0014A0  1013               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  5005  0014A2  A4D8               	btfss	status,2,c
  5006  0014A4  D002               	goto	l2474
  5007  0014A6  0E43               	movlw	67
  5008  0014A8  D017               	goto	l299
  5009  0014AA                     l2474:
  5010                           
  5011                           ;pic18f4520_keypad.c: 85: if (KeyNumber == 13) return 'D';
  5012  0014AA  0E0D               	movlw	13
  5013  0014AC  1812               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  5014  0014AE  1013               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  5015  0014B0  A4D8               	btfss	status,2,c
  5016  0014B2  D002               	goto	l2480
  5017  0014B4  0E44               	movlw	68
  5018  0014B6  D010               	goto	l299
  5019  0014B8                     l2480:
  5020                           
  5021                           ;pic18f4520_keypad.c: 86: if (KeyNumber == 14) return '*';
  5022  0014B8  0E0E               	movlw	14
  5023  0014BA  1812               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  5024  0014BC  1013               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  5025  0014BE  A4D8               	btfss	status,2,c
  5026  0014C0  D002               	goto	l2486
  5027  0014C2  0E2A               	movlw	42
  5028  0014C4  D009               	goto	l299
  5029  0014C6                     l2486:
  5030                           
  5031                           ;pic18f4520_keypad.c: 87: if (KeyNumber == 15) return '#';
  5032  0014C6  0E0F               	movlw	15
  5033  0014C8  1812               	xorwf	KEYPAD_KeytoASCII@KeyNumber,w,c
  5034  0014CA  1013               	iorwf	KEYPAD_KeytoASCII@KeyNumber+1,w,c
  5035  0014CC  A4D8               	btfss	status,2,c
  5036  0014CE  D002               	goto	l2492
  5037  0014D0  0E23               	movlw	35
  5038  0014D2  D002               	goto	l299
  5039  0014D4                     l2492:
  5040                           
  5041                           ;pic18f4520_keypad.c: 88: return 0;
  5042  0014D4  0E00               	movlw	0
  5043  0014D6  D000               	goto	l299
  5044  0014D8                     l299:
  5045  0014D8  0012               	return		;funcret
  5046  0014DA                     __end_of_KEYPAD_KeytoASCII:
  5047                           	opt stack 0
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           intcon2	equ	0xFF1
  5056                           intcon3	equ	0xFF0
  5057                           postinc0	equ	0xFEE
  5058                           wreg	equ	0xFE8
  5059                           postdec1	equ	0xFE5
  5060                           fsr1l	equ	0xFE1
  5061                           indf2	equ	0xFDF
  5062                           postinc2	equ	0xFDE
  5063                           postdec2	equ	0xFDD
  5064                           fsr2h	equ	0xFDA
  5065                           fsr2l	equ	0xFD9
  5066                           status	equ	0xFD8
  5067                           
  5068 ;; *************** function _KEYPAD_Init *****************
  5069 ;; Defined at:
  5070 ;;		line 23 in file "../Libraries/pic18f4520_keypad.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;		None               void
  5077 ;; Registers used:
  5078 ;;		None
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5084 ;;      Params:         0       0       0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0
  5087 ;;      Totals:         0       0       0       0       0       0       0
  5088 ;;Total ram usage:        0 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text19
  5099  00182C                     __ptext19:
  5100                           	opt stack 0
  5101  00182C                     _KEYPAD_Init:
  5102                           	opt stack 29
  5103                           
  5104                           ;pic18f4520_keypad.c: 26: TRISDbits.RD7 = 1;
  5105                           
  5106                           ;incstack = 0
  5107  00182C  8E95               	bsf	3989,7,c	;volatile
  5108                           
  5109                           ;pic18f4520_keypad.c: 27: TRISDbits.RD6 = 1;
  5110  00182E  8C95               	bsf	3989,6,c	;volatile
  5111                           
  5112                           ;pic18f4520_keypad.c: 28: TRISDbits.RD5 = 1;
  5113  001830  8A95               	bsf	3989,5,c	;volatile
  5114                           
  5115                           ;pic18f4520_keypad.c: 29: TRISDbits.RD4 = 1;
  5116  001832  8895               	bsf	3989,4,c	;volatile
  5117                           
  5118                           ;pic18f4520_keypad.c: 31: TRISDbits.RD3 = 0;
  5119  001834  9695               	bcf	3989,3,c	;volatile
  5120                           
  5121                           ;pic18f4520_keypad.c: 32: TRISDbits.RD2 = 0;
  5122  001836  9495               	bcf	3989,2,c	;volatile
  5123                           
  5124                           ;pic18f4520_keypad.c: 33: TRISDbits.RD1 = 0;
  5125  001838  9295               	bcf	3989,1,c	;volatile
  5126                           
  5127                           ;pic18f4520_keypad.c: 34: TRISDbits.RD0 = 0;
  5128  00183A  9095               	bcf	3989,0,c	;volatile
  5129                           
  5130                           ;pic18f4520_keypad.c: 36: PORTDbits.RD7 = 0;
  5131  00183C  9E83               	bcf	3971,7,c	;volatile
  5132                           
  5133                           ;pic18f4520_keypad.c: 37: PORTDbits.RD6 = 0;
  5134  00183E  9C83               	bcf	3971,6,c	;volatile
  5135                           
  5136                           ;pic18f4520_keypad.c: 38: PORTDbits.RD5 = 0;
  5137  001840  9A83               	bcf	3971,5,c	;volatile
  5138                           
  5139                           ;pic18f4520_keypad.c: 39: PORTDbits.RD4 = 0;
  5140  001842  9883               	bcf	3971,4,c	;volatile
  5141                           
  5142                           ;pic18f4520_keypad.c: 40: PORTDbits.RD3 = 0;
  5143  001844  9683               	bcf	3971,3,c	;volatile
  5144                           
  5145                           ;pic18f4520_keypad.c: 41: PORTDbits.RD2 = 0;
  5146  001846  9483               	bcf	3971,2,c	;volatile
  5147                           
  5148                           ;pic18f4520_keypad.c: 42: PORTDbits.RD1 = 0;
  5149  001848  9283               	bcf	3971,1,c	;volatile
  5150                           
  5151                           ;pic18f4520_keypad.c: 43: PORTDbits.RD0 = 0;
  5152  00184A  9083               	bcf	3971,0,c	;volatile
  5153  00184C  0012               	return		;funcret
  5154  00184E                     __end_of_KEYPAD_Init:
  5155                           	opt stack 0
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           prodh	equ	0xFF4
  5161                           prodl	equ	0xFF3
  5162                           intcon	equ	0xFF2
  5163                           intcon2	equ	0xFF1
  5164                           intcon3	equ	0xFF0
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           postdec1	equ	0xFE5
  5168                           fsr1l	equ	0xFE1
  5169                           indf2	equ	0xFDF
  5170                           postinc2	equ	0xFDE
  5171                           postdec2	equ	0xFDD
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function _HD44780_Puts *****************
  5177 ;; Defined at:
  5178 ;;		line 171 in file "../Libraries/pic18f4520_hd44780.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  x               1    wreg     unsigned char 
  5181 ;;  y               1   31[COMRAM] unsigned char 
  5182 ;;  str             2   32[COMRAM] PTR unsigned char 
  5183 ;;		 -> STR_27(17), STR_26(11), STR_25(17), STR_24(11), 
  5184 ;;		 -> STR_22(17), STR_21(14), STR_20(17), STR_19(14), 
  5185 ;;		 -> STR_18(17), STR_17(12), STR_16(17), STR_15(12), 
  5186 ;;		 -> STR_14(17), STR_13(11), STR_12(17), STR_11(11), 
  5187 ;;		 -> STR_10(6), STR_9(15), STR_8(5), STR_7(15), 
  5188 ;;		 -> STR_6(17), STR_5(11), STR_4(17), STR_3(11), 
  5189 ;;		 -> STR_2(17), STR_1(11), 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  x               1   34[COMRAM] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;		None               void
  5194 ;; Registers used:
  5195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5201 ;;      Params:         3       0       0       0       0       0       0
  5202 ;;      Locals:         1       0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0
  5204 ;;      Totals:         4       0       0       0       0       0       0
  5205 ;;Total ram usage:        4 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    5
  5208 ;; This function calls:
  5209 ;;		_HD44780_CursorSet
  5210 ;;		_HD44780_Data
  5211 ;; This function is called by:
  5212 ;;		_main
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text20
  5217  00134E                     __ptext20:
  5218                           	opt stack 0
  5219  00134E                     _HD44780_Puts:
  5220                           	opt stack 25
  5221                           
  5222                           ;incstack = 0
  5223                           ;HD44780_Puts@x stored from wreg
  5224  00134E  6E23               	movwf	HD44780_Puts@x,c
  5225                           
  5226                           ;pic18f4520_hd44780.c: 172: HD44780_CursorSet(x, y);
  5227  001350  C020  F01A         	movff	HD44780_Puts@y,HD44780_CursorSet@row
  5228  001354  5023               	movf	HD44780_Puts@x,w,c
  5229  001356  EC44  F00B         	call	_HD44780_CursorSet
  5230                           
  5231                           ;pic18f4520_hd44780.c: 173: while (*str) {
  5232  00135A  D039               	goto	l2306
  5233  00135C                     l2282:
  5234                           
  5235                           ;pic18f4520_hd44780.c: 174: if (HD44780_Opts.currentX >= HD44780_Opts.Cols) {
  5236  00135C  5040               	movf	_HD44780_Opts+4,w,c
  5237  00135E  5C41               	subwf	_HD44780_Opts+5,w,c
  5238  001360  A0D8               	btfss	status,0,c
  5239  001362  D009               	goto	l2290
  5240                           
  5241                           ;pic18f4520_hd44780.c: 175: HD44780_Opts.currentX = 0;
  5242  001364  0E00               	movlw	0
  5243  001366  6E41               	movwf	_HD44780_Opts+5,c
  5244                           
  5245                           ;pic18f4520_hd44780.c: 176: HD44780_Opts.currentY++;
  5246  001368  2A42               	incf	_HD44780_Opts+6,f,c
  5247                           
  5248                           ;pic18f4520_hd44780.c: 177: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.curren
      +                          tY);
  5249  00136A  C042  F01A         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  5250  00136E  5041               	movf	_HD44780_Opts+5,w,c
  5251  001370  EC44  F00B         	call	_HD44780_CursorSet
  5252  001374  D000               	goto	l2290
  5253  001376                     l2290:
  5254                           
  5255                           ;pic18f4520_hd44780.c: 178: }
  5256                           ;pic18f4520_hd44780.c: 179: if (*str == '\n') {
  5257  001376  C021  FFF6         	movff	HD44780_Puts@str,tblptrl
  5258  00137A  C022  FFF7         	movff	HD44780_Puts@str+1,tblptrh
  5259  00137E                     	if	0	;tblptru may be non-zero
  5260  00137E                     	endif
  5261  00137E                     	if	0	;tblptru may be non-zero
  5262  00137E                     	endif
  5263  00137E  0008               	tblrd		*
  5264  001380  50F5               	movf	tablat,w,c
  5265  001382  0A0A               	xorlw	10
  5266  001384  A4D8               	btfss	status,2,c
  5267  001386  D007               	goto	l2296
  5268                           
  5269                           ;pic18f4520_hd44780.c: 180: HD44780_Opts.currentY++;
  5270  001388  2A42               	incf	_HD44780_Opts+6,f,c
  5271                           
  5272                           ;pic18f4520_hd44780.c: 181: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.curren
      +                          tY);
  5273  00138A  C042  F01A         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  5274  00138E  5041               	movf	_HD44780_Opts+5,w,c
  5275  001390  EC44  F00B         	call	_HD44780_CursorSet
  5276                           
  5277                           ;pic18f4520_hd44780.c: 182: } else if (*str == '\r') {
  5278  001394  D019               	goto	l2304
  5279  001396                     l2296:
  5280  001396  C021  FFF6         	movff	HD44780_Puts@str,tblptrl
  5281  00139A  C022  FFF7         	movff	HD44780_Puts@str+1,tblptrh
  5282  00139E                     	if	0	;tblptru may be non-zero
  5283  00139E                     	endif
  5284  00139E                     	if	0	;tblptru may be non-zero
  5285  00139E                     	endif
  5286  00139E  0008               	tblrd		*
  5287  0013A0  50F5               	movf	tablat,w,c
  5288  0013A2  0A0D               	xorlw	13
  5289  0013A4  A4D8               	btfss	status,2,c
  5290  0013A6  D006               	goto	l2300
  5291                           
  5292                           ;pic18f4520_hd44780.c: 183: HD44780_CursorSet(0, HD44780_Opts.currentY);
  5293  0013A8  C042  F01A         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  5294  0013AC  0E00               	movlw	0
  5295  0013AE  EC44  F00B         	call	_HD44780_CursorSet
  5296                           
  5297                           ;pic18f4520_hd44780.c: 184: } else {
  5298  0013B2  D00A               	goto	l2304
  5299  0013B4                     l2300:
  5300                           
  5301                           ;pic18f4520_hd44780.c: 185: HD44780_Data(*str);
  5302  0013B4  C021  FFF6         	movff	HD44780_Puts@str,tblptrl
  5303  0013B8  C022  FFF7         	movff	HD44780_Puts@str+1,tblptrh
  5304  0013BC                     	if	0	;tblptru may be non-zero
  5305  0013BC                     	endif
  5306  0013BC                     	if	0	;tblptru may be non-zero
  5307  0013BC                     	endif
  5308  0013BC  0008               	tblrd		*
  5309  0013BE  50F5               	movf	tablat,w,c
  5310  0013C0  EC44  F00C         	call	_HD44780_Data
  5311                           
  5312                           ;pic18f4520_hd44780.c: 186: HD44780_Opts.currentX++;
  5313  0013C4  2A41               	incf	_HD44780_Opts+5,f,c
  5314  0013C6  D000               	goto	l2304
  5315  0013C8                     l2304:
  5316                           
  5317                           ;pic18f4520_hd44780.c: 187: }
  5318                           ;pic18f4520_hd44780.c: 188: str++;
  5319  0013C8  4A21               	infsnz	HD44780_Puts@str,f,c
  5320  0013CA  2A22               	incf	HD44780_Puts@str+1,f,c
  5321  0013CC  D000               	goto	l2306
  5322  0013CE                     l2306:
  5323  0013CE  C021  FFF6         	movff	HD44780_Puts@str,tblptrl
  5324  0013D2  C022  FFF7         	movff	HD44780_Puts@str+1,tblptrh
  5325  0013D6                     	if	0	;tblptru may be non-zero
  5326  0013D6                     	endif
  5327  0013D6                     	if	0	;tblptru may be non-zero
  5328  0013D6                     	endif
  5329  0013D6  0008               	tblrd		*
  5330  0013D8  50F5               	movf	tablat,w,c
  5331  0013DA  0900               	iorlw	0
  5332  0013DC  A4D8               	btfss	status,2,c
  5333  0013DE  D7BE               	goto	l2282
  5334  0013E0  0012               	return		;funcret
  5335  0013E2                     __end_of_HD44780_Puts:
  5336                           	opt stack 0
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           intcon2	equ	0xFF1
  5345                           intcon3	equ	0xFF0
  5346                           postinc0	equ	0xFEE
  5347                           wreg	equ	0xFE8
  5348                           postdec1	equ	0xFE5
  5349                           fsr1l	equ	0xFE1
  5350                           indf2	equ	0xFDF
  5351                           postinc2	equ	0xFDE
  5352                           postdec2	equ	0xFDD
  5353                           fsr2h	equ	0xFDA
  5354                           fsr2l	equ	0xFD9
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function _HD44780_Data *****************
  5358 ;; Defined at:
  5359 ;;		line 273 in file "../Libraries/pic18f4520_hd44780.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  data            1    wreg     unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  data            1   24[COMRAM] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5373 ;;      Params:         0       0       0       0       0       0       0
  5374 ;;      Locals:         1       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0
  5376 ;;      Totals:         1       0       0       0       0       0       0
  5377 ;;Total ram usage:        1 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    3
  5380 ;; This function calls:
  5381 ;;		_HD44780_Cmd4bit
  5382 ;; This function is called by:
  5383 ;;		_putch
  5384 ;;		_HD44780_Puts
  5385 ;;		_HD44780_CreateChar
  5386 ;;		_HD44780_PutCustom
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text21
  5391  001888                     __ptext21:
  5392                           	opt stack 0
  5393  001888                     _HD44780_Data:
  5394                           	opt stack 25
  5395                           
  5396                           ;incstack = 0
  5397                           ;HD44780_Data@data stored from wreg
  5398  001888  6E19               	movwf	HD44780_Data@data,c
  5399                           
  5400                           ;pic18f4520_hd44780.c: 275: PORTBbits.RB2 = 1;
  5401  00188A  8481               	bsf	3969,2,c	;volatile
  5402                           
  5403                           ;pic18f4520_hd44780.c: 278: HD44780_Cmd4bit(data >> 4);
  5404  00188C  3819               	swapf	HD44780_Data@data,w,c
  5405  00188E  0B0F               	andlw	15
  5406  001890  ECF1  F009         	call	_HD44780_Cmd4bit
  5407                           
  5408                           ;pic18f4520_hd44780.c: 280: HD44780_Cmd4bit(data & 0x0F);
  5409  001894  5019               	movf	HD44780_Data@data,w,c
  5410  001896  0B0F               	andlw	15
  5411  001898  ECF1  F009         	call	_HD44780_Cmd4bit
  5412  00189C  0012               	return		;funcret
  5413  00189E                     __end_of_HD44780_Data:
  5414                           	opt stack 0
  5415                           tblptru	equ	0xFF8
  5416                           tblptrh	equ	0xFF7
  5417                           tblptrl	equ	0xFF6
  5418                           tablat	equ	0xFF5
  5419                           prodh	equ	0xFF4
  5420                           prodl	equ	0xFF3
  5421                           intcon	equ	0xFF2
  5422                           intcon2	equ	0xFF1
  5423                           intcon3	equ	0xFF0
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           postdec1	equ	0xFE5
  5427                           fsr1l	equ	0xFE1
  5428                           indf2	equ	0xFDF
  5429                           postinc2	equ	0xFDE
  5430                           postdec2	equ	0xFDD
  5431                           fsr2h	equ	0xFDA
  5432                           fsr2l	equ	0xFD9
  5433                           status	equ	0xFD8
  5434                           
  5435 ;; *************** function _HD44780_CursorSet *****************
  5436 ;; Defined at:
  5437 ;;		line 246 in file "../Libraries/pic18f4520_hd44780.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  col             1    wreg     unsigned char 
  5440 ;;  row             1   25[COMRAM] unsigned char 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  col             1   30[COMRAM] unsigned char 
  5443 ;;  row_offsets     4   26[COMRAM] unsigned char [4]
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5453 ;;      Params:         1       0       0       0       0       0       0
  5454 ;;      Locals:         5       0       0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0
  5456 ;;      Totals:         6       0       0       0       0       0       0
  5457 ;;Total ram usage:        6 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    4
  5460 ;; This function calls:
  5461 ;;		_HD44780_Cmd
  5462 ;; This function is called by:
  5463 ;;		_main
  5464 ;;		_putch
  5465 ;;		_HD44780_Puts
  5466 ;;		_HD44780_PutCustom
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text22
  5471  001688                     __ptext22:
  5472                           	opt stack 0
  5473  001688                     _HD44780_CursorSet:
  5474                           	opt stack 24
  5475                           
  5476                           ;incstack = 0
  5477                           ;HD44780_CursorSet@col stored from wreg
  5478  001688  6E1F               	movwf	HD44780_CursorSet@col,c
  5479                           
  5480                           ;pic18f4520_hd44780.c: 247: char row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  5481  00168A  C059  F01B         	movff	HD44780_CursorSet@F4400,HD44780_CursorSet@row_offsets
  5482  00168E  C05A  F01C         	movff	HD44780_CursorSet@F4400+1,HD44780_CursorSet@row_offsets+1
  5483  001692  C05B  F01D         	movff	HD44780_CursorSet@F4400+2,HD44780_CursorSet@row_offsets+2
  5484  001696  C05C  F01E         	movff	HD44780_CursorSet@F4400+3,HD44780_CursorSet@row_offsets+3
  5485                           
  5486                           ;pic18f4520_hd44780.c: 250: if (row >= HD44780_Opts.Rows) {
  5487  00169A  503F               	movf	_HD44780_Opts+3,w,c
  5488  00169C  5C1A               	subwf	HD44780_CursorSet@row,w,c
  5489  00169E  A0D8               	btfss	status,0,c
  5490  0016A0  D003               	goto	l2088
  5491                           
  5492                           ;pic18f4520_hd44780.c: 251: row = 0;
  5493  0016A2  0E00               	movlw	0
  5494  0016A4  6E1A               	movwf	HD44780_CursorSet@row,c
  5495  0016A6  D000               	goto	l2088
  5496  0016A8                     l2088:
  5497                           
  5498                           ;pic18f4520_hd44780.c: 252: }
  5499                           ;pic18f4520_hd44780.c: 255: HD44780_Opts.currentX = col;
  5500  0016A8  C01F  F041         	movff	HD44780_CursorSet@col,_HD44780_Opts+5
  5501                           
  5502                           ;pic18f4520_hd44780.c: 256: HD44780_Opts.currentY = row;
  5503  0016AC  C01A  F042         	movff	HD44780_CursorSet@row,_HD44780_Opts+6
  5504                           
  5505                           ;pic18f4520_hd44780.c: 259: HD44780_Cmd(0x80 | (col + row_offsets[row]));
  5506  0016B0  501A               	movf	HD44780_CursorSet@row,w,c
  5507  0016B2  0D01               	mullw	1
  5508  0016B4  0E1B               	movlw	low HD44780_CursorSet@row_offsets
  5509  0016B6  24F3               	addwf	prodl,w,c
  5510  0016B8  6ED9               	movwf	fsr2l,c
  5511  0016BA  0E00               	movlw	high HD44780_CursorSet@row_offsets
  5512  0016BC  20F4               	addwfc	prodh,w,c
  5513  0016BE  6EDA               	movwf	fsr2h,c
  5514  0016C0  50DF               	movf	indf2,w,c
  5515  0016C2  241F               	addwf	HD44780_CursorSet@col,w,c
  5516  0016C4  0980               	iorlw	128
  5517  0016C6  EC4F  F00C         	call	_HD44780_Cmd
  5518  0016CA  0012               	return		;funcret
  5519  0016CC                     __end_of_HD44780_CursorSet:
  5520                           	opt stack 0
  5521                           tblptru	equ	0xFF8
  5522                           tblptrh	equ	0xFF7
  5523                           tblptrl	equ	0xFF6
  5524                           tablat	equ	0xFF5
  5525                           prodh	equ	0xFF4
  5526                           prodl	equ	0xFF3
  5527                           intcon	equ	0xFF2
  5528                           intcon2	equ	0xFF1
  5529                           intcon3	equ	0xFF0
  5530                           postinc0	equ	0xFEE
  5531                           wreg	equ	0xFE8
  5532                           postdec1	equ	0xFE5
  5533                           fsr1l	equ	0xFE1
  5534                           indf2	equ	0xFDF
  5535                           postinc2	equ	0xFDE
  5536                           postdec2	equ	0xFDD
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _HD44780_Init *****************
  5542 ;; Defined at:
  5543 ;;		line 111 in file "../Libraries/pic18f4520_hd44780.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  cols            1    wreg     unsigned char 
  5546 ;;  rows            1   25[COMRAM] unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  cols            1   26[COMRAM] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;		None               void
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5558 ;;      Params:         1       0       0       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0
  5561 ;;      Totals:         2       0       0       0       0       0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    5
  5565 ;; This function calls:
  5566 ;;		_HD44780_Clear
  5567 ;;		_HD44780_Cmd
  5568 ;;		_HD44780_Cmd4bit
  5569 ;;		_HD44780_Delay
  5570 ;;		_HD44780_DisplayOn
  5571 ;;		_HD44780_InitPins
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text23
  5578  0012A8                     __ptext23:
  5579                           	opt stack 0
  5580  0012A8                     _HD44780_Init:
  5581                           	opt stack 25
  5582                           
  5583                           ;incstack = 0
  5584                           ;HD44780_Init@cols stored from wreg
  5585  0012A8  6E1B               	movwf	HD44780_Init@cols,c
  5586                           
  5587                           ;pic18f4520_hd44780.c: 114: HD44780_InitPins();
  5588  0012AA  EC37  F00C         	call	_HD44780_InitPins	;wreg free
  5589                           
  5590                           ;pic18f4520_hd44780.c: 117: HD44780_Delay(45000);
  5591  0012AE  0EAF               	movlw	175
  5592  0012B0  6E13               	movwf	HD44780_Delay@us+1,c
  5593  0012B2  0EC8               	movlw	200
  5594  0012B4  6E12               	movwf	HD44780_Delay@us,c
  5595  0012B6  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5596                           
  5597                           ;pic18f4520_hd44780.c: 120: HD44780_Opts.Rows = rows;
  5598  0012BA  C01A  F03F         	movff	HD44780_Init@rows,_HD44780_Opts+3
  5599                           
  5600                           ;pic18f4520_hd44780.c: 121: HD44780_Opts.Cols = cols;
  5601  0012BE  C01B  F040         	movff	HD44780_Init@cols,_HD44780_Opts+4
  5602                           
  5603                           ;pic18f4520_hd44780.c: 124: HD44780_Opts.currentX = 0;
  5604  0012C2  0E00               	movlw	0
  5605  0012C4  6E41               	movwf	_HD44780_Opts+5,c
  5606                           
  5607                           ;pic18f4520_hd44780.c: 125: HD44780_Opts.currentY = 0;
  5608  0012C6  0E00               	movlw	0
  5609  0012C8  6E42               	movwf	_HD44780_Opts+6,c
  5610                           
  5611                           ;pic18f4520_hd44780.c: 127: HD44780_Opts.DisplayFunction = 0x00 | 0x00 | 0x00;
  5612  0012CA  0E00               	movlw	0
  5613  0012CC  6E3D               	movwf	_HD44780_Opts+1,c
  5614                           
  5615                           ;pic18f4520_hd44780.c: 128: if (rows > 1) {
  5616  0012CE  0E01               	movlw	1
  5617  0012D0  641A               	cpfsgt	HD44780_Init@rows,c
  5618  0012D2  D002               	goto	l2250
  5619                           
  5620                           ;pic18f4520_hd44780.c: 129: HD44780_Opts.DisplayFunction |= 0x08;
  5621  0012D4  863D               	bsf	_HD44780_Opts+1,3,c
  5622  0012D6  D000               	goto	l2250
  5623  0012D8                     l2250:
  5624                           
  5625                           ;pic18f4520_hd44780.c: 130: }
  5626                           ;pic18f4520_hd44780.c: 133: HD44780_Cmd4bit(0x03);
  5627  0012D8  0E03               	movlw	3
  5628  0012DA  ECF1  F009         	call	_HD44780_Cmd4bit
  5629                           
  5630                           ;pic18f4520_hd44780.c: 134: HD44780_Delay(4500);
  5631  0012DE  0E11               	movlw	17
  5632  0012E0  6E13               	movwf	HD44780_Delay@us+1,c
  5633  0012E2  0E94               	movlw	148
  5634  0012E4  6E12               	movwf	HD44780_Delay@us,c
  5635  0012E6  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5636                           
  5637                           ;pic18f4520_hd44780.c: 137: HD44780_Cmd4bit(0x03);
  5638  0012EA  0E03               	movlw	3
  5639  0012EC  ECF1  F009         	call	_HD44780_Cmd4bit
  5640                           
  5641                           ;pic18f4520_hd44780.c: 138: HD44780_Delay(4500);
  5642  0012F0  0E11               	movlw	17
  5643  0012F2  6E13               	movwf	HD44780_Delay@us+1,c
  5644  0012F4  0E94               	movlw	148
  5645  0012F6  6E12               	movwf	HD44780_Delay@us,c
  5646  0012F8  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5647                           
  5648                           ;pic18f4520_hd44780.c: 141: HD44780_Cmd4bit(0x03);
  5649  0012FC  0E03               	movlw	3
  5650  0012FE  ECF1  F009         	call	_HD44780_Cmd4bit
  5651                           
  5652                           ;pic18f4520_hd44780.c: 142: HD44780_Delay(4500);
  5653  001302  0E11               	movlw	17
  5654  001304  6E13               	movwf	HD44780_Delay@us+1,c
  5655  001306  0E94               	movlw	148
  5656  001308  6E12               	movwf	HD44780_Delay@us,c
  5657  00130A  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5658                           
  5659                           ;pic18f4520_hd44780.c: 145: HD44780_Cmd4bit(0x02);
  5660  00130E  0E02               	movlw	2
  5661  001310  ECF1  F009         	call	_HD44780_Cmd4bit
  5662                           
  5663                           ;pic18f4520_hd44780.c: 146: HD44780_Delay(100);
  5664  001314  0E00               	movlw	0
  5665  001316  6E13               	movwf	HD44780_Delay@us+1,c
  5666  001318  0E64               	movlw	100
  5667  00131A  6E12               	movwf	HD44780_Delay@us,c
  5668  00131C  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5669                           
  5670                           ;pic18f4520_hd44780.c: 149: HD44780_Cmd(0x20 | HD44780_Opts.DisplayFunction);
  5671  001320  503D               	movf	_HD44780_Opts+1,w,c
  5672  001322  0920               	iorlw	32
  5673  001324  EC4F  F00C         	call	_HD44780_Cmd
  5674                           
  5675                           ;pic18f4520_hd44780.c: 152: HD44780_Opts.DisplayControl = 0x04;
  5676  001328  0E04               	movlw	4
  5677  00132A  6E3C               	movwf	_HD44780_Opts,c
  5678                           
  5679                           ;pic18f4520_hd44780.c: 153: HD44780_DisplayOn();
  5680  00132C  EC73  F00C         	call	_HD44780_DisplayOn	;wreg free
  5681                           
  5682                           ;pic18f4520_hd44780.c: 156: HD44780_Clear();
  5683  001330  EC5A  F00C         	call	_HD44780_Clear	;wreg free
  5684                           
  5685                           ;pic18f4520_hd44780.c: 159: HD44780_Opts.DisplayMode = 0x02 | 0x00;
  5686  001334  0E02               	movlw	2
  5687  001336  6E3E               	movwf	_HD44780_Opts+2,c
  5688                           
  5689                           ;pic18f4520_hd44780.c: 160: HD44780_Cmd(0x04 | HD44780_Opts.DisplayMode);
  5690  001338  503E               	movf	_HD44780_Opts+2,w,c
  5691  00133A  0904               	iorlw	4
  5692  00133C  EC4F  F00C         	call	_HD44780_Cmd
  5693                           
  5694                           ;pic18f4520_hd44780.c: 163: HD44780_Delay(4500);
  5695  001340  0E11               	movlw	17
  5696  001342  6E13               	movwf	HD44780_Delay@us+1,c
  5697  001344  0E94               	movlw	148
  5698  001346  6E12               	movwf	HD44780_Delay@us,c
  5699  001348  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5700  00134C  0012               	return		;funcret
  5701  00134E                     __end_of_HD44780_Init:
  5702                           	opt stack 0
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           intcon2	equ	0xFF1
  5711                           intcon3	equ	0xFF0
  5712                           postinc0	equ	0xFEE
  5713                           wreg	equ	0xFE8
  5714                           postdec1	equ	0xFE5
  5715                           fsr1l	equ	0xFE1
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _HD44780_InitPins *****************
  5724 ;; Defined at:
  5725 ;;		line 292 in file "../Libraries/pic18f4520_hd44780.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;		None
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;		None               void
  5732 ;; Registers used:
  5733 ;;		None
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5739 ;;      Params:         0       0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0
  5742 ;;      Totals:         0       0       0       0       0       0       0
  5743 ;;Total ram usage:        0 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    1
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_HD44780_Init
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text24
  5754  00186E                     __ptext24:
  5755                           	opt stack 0
  5756  00186E                     _HD44780_InitPins:
  5757                           	opt stack 28
  5758                           
  5759                           ;pic18f4520_hd44780.c: 294: TRISBbits.RB2 = 0;
  5760                           
  5761                           ;incstack = 0
  5762  00186E  9493               	bcf	3987,2,c	;volatile
  5763                           
  5764                           ;pic18f4520_hd44780.c: 295: TRISBbits.RB3 = 0;
  5765  001870  9693               	bcf	3987,3,c	;volatile
  5766                           
  5767                           ;pic18f4520_hd44780.c: 296: TRISBbits.RB4 = 0;
  5768  001872  9893               	bcf	3987,4,c	;volatile
  5769                           
  5770                           ;pic18f4520_hd44780.c: 297: TRISBbits.RB5 = 0;
  5771  001874  9A93               	bcf	3987,5,c	;volatile
  5772                           
  5773                           ;pic18f4520_hd44780.c: 298: TRISBbits.RB6 = 0;
  5774  001876  9C93               	bcf	3987,6,c	;volatile
  5775                           
  5776                           ;pic18f4520_hd44780.c: 299: TRISBbits.RB7 = 0;
  5777  001878  9E93               	bcf	3987,7,c	;volatile
  5778                           
  5779                           ;pic18f4520_hd44780.c: 302: PORTBbits.RB2 = 0;
  5780  00187A  9481               	bcf	3969,2,c	;volatile
  5781                           
  5782                           ;pic18f4520_hd44780.c: 303: PORTBbits.RB3 = 0;
  5783  00187C  9681               	bcf	3969,3,c	;volatile
  5784                           
  5785                           ;pic18f4520_hd44780.c: 304: PORTBbits.RB4 = 0;
  5786  00187E  9881               	bcf	3969,4,c	;volatile
  5787                           
  5788                           ;pic18f4520_hd44780.c: 305: PORTBbits.RB5 = 0;
  5789  001880  9A81               	bcf	3969,5,c	;volatile
  5790                           
  5791                           ;pic18f4520_hd44780.c: 306: PORTBbits.RB6 = 0;
  5792  001882  9C81               	bcf	3969,6,c	;volatile
  5793                           
  5794                           ;pic18f4520_hd44780.c: 307: PORTBbits.RB7 = 0;
  5795  001884  9E81               	bcf	3969,7,c	;volatile
  5796  001886  0012               	return		;funcret
  5797  001888                     __end_of_HD44780_InitPins:
  5798                           	opt stack 0
  5799                           tblptru	equ	0xFF8
  5800                           tblptrh	equ	0xFF7
  5801                           tblptrl	equ	0xFF6
  5802                           tablat	equ	0xFF5
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           intcon	equ	0xFF2
  5806                           intcon2	equ	0xFF1
  5807                           intcon3	equ	0xFF0
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           postdec1	equ	0xFE5
  5811                           fsr1l	equ	0xFE1
  5812                           indf2	equ	0xFDF
  5813                           postinc2	equ	0xFDE
  5814                           postdec2	equ	0xFDD
  5815                           fsr2h	equ	0xFDA
  5816                           fsr2l	equ	0xFD9
  5817                           status	equ	0xFD8
  5818                           
  5819 ;; *************** function _HD44780_DisplayOn *****************
  5820 ;; Defined at:
  5821 ;;		line 192 in file "../Libraries/pic18f4520_hd44780.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;		None
  5826 ;; Return value:  Size  Location     Type
  5827 ;;		None               void
  5828 ;; Registers used:
  5829 ;;		wreg, status,2, status,0, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5835 ;;      Params:         0       0       0       0       0       0       0
  5836 ;;      Locals:         0       0       0       0       0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0
  5838 ;;      Totals:         0       0       0       0       0       0       0
  5839 ;;Total ram usage:        0 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    4
  5842 ;; This function calls:
  5843 ;;		_HD44780_Cmd
  5844 ;; This function is called by:
  5845 ;;		_HD44780_Init
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text25
  5850  0018E6                     __ptext25:
  5851                           	opt stack 0
  5852  0018E6                     _HD44780_DisplayOn:
  5853                           	opt stack 25
  5854                           
  5855                           ;pic18f4520_hd44780.c: 193: HD44780_Opts.DisplayControl |= 0x04;
  5856                           
  5857                           ;incstack = 0
  5858  0018E6  843C               	bsf	_HD44780_Opts,2,c
  5859                           
  5860                           ;pic18f4520_hd44780.c: 194: HD44780_Cmd(0x08 | HD44780_Opts.DisplayControl);
  5861  0018E8  503C               	movf	_HD44780_Opts,w,c
  5862  0018EA  0908               	iorlw	8
  5863  0018EC  EC4F  F00C         	call	_HD44780_Cmd
  5864  0018F0  0012               	return		;funcret
  5865  0018F2                     __end_of_HD44780_DisplayOn:
  5866                           	opt stack 0
  5867                           tblptru	equ	0xFF8
  5868                           tblptrh	equ	0xFF7
  5869                           tblptrl	equ	0xFF6
  5870                           tablat	equ	0xFF5
  5871                           prodh	equ	0xFF4
  5872                           prodl	equ	0xFF3
  5873                           intcon	equ	0xFF2
  5874                           intcon2	equ	0xFF1
  5875                           intcon3	equ	0xFF0
  5876                           postinc0	equ	0xFEE
  5877                           wreg	equ	0xFE8
  5878                           postdec1	equ	0xFE5
  5879                           fsr1l	equ	0xFE1
  5880                           indf2	equ	0xFDF
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _HD44780_Clear *****************
  5888 ;; Defined at:
  5889 ;;		line 166 in file "../Libraries/pic18f4520_hd44780.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;		None               void
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5903 ;;      Params:         0       0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0
  5906 ;;      Totals:         0       0       0       0       0       0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    4
  5910 ;; This function calls:
  5911 ;;		_HD44780_Cmd
  5912 ;;		_HD44780_Delay
  5913 ;; This function is called by:
  5914 ;;		_main
  5915 ;;		_HD44780_Init
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text26
  5920  0018B4                     __ptext26:
  5921                           	opt stack 0
  5922  0018B4                     _HD44780_Clear:
  5923                           	opt stack 25
  5924                           
  5925                           ;pic18f4520_hd44780.c: 167: HD44780_Cmd(0x01);
  5926                           
  5927                           ;incstack = 0
  5928  0018B4  0E01               	movlw	1
  5929  0018B6  EC4F  F00C         	call	_HD44780_Cmd
  5930                           
  5931                           ;pic18f4520_hd44780.c: 168: HD44780_Delay(3000);
  5932  0018BA  0E0B               	movlw	11
  5933  0018BC  6E13               	movwf	HD44780_Delay@us+1,c
  5934  0018BE  0EB8               	movlw	184
  5935  0018C0  6E12               	movwf	HD44780_Delay@us,c
  5936  0018C2  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  5937  0018C6  0012               	return		;funcret
  5938  0018C8                     __end_of_HD44780_Clear:
  5939                           	opt stack 0
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           intcon	equ	0xFF2
  5947                           intcon2	equ	0xFF1
  5948                           intcon3	equ	0xFF0
  5949                           postinc0	equ	0xFEE
  5950                           wreg	equ	0xFE8
  5951                           postdec1	equ	0xFE5
  5952                           fsr1l	equ	0xFE1
  5953                           indf2	equ	0xFDF
  5954                           postinc2	equ	0xFDE
  5955                           postdec2	equ	0xFDD
  5956                           fsr2h	equ	0xFDA
  5957                           fsr2l	equ	0xFD9
  5958                           status	equ	0xFD8
  5959                           
  5960 ;; *************** function _HD44780_Cmd *****************
  5961 ;; Defined at:
  5962 ;;		line 263 in file "../Libraries/pic18f4520_hd44780.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  cmd             1    wreg     unsigned char 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  cmd             1   24[COMRAM] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;		None               void
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5976 ;;      Params:         0       0       0       0       0       0       0
  5977 ;;      Locals:         1       0       0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0
  5979 ;;      Totals:         1       0       0       0       0       0       0
  5980 ;;Total ram usage:        1 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    3
  5983 ;; This function calls:
  5984 ;;		_HD44780_Cmd4bit
  5985 ;; This function is called by:
  5986 ;;		_HD44780_Init
  5987 ;;		_HD44780_Clear
  5988 ;;		_HD44780_DisplayOn
  5989 ;;		_HD44780_CursorSet
  5990 ;;		_HD44780_DisplayOff
  5991 ;;		_HD44780_BlinkOn
  5992 ;;		_HD44780_BlinkOff
  5993 ;;		_HD44780_CursorOn
  5994 ;;		_HD44780_CursorOff
  5995 ;;		_HD44780_ScrollLeft
  5996 ;;		_HD44780_ScrollRight
  5997 ;;		_HD44780_CreateChar
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text27
  6002  00189E                     __ptext27:
  6003                           	opt stack 0
  6004  00189E                     _HD44780_Cmd:
  6005                           	opt stack 24
  6006                           
  6007                           ;incstack = 0
  6008                           ;HD44780_Cmd@cmd stored from wreg
  6009  00189E  6E19               	movwf	HD44780_Cmd@cmd,c
  6010                           
  6011                           ;pic18f4520_hd44780.c: 265: PORTBbits.RB2 = 0;
  6012  0018A0  9481               	bcf	3969,2,c	;volatile
  6013                           
  6014                           ;pic18f4520_hd44780.c: 268: HD44780_Cmd4bit(cmd >> 4);
  6015  0018A2  3819               	swapf	HD44780_Cmd@cmd,w,c
  6016  0018A4  0B0F               	andlw	15
  6017  0018A6  ECF1  F009         	call	_HD44780_Cmd4bit
  6018                           
  6019                           ;pic18f4520_hd44780.c: 270: HD44780_Cmd4bit(cmd & 0x0F);
  6020  0018AA  5019               	movf	HD44780_Cmd@cmd,w,c
  6021  0018AC  0B0F               	andlw	15
  6022  0018AE  ECF1  F009         	call	_HD44780_Cmd4bit
  6023  0018B2  0012               	return		;funcret
  6024  0018B4                     __end_of_HD44780_Cmd:
  6025                           	opt stack 0
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           prodh	equ	0xFF4
  6031                           prodl	equ	0xFF3
  6032                           intcon	equ	0xFF2
  6033                           intcon2	equ	0xFF1
  6034                           intcon3	equ	0xFF0
  6035                           postinc0	equ	0xFEE
  6036                           wreg	equ	0xFE8
  6037                           postdec1	equ	0xFE5
  6038                           fsr1l	equ	0xFE1
  6039                           indf2	equ	0xFDF
  6040                           postinc2	equ	0xFDE
  6041                           postdec2	equ	0xFDD
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function _HD44780_Cmd4bit *****************
  6047 ;; Defined at:
  6048 ;;		line 283 in file "../Libraries/pic18f4520_hd44780.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  cmd             1    wreg     unsigned char 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  cmd             1   23[COMRAM] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;		None               void
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6062 ;;      Params:         0       0       0       0       0       0       0
  6063 ;;      Locals:         1       0       0       0       0       0       0
  6064 ;;      Temps:          1       0       0       0       0       0       0
  6065 ;;      Totals:         2       0       0       0       0       0       0
  6066 ;;Total ram usage:        2 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    2
  6069 ;; This function calls:
  6070 ;;		_HD44780_Delay
  6071 ;; This function is called by:
  6072 ;;		_HD44780_Init
  6073 ;;		_HD44780_Cmd
  6074 ;;		_HD44780_Data
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text28
  6079  0013E2                     __ptext28:
  6080                           	opt stack 0
  6081  0013E2                     _HD44780_Cmd4bit:
  6082                           	opt stack 25
  6083                           
  6084                           ;incstack = 0
  6085                           ;HD44780_Cmd4bit@cmd stored from wreg
  6086  0013E2  6E18               	movwf	HD44780_Cmd4bit@cmd,c
  6087                           
  6088                           ;pic18f4520_hd44780.c: 285: PORTBbits.RB7 = (cmd & 0x08) ? 1 : 0;
  6089  0013E4  A618               	btfss	HD44780_Cmd4bit@cmd,3,c
  6090  0013E6  D003               	goto	u1680
  6091  0013E8  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6092  0013EA  2A17               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  6093  0013EC  D001               	goto	u1698
  6094  0013EE                     u1680:
  6095  0013EE  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6096  0013F0                     u1698:
  6097  0013F0  3217               	rrcf	??_HD44780_Cmd4bit,f,c
  6098  0013F2  3217               	rrcf	??_HD44780_Cmd4bit,f,c
  6099  0013F4  5081               	movf	3969,w,c	;volatile
  6100  0013F6  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6101  0013F8  0B7F               	andlw	-129
  6102  0013FA  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6103  0013FC  6E81               	movwf	3969,c	;volatile
  6104                           
  6105                           ;pic18f4520_hd44780.c: 286: PORTBbits.RB6 = (cmd & 0x04) ? 1 : 0;
  6106  0013FE  A418               	btfss	HD44780_Cmd4bit@cmd,2,c
  6107  001400  D003               	goto	u1700
  6108  001402  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6109  001404  2A17               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  6110  001406  D001               	goto	u1718
  6111  001408                     u1700:
  6112  001408  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6113  00140A                     u1718:
  6114  00140A  3A17               	swapf	??_HD44780_Cmd4bit,f,c
  6115  00140C  4617               	rlncf	??_HD44780_Cmd4bit,f,c
  6116  00140E  4617               	rlncf	??_HD44780_Cmd4bit,f,c
  6117  001410  5081               	movf	3969,w,c	;volatile
  6118  001412  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6119  001414  0BBF               	andlw	-65
  6120  001416  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6121  001418  6E81               	movwf	3969,c	;volatile
  6122                           
  6123                           ;pic18f4520_hd44780.c: 287: PORTBbits.RB5 = (cmd & 0x02) ? 1 : 0;
  6124  00141A  A218               	btfss	HD44780_Cmd4bit@cmd,1,c
  6125  00141C  D003               	goto	u1720
  6126  00141E  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6127  001420  2A17               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  6128  001422  D001               	goto	u1738
  6129  001424                     u1720:
  6130  001424  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6131  001426                     u1738:
  6132  001426  3A17               	swapf	??_HD44780_Cmd4bit,f,c
  6133  001428  4617               	rlncf	??_HD44780_Cmd4bit,f,c
  6134  00142A  5081               	movf	3969,w,c	;volatile
  6135  00142C  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6136  00142E  0BDF               	andlw	-33
  6137  001430  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6138  001432  6E81               	movwf	3969,c	;volatile
  6139                           
  6140                           ;pic18f4520_hd44780.c: 288: PORTBbits.RB4 = (cmd & 0x01) ? 1 : 0;
  6141  001434  A018               	btfss	HD44780_Cmd4bit@cmd,0,c
  6142  001436  D003               	goto	u1740
  6143  001438  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6144  00143A  2A17               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  6145  00143C  D001               	goto	u1758
  6146  00143E                     u1740:
  6147  00143E  6A17               	clrf	??_HD44780_Cmd4bit& (0+255),c
  6148  001440                     u1758:
  6149  001440  3A17               	swapf	??_HD44780_Cmd4bit,f,c
  6150  001442  5081               	movf	3969,w,c	;volatile
  6151  001444  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6152  001446  0BEF               	andlw	-17
  6153  001448  1817               	xorwf	??_HD44780_Cmd4bit,w,c
  6154  00144A  6E81               	movwf	3969,c	;volatile
  6155                           
  6156                           ;pic18f4520_hd44780.c: 289: PORTBbits.RB3 = 1; HD44780_Delay(20); PORTBbits.RB3 = 0; HD4
      +                          4780_Delay(20);
  6157  00144C  8681               	bsf	3969,3,c	;volatile
  6158  00144E  0E00               	movlw	0
  6159  001450  6E13               	movwf	HD44780_Delay@us+1,c
  6160  001452  0E14               	movlw	20
  6161  001454  6E12               	movwf	HD44780_Delay@us,c
  6162  001456  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  6163  00145A  9681               	bcf	3969,3,c	;volatile
  6164  00145C  0E00               	movlw	0
  6165  00145E  6E13               	movwf	HD44780_Delay@us+1,c
  6166  001460  0E14               	movlw	20
  6167  001462  6E12               	movwf	HD44780_Delay@us,c
  6168  001464  EC9E  F00B         	call	_HD44780_Delay	;wreg free
  6169  001468  0012               	return		;funcret
  6170  00146A                     __end_of_HD44780_Cmd4bit:
  6171                           	opt stack 0
  6172                           tblptru	equ	0xFF8
  6173                           tblptrh	equ	0xFF7
  6174                           tblptrl	equ	0xFF6
  6175                           tablat	equ	0xFF5
  6176                           prodh	equ	0xFF4
  6177                           prodl	equ	0xFF3
  6178                           intcon	equ	0xFF2
  6179                           intcon2	equ	0xFF1
  6180                           intcon3	equ	0xFF0
  6181                           postinc0	equ	0xFEE
  6182                           wreg	equ	0xFE8
  6183                           postdec1	equ	0xFE5
  6184                           fsr1l	equ	0xFE1
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           postdec2	equ	0xFDD
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function _HD44780_Delay *****************
  6193 ;; Defined at:
  6194 ;;		line 106 in file "../Libraries/pic18f4520_hd44780.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  us              2   17[COMRAM] int 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  i               2   20[COMRAM] int 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;		None               void
  6201 ;; Registers used:
  6202 ;;		wreg, status,2, status,0
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6208 ;;      Params:         2       0       0       0       0       0       0
  6209 ;;      Locals:         2       0       0       0       0       0       0
  6210 ;;      Temps:          1       0       0       0       0       0       0
  6211 ;;      Totals:         5       0       0       0       0       0       0
  6212 ;;Total ram usage:        5 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    1
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		_HD44780_Init
  6219 ;;		_HD44780_Clear
  6220 ;;		_HD44780_Cmd4bit
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text29
  6225  00173C                     __ptext29:
  6226                           	opt stack 0
  6227  00173C                     _HD44780_Delay:
  6228                           	opt stack 25
  6229                           
  6230                           ;pic18f4520_hd44780.c: 108: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(3200000
      +                          0/4000000.0)));
  6231                           
  6232                           ;incstack = 0
  6233  00173C  0E00               	movlw	0
  6234  00173E  6E16               	movwf	HD44780_Delay@i+1,c
  6235  001740  0E00               	movlw	0
  6236  001742  6E15               	movwf	HD44780_Delay@i,c
  6237  001744  D006               	goto	l196
  6238  001746                     l2064:
  6239  001746  0E02               	movlw	2
  6240  001748                     u3237:
  6241  001748  2EE8               	decfsz	wreg,f,c
  6242  00174A  D7FE               	goto	u3237
  6243  00174C  D000               	nop2		;nop
  6244  00174E  4A15               	infsnz	HD44780_Delay@i,f,c
  6245  001750  2A16               	incf	HD44780_Delay@i+1,f,c
  6246  001752                     l196:
  6247  001752  5012               	movf	HD44780_Delay@us,w,c
  6248  001754  5C15               	subwf	HD44780_Delay@i,w,c
  6249  001756  5016               	movf	HD44780_Delay@i+1,w,c
  6250  001758  0A80               	xorlw	128
  6251  00175A  6E14               	movwf	??_HD44780_Delay& (0+255),c
  6252  00175C  5013               	movf	HD44780_Delay@us+1,w,c
  6253  00175E  0A80               	xorlw	128
  6254  001760  5814               	subwfb	??_HD44780_Delay& (0+255),w,c
  6255  001762  A0D8               	btfss	status,0,c
  6256  001764  D7F0               	goto	l2064
  6257  001766  0012               	return		;funcret
  6258  001768                     __end_of_HD44780_Delay:
  6259                           	opt stack 0
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           intcon	equ	0xFF2
  6267                           intcon2	equ	0xFF1
  6268                           intcon3	equ	0xFF0
  6269                           postinc0	equ	0xFEE
  6270                           wreg	equ	0xFE8
  6271                           postdec1	equ	0xFE5
  6272                           fsr1l	equ	0xFE1
  6273                           indf2	equ	0xFDF
  6274                           postinc2	equ	0xFDE
  6275                           postdec2	equ	0xFDD
  6276                           fsr2h	equ	0xFDA
  6277                           fsr2l	equ	0xFD9
  6278                           status	equ	0xFD8
  6279                           
  6280 ;; *************** function _Delayms *****************
  6281 ;; Defined at:
  6282 ;;		line 66 in file "../Libraries\pic18f4520_delay.h"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  ms              2   17[COMRAM] int 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  i               2   20[COMRAM] int 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;		None               void
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6296 ;;      Params:         2       0       0       0       0       0       0
  6297 ;;      Locals:         2       0       0       0       0       0       0
  6298 ;;      Temps:          1       0       0       0       0       0       0
  6299 ;;      Totals:         5       0       0       0       0       0       0
  6300 ;;Total ram usage:        5 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_main
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text30
  6311  001708                     __ptext30:
  6312                           	opt stack 0
  6313  001708                     _Delayms:
  6314                           	opt stack 29
  6315                           
  6316                           ;Libraries\pic18f4520_delay.h: 68: for(int i=0; i<ms ; i++) _delay((unsigned long)((1)*(
      +                          32000000/4000.0)));
  6317                           
  6318                           ;incstack = 0
  6319  001708  0E00               	movlw	0
  6320  00170A  6E16               	movwf	Delayms@i+1,c
  6321  00170C  0E00               	movlw	0
  6322  00170E  6E15               	movwf	Delayms@i,c
  6323  001710  D00A               	goto	l45
  6324  001712                     l2222:
  6325  001712  0E0B               	movlw	11
  6326  001714  6E14               	movwf	??_Delayms& (0+255),c
  6327  001716  0E62               	movlw	98
  6328  001718                     u3247:
  6329  001718  2EE8               	decfsz	wreg,f,c
  6330  00171A  D7FE               	goto	u3247
  6331  00171C  2E14               	decfsz	??_Delayms& (0+255),f,c
  6332  00171E  D7FC               	goto	u3247
  6333  001720  D000               	nop2	
  6334  001722  4A15               	infsnz	Delayms@i,f,c
  6335  001724  2A16               	incf	Delayms@i+1,f,c
  6336  001726                     l45:
  6337  001726  5012               	movf	Delayms@ms,w,c
  6338  001728  5C15               	subwf	Delayms@i,w,c
  6339  00172A  5016               	movf	Delayms@i+1,w,c
  6340  00172C  0A80               	xorlw	128
  6341  00172E  6E14               	movwf	??_Delayms& (0+255),c
  6342  001730  5013               	movf	Delayms@ms+1,w,c
  6343  001732  0A80               	xorlw	128
  6344  001734  5814               	subwfb	??_Delayms& (0+255),w,c
  6345  001736  A0D8               	btfss	status,0,c
  6346  001738  D7EC               	goto	l2222
  6347  00173A  0012               	return		;funcret
  6348  00173C                     __end_of_Delayms:
  6349                           	opt stack 0
  6350                           tblptru	equ	0xFF8
  6351                           tblptrh	equ	0xFF7
  6352                           tblptrl	equ	0xFF6
  6353                           tablat	equ	0xFF5
  6354                           prodh	equ	0xFF4
  6355                           prodl	equ	0xFF3
  6356                           intcon	equ	0xFF2
  6357                           intcon2	equ	0xFF1
  6358                           intcon3	equ	0xFF0
  6359                           postinc0	equ	0xFEE
  6360                           wreg	equ	0xFE8
  6361                           postdec1	equ	0xFE5
  6362                           fsr1l	equ	0xFE1
  6363                           indf2	equ	0xFDF
  6364                           postinc2	equ	0xFDE
  6365                           postdec2	equ	0xFDD
  6366                           fsr2h	equ	0xFDA
  6367                           fsr2l	equ	0xFD9
  6368                           status	equ	0xFD8
  6369                           
  6370 ;; *************** function _Delay *****************
  6371 ;; Defined at:
  6372 ;;		line 76 in file "../Libraries\pic18f4520_delay.h"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  us              2   17[COMRAM] int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  i               2   20[COMRAM] int 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;		None               void
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6386 ;;      Params:         2       0       0       0       0       0       0
  6387 ;;      Locals:         2       0       0       0       0       0       0
  6388 ;;      Temps:          1       0       0       0       0       0       0
  6389 ;;      Totals:         5       0       0       0       0       0       0
  6390 ;;Total ram usage:        5 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_main
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text31
  6401  001768                     __ptext31:
  6402                           	opt stack 0
  6403  001768                     _Delay:
  6404                           	opt stack 29
  6405                           
  6406                           ;Libraries\pic18f4520_delay.h: 78: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(
      +                          32000000/4000000.0)));
  6407                           
  6408                           ;incstack = 0
  6409  001768  0E00               	movlw	0
  6410  00176A  6E16               	movwf	Delay@i+1,c
  6411  00176C  0E00               	movlw	0
  6412  00176E  6E15               	movwf	Delay@i,c
  6413  001770  D006               	goto	l51
  6414  001772                     l2228:
  6415  001772  0E02               	movlw	2
  6416  001774                     u3257:
  6417  001774  2EE8               	decfsz	wreg,f,c
  6418  001776  D7FE               	goto	u3257
  6419  001778  D000               	nop2		;nop
  6420  00177A  4A15               	infsnz	Delay@i,f,c
  6421  00177C  2A16               	incf	Delay@i+1,f,c
  6422  00177E                     l51:
  6423  00177E  5012               	movf	Delay@us,w,c
  6424  001780  5C15               	subwf	Delay@i,w,c
  6425  001782  5016               	movf	Delay@i+1,w,c
  6426  001784  0A80               	xorlw	128
  6427  001786  6E14               	movwf	??_Delay& (0+255),c
  6428  001788  5013               	movf	Delay@us+1,w,c
  6429  00178A  0A80               	xorlw	128
  6430  00178C  5814               	subwfb	??_Delay& (0+255),w,c
  6431  00178E  A0D8               	btfss	status,0,c
  6432  001790  D7F0               	goto	l2228
  6433  001792  0012               	return		;funcret
  6434  001794                     __end_of_Delay:
  6435                           	opt stack 0
  6436                           tblptru	equ	0xFF8
  6437                           tblptrh	equ	0xFF7
  6438                           tblptrl	equ	0xFF6
  6439                           tablat	equ	0xFF5
  6440                           prodh	equ	0xFF4
  6441                           prodl	equ	0xFF3
  6442                           intcon	equ	0xFF2
  6443                           intcon2	equ	0xFF1
  6444                           intcon3	equ	0xFF0
  6445                           postinc0	equ	0xFEE
  6446                           wreg	equ	0xFE8
  6447                           postdec1	equ	0xFE5
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function _ConvertADC *****************
  6457 ;; Defined at:
  6458 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		None
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6472 ;;      Params:         0       0       0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    1
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_main
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text32
  6487  0018FC                     __ptext32:
  6488                           	opt stack 0
  6489  0018FC                     _ConvertADC:
  6490                           	opt stack 29
  6491                           
  6492                           ;incstack = 0
  6493  0018FC  82C2               	bsf	4034,1,c	;volatile
  6494  0018FE  0012               	return		;funcret
  6495  001900                     __end_of_ConvertADC:
  6496                           	opt stack 0
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           intcon2	equ	0xFF1
  6505                           intcon3	equ	0xFF0
  6506                           postinc0	equ	0xFEE
  6507                           wreg	equ	0xFE8
  6508                           postdec1	equ	0xFE5
  6509                           fsr1l	equ	0xFE1
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           postdec2	equ	0xFDD
  6513                           fsr2h	equ	0xFDA
  6514                           fsr2l	equ	0xFD9
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function _BusyADC *****************
  6518 ;; Defined at:
  6519 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      unsigned char 
  6526 ;; Registers used:
  6527 ;;		wreg
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6533 ;;      Params:         0       0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text33
  6548  0018D8                     __ptext33:
  6549                           	opt stack 0
  6550  0018D8                     _BusyADC:
  6551                           	opt stack 29
  6552                           
  6553                           ;incstack = 0
  6554  0018D8  A2C2               	btfss	4034,1,c	;volatile
  6555  0018DA  D002               	goto	u2530
  6556  0018DC  0E01               	movlw	1
  6557  0018DE  D002               	goto	l389
  6558  0018E0                     u2530:
  6559  0018E0  0E00               	movlw	0
  6560  0018E2  D000               	goto	l389
  6561  0018E4                     l389:
  6562  0018E4  0012               	return		;funcret
  6563  0018E6                     __end_of_BusyADC:
  6564                           	opt stack 0
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           prodh	equ	0xFF4
  6570                           prodl	equ	0xFF3
  6571                           intcon	equ	0xFF2
  6572                           intcon2	equ	0xFF1
  6573                           intcon3	equ	0xFF0
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           fsr1l	equ	0xFE1
  6578                           indf2	equ	0xFDF
  6579                           postinc2	equ	0xFDE
  6580                           postdec2	equ	0xFDD
  6581                           fsr2h	equ	0xFDA
  6582                           fsr2l	equ	0xFD9
  6583                           status	equ	0xFD8
  6584                           
  6585 ;; *************** function _ExternalInterrupt *****************
  6586 ;; Defined at:
  6587 ;;		line 241 in file "main.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;		None
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;		None               void
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6601 ;;      Params:         0       0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0
  6603 ;;      Temps:         17       0       0       0       0       0       0
  6604 ;;      Totals:        17       0       0       0       0       0       0
  6605 ;;Total ram usage:       17 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		Interrupt level 1
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	intcodelo
  6615  000018                     __pintcodelo:
  6616                           	opt stack 0
  6617  000018                     _ExternalInterrupt:
  6618                           	opt stack 24
  6619                           
  6620                           ;incstack = 0
  6621  000018  CFD8 F001          	movff	status,??_ExternalInterrupt
  6622  00001C  CFE8 F002          	movff	wreg,??_ExternalInterrupt+1
  6623  000020  CFE0 F003          	movff	bsr,??_ExternalInterrupt+2
  6624  000024  CFFA F004          	movff	pclath,??_ExternalInterrupt+3
  6625  000028  CFFB F005          	movff	pclatu,??_ExternalInterrupt+4
  6626  00002C  CFE9 F006          	movff	fsr0l,??_ExternalInterrupt+5
  6627  000030  CFEA F007          	movff	fsr0h,??_ExternalInterrupt+6
  6628  000034  CFE1 F008          	movff	fsr1l,??_ExternalInterrupt+7
  6629  000038  CFE2 F009          	movff	fsr1h,??_ExternalInterrupt+8
  6630  00003C  CFD9 F00A          	movff	fsr2l,??_ExternalInterrupt+9
  6631  000040  CFDA F00B          	movff	fsr2h,??_ExternalInterrupt+10
  6632  000044  CFF3 F00C          	movff	prodl,??_ExternalInterrupt+11
  6633  000048  CFF4 F00D          	movff	prodh,??_ExternalInterrupt+12
  6634  00004C  CFF6 F00E          	movff	tblptrl,??_ExternalInterrupt+13
  6635  000050  CFF7 F00F          	movff	tblptrh,??_ExternalInterrupt+14
  6636  000054  CFF8 F010          	movff	tblptru,??_ExternalInterrupt+15
  6637  000058  CFF5 F011          	movff	tablat,??_ExternalInterrupt+16
  6638                           
  6639                           ;main.c: 244: if(INTCONbits.INT0F == 1) {
  6640  00005C  A2F2               	btfss	intcon,1,c	;volatile
  6641  00005E  D03F               	goto	i1l140
  6642                           
  6643                           ;main.c: 245: INTCONbits.INT0F = 0;
  6644  000060  92F2               	bcf	intcon,1,c	;volatile
  6645                           
  6646                           ;main.c: 246: if(state == 0) {
  6647  000062  5053               	movf	_state,w,c
  6648  000064  1054               	iorwf	_state+1,w,c
  6649  000066  A4D8               	btfss	status,2,c
  6650  000068  D005               	goto	i1l1960
  6651                           
  6652                           ;main.c: 247: lcd_flag = 1;
  6653  00006A  0E00               	movlw	0
  6654  00006C  6E4C               	movwf	_lcd_flag+1,c
  6655  00006E  0E01               	movlw	1
  6656  000070  6E4B               	movwf	_lcd_flag,c
  6657                           
  6658                           ;main.c: 248: }
  6659  000072  D027               	goto	i1l1976
  6660  000074                     i1l1960:
  6661                           
  6662                           ;main.c: 249: else if(state == 1) {
  6663  000074  0453               	decf	_state,w,c
  6664  000076  1054               	iorwf	_state+1,w,c
  6665  000078  A4D8               	btfss	status,2,c
  6666  00007A  D005               	goto	i1l1964
  6667                           
  6668                           ;main.c: 250: led_flag = 1;
  6669  00007C  0E00               	movlw	0
  6670  00007E  6E4E               	movwf	_led_flag+1,c
  6671  000080  0E01               	movlw	1
  6672  000082  6E4D               	movwf	_led_flag,c
  6673                           
  6674                           ;main.c: 251: }
  6675  000084  D01E               	goto	i1l1976
  6676  000086                     i1l1964:
  6677                           
  6678                           ;main.c: 252: else if(state == 2) {
  6679  000086  0E02               	movlw	2
  6680  000088  1853               	xorwf	_state,w,c
  6681  00008A  1054               	iorwf	_state+1,w,c
  6682  00008C  A4D8               	btfss	status,2,c
  6683  00008E  D005               	goto	i1l1968
  6684                           
  6685                           ;main.c: 253: sseg_flag = 1;
  6686  000090  0E00               	movlw	0
  6687  000092  6E52               	movwf	_sseg_flag+1,c
  6688  000094  0E01               	movlw	1
  6689  000096  6E51               	movwf	_sseg_flag,c
  6690                           
  6691                           ;main.c: 254: }
  6692  000098  D014               	goto	i1l1976
  6693  00009A                     i1l1968:
  6694                           
  6695                           ;main.c: 255: else if(state == 3) {
  6696  00009A  0E03               	movlw	3
  6697  00009C  1853               	xorwf	_state,w,c
  6698  00009E  1054               	iorwf	_state+1,w,c
  6699  0000A0  A4D8               	btfss	status,2,c
  6700  0000A2  D005               	goto	i1l1972
  6701                           
  6702                           ;main.c: 256: keypad_flag = 1;
  6703  0000A4  0E00               	movlw	0
  6704  0000A6  6E4A               	movwf	_keypad_flag+1,c
  6705  0000A8  0E01               	movlw	1
  6706  0000AA  6E49               	movwf	_keypad_flag,c
  6707                           
  6708                           ;main.c: 257: }
  6709  0000AC  D00A               	goto	i1l1976
  6710  0000AE                     i1l1972:
  6711                           
  6712                           ;main.c: 258: else if(state == 4) {
  6713  0000AE  0E04               	movlw	4
  6714  0000B0  1853               	xorwf	_state,w,c
  6715  0000B2  1054               	iorwf	_state+1,w,c
  6716  0000B4  A4D8               	btfss	status,2,c
  6717  0000B6  D005               	goto	i1l1976
  6718                           
  6719                           ;main.c: 259: adc_flag = 1;
  6720  0000B8  0E00               	movlw	0
  6721  0000BA  6E44               	movwf	_adc_flag+1,c
  6722  0000BC  0E01               	movlw	1
  6723  0000BE  6E43               	movwf	_adc_flag,c
  6724  0000C0  D000               	goto	i1l1976
  6725  0000C2                     i1l1976:
  6726                           
  6727                           ;main.c: 260: }
  6728                           ;main.c: 261: state--;
  6729  0000C2  0653               	decf	_state,f,c
  6730  0000C4  A0D8               	btfss	status,0,c
  6731  0000C6  0654               	decf	_state+1,f,c
  6732                           
  6733                           ;main.c: 262: if(state < 0) state = 4;
  6734  0000C8  AE54               	btfss	_state+1,7,c
  6735  0000CA  D004               	goto	i1l150
  6736  0000CC  0E00               	movlw	0
  6737  0000CE  6E54               	movwf	_state+1,c
  6738  0000D0  0E04               	movlw	4
  6739  0000D2  D045               	goto	L16
  6740  0000D4                     i1l150:
  6741                           
  6742                           ;main.c: 263: counter = 0;
  6743  0000D4  0E00               	movlw	0
  6744  0000D6  6E48               	movwf	_counter+1,c
  6745  0000D8  0E00               	movlw	0
  6746  0000DA  6E47               	movwf	_counter,c
  6747                           
  6748                           ;main.c: 264: }
  6749  0000DC  D043               	goto	i1l163
  6750  0000DE                     i1l140:
  6751                           
  6752                           ;main.c: 266: else if(INTCON3bits.INT1F == 1) {
  6753  0000DE  A0F0               	btfss	intcon3,0,c	;volatile
  6754  0000E0  D041               	goto	i1l163
  6755                           
  6756                           ;main.c: 267: INTCON3bits.INT1F = 0;
  6757  0000E2  90F0               	bcf	intcon3,0,c	;volatile
  6758                           
  6759                           ;main.c: 268: if(state == 0) {
  6760  0000E4  5053               	movf	_state,w,c
  6761  0000E6  1054               	iorwf	_state+1,w,c
  6762  0000E8  A4D8               	btfss	status,2,c
  6763  0000EA  D005               	goto	i1l1988
  6764                           
  6765                           ;main.c: 269: lcd_flag = 1;
  6766  0000EC  0E00               	movlw	0
  6767  0000EE  6E4C               	movwf	_lcd_flag+1,c
  6768  0000F0  0E01               	movlw	1
  6769  0000F2  6E4B               	movwf	_lcd_flag,c
  6770                           
  6771                           ;main.c: 270: }
  6772  0000F4  D027               	goto	i1l2004
  6773  0000F6                     i1l1988:
  6774                           
  6775                           ;main.c: 271: else if(state == 1) {
  6776  0000F6  0453               	decf	_state,w,c
  6777  0000F8  1054               	iorwf	_state+1,w,c
  6778  0000FA  A4D8               	btfss	status,2,c
  6779  0000FC  D005               	goto	i1l1992
  6780                           
  6781                           ;main.c: 272: led_flag = 1;
  6782  0000FE  0E00               	movlw	0
  6783  000100  6E4E               	movwf	_led_flag+1,c
  6784  000102  0E01               	movlw	1
  6785  000104  6E4D               	movwf	_led_flag,c
  6786                           
  6787                           ;main.c: 273: }
  6788  000106  D01E               	goto	i1l2004
  6789  000108                     i1l1992:
  6790                           
  6791                           ;main.c: 274: else if(state == 2) {
  6792  000108  0E02               	movlw	2
  6793  00010A  1853               	xorwf	_state,w,c
  6794  00010C  1054               	iorwf	_state+1,w,c
  6795  00010E  A4D8               	btfss	status,2,c
  6796  000110  D005               	goto	i1l1996
  6797                           
  6798                           ;main.c: 275: sseg_flag = 1;
  6799  000112  0E00               	movlw	0
  6800  000114  6E52               	movwf	_sseg_flag+1,c
  6801  000116  0E01               	movlw	1
  6802  000118  6E51               	movwf	_sseg_flag,c
  6803                           
  6804                           ;main.c: 276: }
  6805  00011A  D014               	goto	i1l2004
  6806  00011C                     i1l1996:
  6807                           
  6808                           ;main.c: 277: else if(state == 3) {
  6809  00011C  0E03               	movlw	3
  6810  00011E  1853               	xorwf	_state,w,c
  6811  000120  1054               	iorwf	_state+1,w,c
  6812  000122  A4D8               	btfss	status,2,c
  6813  000124  D005               	goto	i1l2000
  6814                           
  6815                           ;main.c: 278: keypad_flag = 1;
  6816  000126  0E00               	movlw	0
  6817  000128  6E4A               	movwf	_keypad_flag+1,c
  6818  00012A  0E01               	movlw	1
  6819  00012C  6E49               	movwf	_keypad_flag,c
  6820                           
  6821                           ;main.c: 279: }
  6822  00012E  D00A               	goto	i1l2004
  6823  000130                     i1l2000:
  6824                           
  6825                           ;main.c: 280: else if(state == 4) {
  6826  000130  0E04               	movlw	4
  6827  000132  1853               	xorwf	_state,w,c
  6828  000134  1054               	iorwf	_state+1,w,c
  6829  000136  A4D8               	btfss	status,2,c
  6830  000138  D005               	goto	i1l2004
  6831                           
  6832                           ;main.c: 281: adc_flag = 1;
  6833  00013A  0E00               	movlw	0
  6834  00013C  6E44               	movwf	_adc_flag+1,c
  6835  00013E  0E01               	movlw	1
  6836  000140  6E43               	movwf	_adc_flag,c
  6837  000142  D000               	goto	i1l2004
  6838  000144                     i1l2004:
  6839                           
  6840                           ;main.c: 282: }
  6841                           ;main.c: 283: state++;
  6842  000144  4A53               	infsnz	_state,f,c
  6843  000146  2A54               	incf	_state+1,f,c
  6844                           
  6845                           ;main.c: 284: if(state > 4) state = 0;
  6846  000148  BE54               	btfsc	_state+1,7,c
  6847  00014A  D7C4               	goto	i1l150
  6848  00014C  5054               	movf	_state+1,w,c
  6849  00014E  E104               	bnz	i1u162_20
  6850  000150  0E05               	movlw	5
  6851  000152  5C53               	subwf	_state,w,c
  6852  000154  A0D8               	btfss	status,0,c
  6853  000156  D7BE               	goto	i1l150
  6854  000158                     i1u162_20:
  6855  000158  0E00               	movlw	0
  6856  00015A  6E54               	movwf	_state+1,c
  6857  00015C  0E00               	movlw	0
  6858  00015E                     L16:
  6859  00015E  6E53               	movwf	_state,c
  6860  000160  D7B9               	goto	i1l150
  6861                           
  6862                           ;main.c: 285: counter = 0;
  6863  000162  D000               	goto	i1l163
  6864  000164                     i1l163:
  6865  000164  C011  FFF5         	movff	??_ExternalInterrupt+16,tablat
  6866  000168  C010  FFF8         	movff	??_ExternalInterrupt+15,tblptru
  6867  00016C  C00F  FFF7         	movff	??_ExternalInterrupt+14,tblptrh
  6868  000170  C00E  FFF6         	movff	??_ExternalInterrupt+13,tblptrl
  6869  000174  C00D  FFF4         	movff	??_ExternalInterrupt+12,prodh
  6870  000178  C00C  FFF3         	movff	??_ExternalInterrupt+11,prodl
  6871  00017C  C00B  FFDA         	movff	??_ExternalInterrupt+10,fsr2h
  6872  000180  C00A  FFD9         	movff	??_ExternalInterrupt+9,fsr2l
  6873  000184  C009  FFE2         	movff	??_ExternalInterrupt+8,fsr1h
  6874  000188  C008  FFE1         	movff	??_ExternalInterrupt+7,fsr1l
  6875  00018C  C007  FFEA         	movff	??_ExternalInterrupt+6,fsr0h
  6876  000190  C006  FFE9         	movff	??_ExternalInterrupt+5,fsr0l
  6877  000194  C005  FFFB         	movff	??_ExternalInterrupt+4,pclatu
  6878  000198  C004  FFFA         	movff	??_ExternalInterrupt+3,pclath
  6879  00019C  C003  FFE0         	movff	??_ExternalInterrupt+2,bsr
  6880  0001A0  C002  FFE8         	movff	??_ExternalInterrupt+1,wreg
  6881  0001A4  C001  FFD8         	movff	??_ExternalInterrupt,status
  6882  0001A8  0010               	retfie	
  6883  0001AA                     __end_of_ExternalInterrupt:
  6884                           	opt stack 0
  6885                           pclatu	equ	0xFFB
  6886                           pclath	equ	0xFFA
  6887                           tblptru	equ	0xFF8
  6888                           tblptrh	equ	0xFF7
  6889                           tblptrl	equ	0xFF6
  6890                           tablat	equ	0xFF5
  6891                           prodh	equ	0xFF4
  6892                           prodl	equ	0xFF3
  6893                           intcon	equ	0xFF2
  6894                           intcon2	equ	0xFF1
  6895                           intcon3	equ	0xFF0
  6896                           postinc0	equ	0xFEE
  6897                           fsr0h	equ	0xFEA
  6898                           fsr0l	equ	0xFE9
  6899                           wreg	equ	0xFE8
  6900                           postdec1	equ	0xFE5
  6901                           fsr1h	equ	0xFE2
  6902                           fsr1l	equ	0xFE1
  6903                           bsr	equ	0xFE0
  6904                           indf2	equ	0xFDF
  6905                           postinc2	equ	0xFDE
  6906                           postdec2	equ	0xFDD
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           pclatu	equ	0xFFB
  6911                           pclath	equ	0xFFA
  6912                           tblptru	equ	0xFF8
  6913                           tblptrh	equ	0xFF7
  6914                           tblptrl	equ	0xFF6
  6915                           tablat	equ	0xFF5
  6916                           prodh	equ	0xFF4
  6917                           prodl	equ	0xFF3
  6918                           intcon	equ	0xFF2
  6919                           intcon2	equ	0xFF1
  6920                           intcon3	equ	0xFF0
  6921                           postinc0	equ	0xFEE
  6922                           fsr0h	equ	0xFEA
  6923                           fsr0l	equ	0xFE9
  6924                           wreg	equ	0xFE8
  6925                           postdec1	equ	0xFE5
  6926                           fsr1h	equ	0xFE2
  6927                           fsr1l	equ	0xFE1
  6928                           bsr	equ	0xFE0
  6929                           indf2	equ	0xFDF
  6930                           postinc2	equ	0xFDE
  6931                           postdec2	equ	0xFDD
  6932                           fsr2h	equ	0xFDA
  6933                           fsr2l	equ	0xFD9
  6934                           status	equ	0xFD8
  6935                           
  6936                           	psect	rparam
  6937  0000                     pclatu	equ	0xFFB
  6938                           pclath	equ	0xFFA
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           prodh	equ	0xFF4
  6944                           prodl	equ	0xFF3
  6945                           intcon	equ	0xFF2
  6946                           intcon2	equ	0xFF1
  6947                           intcon3	equ	0xFF0
  6948                           postinc0	equ	0xFEE
  6949                           fsr0h	equ	0xFEA
  6950                           fsr0l	equ	0xFE9
  6951                           wreg	equ	0xFE8
  6952                           postdec1	equ	0xFE5
  6953                           fsr1h	equ	0xFE2
  6954                           fsr1l	equ	0xFE1
  6955                           bsr	equ	0xFE0
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8


Data Sizes:
    Strings     247
    Constant    10
    Data        41
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     59      97
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(COMRAM[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_28(CODE[16]), STR_23(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    HD44780_Puts@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), STR_26(CODE[11]), STR_25(CODE[17]), STR_24(CODE[11]), 
		 -> STR_22(CODE[17]), STR_21(CODE[14]), STR_20(CODE[17]), STR_19(CODE[14]), 
		 -> STR_18(CODE[17]), STR_17(CODE[12]), STR_16(CODE[17]), STR_15(CODE[12]), 
		 -> STR_14(CODE[17]), STR_13(CODE[11]), STR_12(CODE[17]), STR_11(CODE[11]), 
		 -> STR_10(CODE[6]), STR_9(CODE[15]), STR_8(CODE[5]), STR_7(CODE[15]), 
		 -> STR_6(CODE[17]), STR_5(CODE[11]), STR_4(CODE[17]), STR_3(CODE[11]), 
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _printf->___fttol
    _printf->_putch
    _putch->_HD44780_CursorSet
    ___lwmod->___lwdiv
    ___ftmul->___ftadd
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _SSEG_Print->___lwmod
    _HD44780_Puts->_HD44780_CursorSet
    _HD44780_Data->_HD44780_Cmd4bit
    _HD44780_CursorSet->_HD44780_Cmd
    _HD44780_Init->_HD44780_Cmd
    _HD44780_DisplayOn->_HD44780_Cmd
    _HD44780_Clear->_HD44780_Cmd
    _HD44780_Cmd->_HD44780_Cmd4bit
    _HD44780_Cmd4bit->_HD44780_Delay

Critical Paths under _ExternalInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ExternalInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ExternalInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ExternalInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ExternalInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ExternalInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ExternalInterrupt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   29363
                                             56 COMRAM     3     3      0
                            _BusyADC
                         _ConvertADC
                              _Delay
                            _Delayms
                      _HD44780_Clear
                  _HD44780_CursorSet
                       _HD44780_Init
                       _HD44780_Puts
                        _KEYPAD_Init
                  _KEYPAD_KeytoASCII
                        _KEYPAD_Read
                            _OpenADC
                            _ReadADC
                          _SSEG_Init
                         _SSEG_Print
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                            ___lwmod
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    21      4    4485
                                             32 COMRAM    21    17      4
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0    2349
                                             31 COMRAM     1     1      0
                  _HD44780_CursorSet
                       _HD44780_Data
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     415
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                             17 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     109
                                             17 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2715
                                             41 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3331
                                             29 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2186
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SSEG_Print                                           8     4      4     476
                                             29 COMRAM     8     4      4
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SSEG_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     282
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_Read                                          2     0      2       0
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_KeytoASCII                                    2     0      2     240
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _KEYPAD_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HD44780_Puts                                         4     1      3    5744
                                             31 COMRAM     4     1      3
                  _HD44780_CursorSet
                       _HD44780_Data
 ---------------------------------------------------------------------------------
 (3) _HD44780_Data                                         1     1      0     754
                                             24 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (3) _HD44780_CursorSet                                    6     5      1    1529
                                             25 COMRAM     6     5      1
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (1) _HD44780_Init                                         2     1      1    4346
                                             25 COMRAM     2     1      1
                      _HD44780_Clear
                        _HD44780_Cmd
                    _HD44780_Cmd4bit
                      _HD44780_Delay
                  _HD44780_DisplayOn
                   _HD44780_InitPins
 ---------------------------------------------------------------------------------
 (2) _HD44780_InitPins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HD44780_DisplayOn                                    0     0      0     754
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (2) _HD44780_Clear                                        0     0      0    1376
                        _HD44780_Cmd
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd                                          1     1      0     754
                                             24 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd4bit                                      2     2      0     710
                                             22 COMRAM     2     2      0
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (5) _HD44780_Delay                                        5     3      2     622
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              5     3      2    1262
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     3      2     110
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ExternalInterrupt                                   17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay
   _Delayms
   _HD44780_Clear
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
     _HD44780_Delay
   _HD44780_CursorSet
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
   _HD44780_Init
     _HD44780_Clear
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
       _HD44780_Delay
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
     _HD44780_Cmd4bit
       _HD44780_Delay
     _HD44780_Delay
     _HD44780_DisplayOn
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
     _HD44780_InitPins
   _HD44780_Puts
     _HD44780_CursorSet
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
     _HD44780_Data
       _HD44780_Cmd4bit
         _HD44780_Delay
   _KEYPAD_Init
   _KEYPAD_KeytoASCII
   _KEYPAD_Read
   _OpenADC
   _ReadADC
   _SSEG_Init
   _SSEG_Print
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _printf
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _HD44780_CursorSet
         _HD44780_Cmd
           _HD44780_Cmd4bit
             _HD44780_Delay
       _HD44780_Data
         _HD44780_Cmd4bit
           _HD44780_Delay

 _ExternalInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3B      61       1       76.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      15        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Mar 20 18:47:17 2016

               HD44780_Puts@x 0023                 HD44780_Puts@y 0020               HD44780_Puts@str 0021  
              SSEG_Print@sseg 001E                            l51 177E                            l45 1726  
                          bsr 000FE0           ___wmul@multiplicand 0014                   __CFG_BORV$2 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  ___ftadd@exp1 0029                  ___ftadd@exp2 0028  
                ___ftadd@sign 0027                           l100 041A                           l411 1534  
                         l422 17E4                           l280 1002                           l281 0EFE  
                         l193 163A                           l290 0F9C                           l282 0F0C  
                         l419 18D6                           l196 1752                           l292 0FC8  
                         l284 0F38                           l293 0FD6                           l285 0F46  
                         l294 0FE4                           l286 0F54                           l279 0EF0  
                         l288 0F80                           l640 1706                           l384 0B24  
                         l289 0F8E                           l730 12A6                           l299 14D8  
                         l389 18E4                           l741 127E                           l817 10FA  
                         l770 0D5A                           l771 0ED8                           l827 17FC  
                         l853 182A                           l774 0D84                           l838 11E0  
                         l785 0E46                           l945 158A                           l794 0E62  
                         l955 167E                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _dcf 0056                           prod 000FF3                           wreg 000FE8  
                ?_KEYPAD_Init 0001                  ?_KEYPAD_Read 0012                  __CFG_LVP$OFF 000000  
    __size_of_HD44780_Cmd4bit 0088                  __CFG_WDT$OFF 000000                          l2200 157E  
                        l2210 1654                          l2114 161C                          l2300 13B4  
                        l2212 165C                          l2108 1606                          l2222 1712  
                        l2150 11F2                          l2118 1630                          l2064 1746  
                        l2304 13C8                          l2216 1672                          l2208 164A  
                        l2136 1822                          l2250 12D8                          l2306 13CE  
                        l2162 1246                          l2154 1202                          l2228 1772  
                        l2172 1286                          l2164 1266                          l2156 120E  
                        l2166 1272                          l2158 122E                          l2190 1558  
                        l2502 0884                          l2088 16A8                          l2416 0FAA  
                        l2360 0F1A                          l2192 1560                          l2520 0928  
                        l2290 1376                          l2282 135C                          l2178 1298  
                        l2530 0962                          l2522 0932                          l2452 147A  
                        l2444 0FF2                          l2188 154E                          l2532 0976  
                        l2524 093A                          l2516 0912                          l2508 08AE  
                        l2462 148E                          l2630 0D9E                          l2710 1090  
                        l2526 094E                          l2542 09A0                          l2296 1396  
                        l2480 14B8                          l2456 1480                          l2640 0DC6  
                        l2624 0D92                          l2720 10BE                          l2560 0A06  
                        l2536 098C                          l2544 09CC                          l2474 14AA  
                        l2650 0E02                          l2618 0D68                          l2714 10A6  
                        l2706 107E                          l2554 09F6                          l2802 0226  
                        l2492 14D4                          l2468 149C                          l2388 0F62  
                        l2660 0E3A                          l2652 0E0A                          l2724 10D4  
                        l2716 10AC                          l2580 0A78                          l2564 0A2A  
                        l2556 09FA                          l2900 04FA                          l2820 02AC  
                        l2486 14C6                          l2646 0DEA                          l2750 111A  
                        l2590 0AAC                          l2582 0A80                          l2574 0A4A  
                        l2806 0240                          l2736 16E2                          l2648 0DF6  
                        l2592 0AB2                          l2568 0A2E                          l2912 057C  
                        l2666 0E80                          l2658 0E2E                          l2586 0A98  
                        l2578 0A6E                          l2498 0874                          l2930 060A  
                        l2914 058A                          l2826 02D6                          l2842 035E  
                        l2818 02A4                          l2676 0EB2                          l2692 104A  
                        l2780 11AC                          l2772 1184                          l2596 0AFC  
                        l2932 0612                          l2860 03E8                          l2844 036A  
                        l2686 1022                          l2774 118A                          l2782 11B6  
                        l2598 0B08                          l2950 068A                          l2918 05A6  
                        l2862 03F0                          l2688 103C                          l2768 1174  
                        l2952 0696                          l2880 0464                          l2848 0384  
                        l2786 11CE                          l2778 119E                          l2970 071E  
                        l2938 063C                          l2874 043C                          l2956 06B2  
                        l2948 067C                          l2892 04C8                          l2876 0448  
                        l2990 085C                          l2894 04D0                          l2976 0748  
                        l2968 0716                          l2978 074E                          l2988 0850  
                        STR_1 7FC7                          STR_2 7F6E                          STR_3 7FDD  
                        STR_4 7F4C                          STR_5 7FDD                          STR_6 7F4C  
                        STR_7 7F8F                          STR_8 7FF9                          STR_9 7F9E  
                        u2040 0B34                          u2105 0CC0                          u3010 04BC  
                        u2115 0CFA                          u2060 0B50                          u3110 070A  
                        u3030 0572                          u2058 0B36                          u1700 1408  
                        u3060 05FE                          u2085 0C52                          u2078 0B52  
                        u3207 0F64                          u2095 0C8A                          u1720 1424  
                        u3217 0FAC                          u2530 18E0                          u3227 0FF4  
                        u1740 143E                          u3237 1748                          u2541 0D26  
                        u1718 140A                          u3247 1718                          u2551 0D3A  
                        u1680 13EE                          u3257 1774                          u1738 1426  
                        u3197 0F1C                          u1758 1440                          u2751 1014  
                        u2831 110C                          u2920 0298                          u1698 13F0  
                        u2850 1138                          u2771 1032                          u2940 0352  
                        u2855 1130                          u2970 03DC               ??_HD44780_Delay 0014  
             ??_HD44780_Clear 001A                          _main 01AE                  ___ftpack@arg 0012  
                ___ftpack@exp 0015                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
               __CFG_BOREN$ON 000000                          prodh 000FF4                          prodl 000FF3  
                        start 01AA                 __CFG_IESO$OFF 000000               __end_of_Delayms 173C  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0037                  ___param_bank 000010  
                ___ftmul@sign 0038               __end_of_BusyADC 18E6               __end_of_ReadADC 18D8  
             __end_of_OpenADC 1538                  ___fttol@exp1 0020                  ___fttol@lval 001C  
                       ?_main 0001               __end_of___ftadd 0EDA                         STR_10 7FF3  
                       STR_11 7FE8                         STR_12 7F5D                         STR_20 7F19  
                       STR_21 7FAD                         STR_13 7FE8                         STR_22 7F19  
                       STR_14 7F5D                         STR_15 7FBB                         STR_23 7F07  
                       STR_24 7FD2                         STR_16 7F2A                         STR_17 7FBB  
                       STR_25 7F3B                         STR_18 7F2A                         STR_26 7FD2  
                       STR_27 7F3B                         STR_19 7FAD                         STR_28 7F7F  
             __end_of___ftneg 180A               __end_of___ftmul 10FC               __end_of___fttol 11E2  
             __end_of___lwdiv 1594                         i1l140 00DE                         i1l150 00D4  
                       i1l163 0164               __end_of___lwmod 1688                         _Delay 1768  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                         _adcin 0045                __CFG_EBTRB$OFF 000000  
               ___awtoft@sign 001D               __end_of_dpowers 7F07                         _lamda 005D  
             __end_of_isdigit 182C                 ___ftpack@sign 0016            __size_of_SSEG_Init 002A  
                       _state 0053                         _putch 15EA                    _ConvertADC 18FC  
                       tablat 000FF5                   ?_SSEG_Print 001E                         status 000FD8  
             __initialization 1594      __end_of_HD44780_InitPins 1888                  __end_of_main 086A  
              __CFG_OSC$HSPLL 000000                        ??_main 0039                 ___fttol@sign1 001B  
               __activetblptr 000002                        ?_Delay 0012                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                      _ADRESL 000FC3              __end_of___awtoft 1708                        ?_putch 0001  
            __end_of___ftpack 12A8                        i1l2000 0130                        i1l2004 0144  
                      i1l1960 0074                        i1l1972 00AE                        i1l1964 0086  
                      i1l1992 0108                        i1l1968 009A                        i1l1976 00C2  
                      i1l1996 011C                        i1l1988 00F6                        Delay@i 0015  
                   ??_Delayms 0014                     ??_BusyADC 0012                     ??_ReadADC 0014  
           ??_HD44780_Cmd4bit 0017                     ??_OpenADC 0014                __CFG_XINST$OFF 000000  
                      ___wmul 17BE                     ??___ftadd 0024                __CFG_STVREN$ON 000000  
                   ??___ftneg 0015                     ??___ftmul 0030                     ??___fttol 0016  
                   ??___lwdiv 0016                     ??___lwmod 001D             __end_of_SSEG_Init 17BE  
                      clear_0 159A                        _printf 086A           __size_of_SSEG_Print 01F0  
       ___ftmul@f3_as_product 0034                  __pdataCOMRAM 0059                     ??_isdigit 0012  
                __mediumconst 7EFC                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0020                   ?_ConvertADC 0001  
        __size_of_KEYPAD_Init 0022          __size_of_KEYPAD_Read 012A                    __accesstop 0080  
     __end_of__initialization 15E0               __CFG_PBADEN$OFF 000000                    ___ftadd@f1 001E  
                  ___ftadd@f2 0021             _KEYPAD_KeytoASCII 146A                 ___rparam_used 000001  
                  ___ftneg@f1 0012                 ??_HD44780_Cmd 0019                    ___awtoft@c 001A  
          ?_KEYPAD_KeytoASCII 0012                 __end_of_Delay 1794                    ___ftmul@f1 002A  
                  ___ftmul@f2 002D                    ___fttol@f1 0012                __pcstackCOMRAM 0001  
                __pidataBANK0 184E           ??_KEYPAD_KeytoASCII 0014                 __end_of_putch 163C  
                     ??_Delay 0014                       ??_putch 0020     __end_of_KEYPAD_KeytoASCII 14DA  
                     ?___wmul 0012           __end_of_HD44780_Cmd 18B4           __size_of_ConvertADC 0004  
                   ?___awtoft 001A                     ?___ftpack 0012                       ?_printf 0021  
                     Delay@us 0012                  ??_SSEG_Print 0022                       _Delayms 1708  
                     _BusyADC 18D8                       _ReadADC 18C8         __end_of_HD44780_Delay 1768  
       __end_of_HD44780_Clear 18C8                       _OpenADC 14DA                       __Hparam 0000  
                     __Lparam 0000             ?_HD44780_InitPins 0001                       ___ftadd 0D16  
                     ___ftneg 17E6               __size_of___wmul 0028                       ___ftmul 1004  
                     ___fttol 10FC                       ___lwdiv 1538                       ___lwmod 163C  
          ??_HD44780_InitPins 0012                       __pcinit 1594                    ??___awtoft 001D  
                  ??___ftpack 0017                       __ramtop 0600                       __ptext0 01AE  
                     __ptext1 086A                       __ptext2 15EA                       __ptext3 180A  
                     __ptext4 17BE                       __ptext5 163C                       __ptext6 1538  
                     __ptext7 10FC                       __ptext8 17E6                       __ptext9 1004  
             __size_of_printf 02BC                       _counter 0047            __end_of_SSEG_Print 0D16  
                     _dpowers 7EFD                       _isdigit 180A                       _int_key 0060  
             _HD44780_Cmd4bit 13E2                OpenADC@config2 0012          end_of_initialization 15E0  
  __size_of_KEYPAD_KeytoASCII 0070                 __Lmediumconst 7EFC                     Delayms@ms 0012  
               ?_HD44780_Data 0001                 ?_HD44780_Init 001A                 ?_HD44780_Puts 0020  
                 _HD44780_Cmd 189E             _ExternalInterrupt 0018                       printf@c 0035  
                     printf@f 0021                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE            ?_ExternalInterrupt 0001  
                   _PORTBbits 000F81                     _PORTDbits 000F83          HD44780_CursorSet@col 001F  
        HD44780_CursorSet@row 001A           ??_ExternalInterrupt 0001                     _SSEG_Init 1794  
                  _sseg_codes 0080                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
                 SSEG_Print@n 0020                  ??_ConvertADC 0012                   printf@width 0033  
   __end_of_ExternalInterrupt 01AA                ??_HD44780_Data 0019                ??_HD44780_Init 001B  
              ??_HD44780_Puts 0023                   ___ftmul@exp 0033                __end_of___wmul 17E6  
               __pidataCOMRAM 18F2            __end_of_ConvertADC 1900       __end_of_HD44780_Cmd4bit 146A  
                  ?_SSEG_Init 0001                __end_of_printf 0B26           start_initialization 1594  
               ??_KEYPAD_Init 0012                 ??_KEYPAD_Read 0014            HD44780_Cmd4bit@cmd 0018  
                    ??___wmul 0016                   __pdataBANK0 0080              __CFG_LPT1OSC$OFF 000000  
                    ??_printf 0025             __size_of___awtoft 003C             __size_of___ftpack 00C6  
                 __pbssCOMRAM 003C                  _isdigit$1751 0013                      ?_Delayms 0012  
         __end_of_KEYPAD_Init 184E           __end_of_KEYPAD_Read 1004                      ?_BusyADC 0001  
                    ?_ReadADC 0012    __size_of_ExternalInterrupt 0192             OpenADC@portconfig 0013  
                    ?_OpenADC 0012                     _main$2010 0039              ___lwdiv@dividend 0012  
           __CFG_CCP2MX$PORTC 000000                 __pmediumconst 7EFC                      ?___ftadd 001E  
                    ?___ftneg 0012                      ?___ftmul 002A                      ?___fttol 0012  
                    ?___lwdiv 0012                      ?___lwmod 0019                   __pintcodelo 0018  
            ?_HD44780_Cmd4bit 0001                   ??_SSEG_Init 0012                      ?_isdigit 0001  
        __end_of_HD44780_Data 189E          __end_of_HD44780_Init 134E                __size_of_Delay 002C  
        __end_of_HD44780_Puts 13E2     __size_of_HD44780_InitPins 001A              ___lwdiv@quotient 0016  
              __size_of_putch 0052                ___wmul@product 0016                 OpenADC@config 0016  
                    _LATAbits 000F89                      _LATCbits 000F8B                      _LATEbits 000F8D  
                    _PIE1bits 000F9D                      Delayms@i 0015                      i1u162_20 0158  
                ?_HD44780_Cmd 0001                      _PIR1bits 000F9E              __CFG_WDTPS$32768 000000  
                   _sseg_flag 0051                    _ADCON0bits 000FC2             ___wmul@multiplier 0012  
  KEYPAD_KeytoASCII@KeyNumber 0012                    printf@flag 002E                    printf@prec 002B  
      __size_of_HD44780_Delay 002C        __size_of_HD44780_Clear 0014                   _KEYPAD_Init 182C  
                 _KEYPAD_Read 0EDA                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 15B4                     copy_data1 15D4  HD44780_CursorSet@row_offsets 001B  
           _HD44780_DisplayOn 18E6              __size_of_Delayms 0034            ?_HD44780_DisplayOn 0001  
            __size_of_BusyADC 000E              __size_of_ReadADC 0010                      __Hrparam 0000  
            __size_of_OpenADC 005E                      __Lrparam 0000             _HD44780_CursorSet 1688  
         ??_HD44780_DisplayOn 001A              __size_of___ftadd 01C4              __size_of___ftneg 0024  
            __size_of___ftmul 00F8              __size_of___fttol 00E6              __size_of___lwdiv 005C  
            __size_of___lwmod 004C            ?_HD44780_CursorSet 001A                      ___awtoft 16CC  
                    ___ftpack 11E2                      _adc_flag 0043                      _char_key 0055  
         ??_HD44780_CursorSet 001B              __size_of_isdigit 0022               ___lwdiv@divisor 0014  
             ___lwdiv@counter 0018                      __ptext10 0D16                      __ptext11 16CC  
                    __ptext20 134E                      __ptext12 11E2                      __ptext21 1888  
                    __ptext13 0B26                      __ptext30 1708                      __ptext22 1688  
                    __ptext14 1794                      __ptext31 1768                      __ptext23 12A8  
                    __ptext15 18C8                      __ptext32 18FC                      __ptext24 186E  
                    __ptext16 14DA                      __ptext33 18D8                      __ptext25 18E6  
                    __ptext17 0EDA                      __ptext26 18B4                      __ptext18 146A  
                    __ptext27 189E                      __ptext19 182C                      __ptext28 13E2  
                    __ptext29 173C                   _keypad_flag 0049                      _lcd_flag 004B  
                    _led_flag 004D     __end_of_HD44780_DisplayOn 18F2                 __size_of_main 06BC  
               _HD44780_Delay 173C                 _HD44780_Clear 18B4     __end_of_HD44780_CursorSet 16CC  
                   printf@len 002F                     printf@val 0031         __size_of_HD44780_Data 0016  
       __size_of_HD44780_Init 00A6         __size_of_HD44780_Puts 0094                    _INTCONbits 000FF2  
            _HD44780_InitPins 186E                      isdigit@c 0014              HD44780_Data@data 0019  
                    intlevel1 0000              ___lwmod@dividend 0019                ?_HD44780_Delay 0012  
              ?_HD44780_Clear 0001        HD44780_CursorSet@F4400 0059                  _HD44780_Data 1888  
                _HD44780_Init 12A8                  _HD44780_Opts 003C                  _HD44780_Puts 134E  
                    printf@ap 002C                      printf@cp 0029          __size_of_HD44780_Cmd 0016  
            HD44780_Init@cols 001B              HD44780_Init@rows 001A               HD44780_Delay@us 0012  
             ___lwmod@divisor 001B               ___lwmod@counter 001D    __size_of_HD44780_DisplayOn 000C  
              HD44780_Cmd@cmd 0019                HD44780_Delay@i 0015                    _SSEG_Print 0B26  
                _sseg_counter 004F    __size_of_HD44780_CursorSet 0044  
