

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Mar 20 18:50:17 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  0012B6                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for HD44780_CursorSet@F4400
    47  0012B6  00                 	db	0
    48  0012B7  40                 	db	64
    49  0012B8  14                 	db	20
    50  0012B9  54                 	db	84
    51                           
    52                           ;initializer for _lamda
    53                           ;main.c: 24: double dcf = 0;
    54  0012BA  CD                 	db	205
    55  0012BB  CC                 	db	204
    56  0012BC  3D                 	db	61
    57                           
    58                           	psect	smallconst
    59  000600                     __psmallconst:
    60                           	opt stack 0
    61  000600  00                 	db	0
    62  000601                     _dpowers:
    63                           	opt stack 0
    64  000601  0001               	dw	1
    65  000603  000A               	dw	10
    66  000605  0064               	dw	100
    67  000607  03E8               	dw	1000
    68  000609  2710               	dw	10000
    69  00060B                     __end_of_dpowers:
    70                           	opt stack 0
    71  0000                     _ADCON0	set	4034
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON1	set	4033
    74  0000                     _ADCON2	set	4032
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _INTCONbits	set	4082
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PIR1bits	set	3998
    80  0000                     _PORTAbits	set	3968
    81  0000                     _PORTBbits	set	3969
    82  0000                     _TRISAbits	set	3986
    83  0000                     _TRISBbits	set	3987
    84  00060B                     STR_1:
    85  00060B  41                 	db	65	;'A'
    86  00060C  44                 	db	68	;'D'
    87  00060D  43                 	db	67	;'C'
    88  00060E  20                 	db	32
    89  00060F  56                 	db	86	;'V'
    90  000610  61                 	db	97	;'a'
    91  000611  6C                 	db	108	;'l'
    92  000612  75                 	db	117	;'u'
    93  000613  65                 	db	101	;'e'
    94  000614  3A                 	db	58	;':'
    95  000615  00                 	db	0
    96  000616                     STR_2:
    97  000616  25                 	db	37
    98  000617  34                 	db	52	;'4'
    99  000618  64                 	db	100	;'d'
   100  000619  00                 	db	0
   101                           
   102                           ; #config settings
   103  00061A  00                 	db	0	; dummy byte at the end
   104  0000                     
   105                           	psect	cinit
   106  001102                     __pcinit:
   107                           	opt stack 0
   108  001102                     start_initialization:
   109                           	opt stack 0
   110  001102                     __initialization:
   111                           	opt stack 0
   112                           
   113                           ; Clear objects allocated to COMRAM (10 bytes)
   114  001102  EE00  F02D         	lfsr	0,__pbssCOMRAM
   115  001106  0E0A               	movlw	10
   116  001108                     clear_0:
   117  001108  6AEE               	clrf	postinc0,c
   118  00110A  06E8               	decf	wreg,f,c
   119  00110C  E1FD               	bnz	clear_0
   120                           
   121                           ; Initialize objects allocated to COMRAM (7 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  00110E  0EB6               	movlw	low __pidataCOMRAM
   124  001110  6EF6               	movwf	tblptrl,c
   125  001112  0E12               	movlw	high __pidataCOMRAM
   126  001114  6EF7               	movwf	tblptrh,c
   127  001116  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  001118  6EF8               	movwf	tblptru,c
   129  00111A  EE00  F037         	lfsr	0,__pdataCOMRAM
   130  00111E  EE10 F007          	lfsr	1,7
   131  001122                     copy_data0:
   132  001122  0009               	tblrd		*+
   133  001124  CFF5 FFEE          	movff	tablat,postinc0
   134  001128  50E5               	movf	postdec1,w,c
   135  00112A  50E1               	movf	fsr1l,w,c
   136  00112C  E1FA               	bnz	copy_data0
   137  00112E                     end_of_initialization:
   138                           	opt stack 0
   139  00112E                     __end_of__initialization:
   140                           	opt stack 0
   141  00112E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   142  001130  6EF8               	movwf	tblptru,c
   143  001132  0100               	movlb	0
   144  001134  EF06  F005         	goto	_main	;jump to C main() function
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	bssCOMRAM
   155  00002D                     __pbssCOMRAM:
   156                           	opt stack 0
   157  00002D                     _HD44780_Opts:
   158                           	opt stack 0
   159  00002D                     	ds	7
   160  000034                     _dcf:
   161                           	opt stack 0
   162  000034                     	ds	3
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           postdec1	equ	0xFE5
   170                           fsr1l	equ	0xFE1
   171                           
   172                           	psect	dataCOMRAM
   173  000037                     __pdataCOMRAM:
   174                           	opt stack 0
   175  000037                     HD44780_CursorSet@F4400:
   176                           	opt stack 0
   177  000037                     	ds	4
   178  00003B                     _lamda:
   179                           	opt stack 0
   180  00003B                     	ds	3
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	opt stack 0
   193  000001                     ??_isdigit:
   194  000001                     ?_ReadADC:
   195                           	opt stack 0
   196  000001                     ?___wmul:
   197                           	opt stack 0
   198  000001                     ?___lwdiv:
   199                           	opt stack 0
   200  000001                     ?___ftpack:
   201                           	opt stack 0
   202  000001                     ?___ftneg:
   203                           	opt stack 0
   204  000001                     ?___fttol:
   205                           	opt stack 0
   206  000001                     OpenADC@config2:
   207                           	opt stack 0
   208  000001                     Delayms@ms:
   209                           	opt stack 0
   210  000001                     Delay@us:
   211                           	opt stack 0
   212  000001                     HD44780_Delay@us:
   213                           	opt stack 0
   214  000001                     ___wmul@multiplier:
   215                           	opt stack 0
   216  000001                     ___lwdiv@dividend:
   217                           	opt stack 0
   218  000001                     ___ftpack@arg:
   219                           	opt stack 0
   220  000001                     ___ftneg@f1:
   221                           	opt stack 0
   222  000001                     ___fttol@f1:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x0
   226  000001                     	ds	1
   227  000002                     OpenADC@portconfig:
   228                           	opt stack 0
   229  000002                     _isdigit$1122:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x1
   233  000002                     	ds	1
   234  000003                     ??_OpenADC:
   235  000003                     ??_ReadADC:
   236  000003                     ??_Delayms:
   237  000003                     ??_Delay:
   238  000003                     ??_HD44780_Delay:
   239  000003                     isdigit@c:
   240                           	opt stack 0
   241  000003                     ___wmul@multiplicand:
   242                           	opt stack 0
   243  000003                     ___lwdiv@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x2
   247  000003                     	ds	1
   248  000004                     ___ftpack@exp:
   249                           	opt stack 0
   250  000004                     Delayms@i:
   251                           	opt stack 0
   252  000004                     Delay@i:
   253                           	opt stack 0
   254  000004                     HD44780_Delay@i:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x3
   258  000004                     	ds	1
   259  000005                     ??___fttol:
   260  000005                     OpenADC@config:
   261                           	opt stack 0
   262  000005                     ___ftpack@sign:
   263                           	opt stack 0
   264  000005                     ___wmul@product:
   265                           	opt stack 0
   266  000005                     ___lwdiv@quotient:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x4
   270  000005                     	ds	1
   271  000006                     ??_HD44780_Cmd4bit:
   272  000006                     ??___ftpack:
   273                           
   274                           ; 0 bytes @ 0x5
   275  000006                     	ds	1
   276  000007                     HD44780_Cmd4bit@cmd:
   277                           	opt stack 0
   278  000007                     ___lwdiv@counter:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x6
   282  000007                     	ds	1
   283  000008                     ?___lwmod:
   284                           	opt stack 0
   285  000008                     HD44780_Cmd@cmd:
   286                           	opt stack 0
   287  000008                     HD44780_Data@data:
   288                           	opt stack 0
   289  000008                     ___lwmod@dividend:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x7
   293  000008                     	ds	1
   294  000009                     ?___awtoft:
   295                           	opt stack 0
   296  000009                     HD44780_Init@rows:
   297                           	opt stack 0
   298  000009                     HD44780_CursorSet@row:
   299                           	opt stack 0
   300  000009                     ___awtoft@c:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x8
   304  000009                     	ds	1
   305  00000A                     HD44780_Init@cols:
   306                           	opt stack 0
   307  00000A                     ___fttol@sign1:
   308                           	opt stack 0
   309  00000A                     ___lwmod@divisor:
   310                           	opt stack 0
   311  00000A                     HD44780_CursorSet@row_offsets:
   312                           	opt stack 0
   313                           
   314                           ; 4 bytes @ 0x9
   315  00000A                     	ds	1
   316  00000B                     ___fttol@lval:
   317                           	opt stack 0
   318                           
   319                           ; 4 bytes @ 0xA
   320  00000B                     	ds	1
   321  00000C                     ___awtoft@sign:
   322                           	opt stack 0
   323  00000C                     ___lwmod@counter:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0xB
   327  00000C                     	ds	1
   328  00000D                     ?___ftadd:
   329                           	opt stack 0
   330  00000D                     ___ftadd@f1:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0xC
   334  00000D                     	ds	1
   335  00000E                     HD44780_CursorSet@col:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0xD
   339  00000E                     	ds	1
   340  00000F                     putch@c:
   341                           	opt stack 0
   342  00000F                     ___fttol@exp1:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0xE
   346  00000F                     	ds	1
   347  000010                     ?_printf:
   348                           	opt stack 0
   349  000010                     printf@f:
   350                           	opt stack 0
   351  000010                     ___ftadd@f2:
   352                           	opt stack 0
   353                           
   354                           ; 3 bytes @ 0xF
   355  000010                     	ds	3
   356  000013                     ??___ftadd:
   357                           
   358                           ; 0 bytes @ 0x12
   359  000013                     	ds	1
   360  000014                     ??_printf:
   361                           
   362                           ; 0 bytes @ 0x13
   363  000014                     	ds	2
   364  000016                     ___ftadd@sign:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x15
   368  000016                     	ds	1
   369  000017                     ___ftadd@exp2:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x16
   373  000017                     	ds	1
   374  000018                     ___ftadd@exp1:
   375                           	opt stack 0
   376  000018                     printf@ap:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380  000018                     	ds	1
   381  000019                     ?___ftmul:
   382                           	opt stack 0
   383  000019                     ___ftmul@f1:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0x18
   387  000019                     	ds	1
   388  00001A                     printf@prec:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392  00001A                     	ds	1
   393  00001B                     printf@flag:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x1A
   397  00001B                     	ds	1
   398  00001C                     printf@val:
   399                           	opt stack 0
   400  00001C                     ___ftmul@f2:
   401                           	opt stack 0
   402                           
   403                           ; 3 bytes @ 0x1B
   404  00001C                     	ds	2
   405  00001E                     printf@width:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x1D
   409  00001E                     	ds	1
   410  00001F                     ??___ftmul:
   411                           
   412                           ; 0 bytes @ 0x1E
   413  00001F                     	ds	1
   414  000020                     printf@c:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1F
   418  000020                     	ds	2
   419  000022                     ___ftmul@exp:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x21
   423  000022                     	ds	1
   424  000023                     ___ftmul@f3_as_product:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x22
   428  000023                     	ds	3
   429  000026                     ___ftmul@cntr:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x25
   433  000026                     	ds	1
   434  000027                     ___ftmul@sign:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x26
   438  000027                     	ds	1
   439  000028                     _main$1378:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x27
   443  000028                     	ds	3
   444  00002B                     main@adcin:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x2A
   448  00002B                     	ds	2
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           postdec1	equ	0xFE5
   456                           fsr1l	equ	0xFE1
   457                           
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 27 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  adcin           2   42[COMRAM] int 
   468 ;; Return value:  Size  Location     Type
   469 ;;		None               void
   470 ;; Registers used:
   471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         5       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0
   480 ;;      Totals:         5       0       0       0       0       0       0
   481 ;;Total ram usage:        5 bytes
   482 ;; Hardware stack levels required when called:    6
   483 ;; This function calls:
   484 ;;		_BusyADC
   485 ;;		_ConvertADC
   486 ;;		_Delay
   487 ;;		_Delayms
   488 ;;		_HD44780_CursorSet
   489 ;;		_HD44780_Init
   490 ;;		_OpenADC
   491 ;;		_ReadADC
   492 ;;		___awtoft
   493 ;;		___ftadd
   494 ;;		___ftmul
   495 ;;		___ftneg
   496 ;;		___fttol
   497 ;;		_printf
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504  000A0C                     __ptext0:
   505                           	opt stack 0
   506  000A0C                     _main:
   507                           	opt stack 25
   508                           
   509                           ;main.c: 29: TRISAbits.RA0 = 1;
   510                           
   511                           ;incstack = 0
   512  000A0C  8092               	bsf	3986,0,c	;volatile
   513                           
   514                           ;main.c: 30: PORTAbits.RA0 = 0;
   515  000A0E  9080               	bcf	3968,0,c	;volatile
   516                           
   517                           ;main.c: 32: int adcin;
   518                           ;main.c: 34: HD44780_Init(16, 2);
   519  000A10  0E02               	movlw	2
   520  000A12  6E09               	movwf	HD44780_Init@rows,c
   521  000A14  0E10               	movlw	16
   522  000A16  ECFE  F006         	call	_HD44780_Init
   523                           
   524                           ;main.c: 36: OpenADC(0b10001111 &
   525                           ;main.c: 37: 0b11111111 &
   526                           ;main.c: 38: 0b11111011,
   527                           ;main.c: 39: 0b10000111 &
   528                           ;main.c: 40: 0b11111100 &
   529                           ;main.c: 41: 0b01111111,
   530                           ;main.c: 42: 0b11111110);
   531  000A1A  0E04               	movlw	4
   532  000A1C  6E01               	movwf	OpenADC@config2,c
   533  000A1E  0EFE               	movlw	254
   534  000A20  6E02               	movwf	OpenADC@portconfig,c
   535  000A22  0E8B               	movlw	139
   536  000A24  EC95  F007         	call	_OpenADC
   537                           
   538                           ;main.c: 43: Delay(50);
   539  000A28  0E00               	movlw	0
   540  000A2A  6E02               	movwf	Delay@us+1,c
   541  000A2C  0E32               	movlw	50
   542  000A2E  6E01               	movwf	Delay@us,c
   543  000A30  ECCC  F008         	call	_Delay	;wreg free
   544                           
   545                           ;main.c: 45: HD44780_CursorSet(0,0);
   546  000A34  0E00               	movlw	0
   547  000A36  6E09               	movwf	HD44780_CursorSet@row,c
   548  000A38  0E00               	movlw	0
   549  000A3A  EC41  F008         	call	_HD44780_CursorSet
   550                           
   551                           ;main.c: 46: printf("ADC Value:");
   552  000A3E  0E0B               	movlw	low STR_1
   553  000A40  6E10               	movwf	printf@f,c
   554  000A42  0E06               	movlw	high STR_1
   555  000A44  6E11               	movwf	printf@f+1,c
   556  000A46  EC0E  F003         	call	_printf	;wreg free
   557  000A4A  D000               	goto	l1932
   558  000A4C                     l1932:
   559                           
   560                           ;main.c: 50: ConvertADC();
   561  000A4C  EC5F  F009         	call	_ConvertADC	;wreg free
   562                           
   563                           ;main.c: 51: while( BusyADC() );
   564  000A50  D000               	goto	l1934
   565  000A52                     l1934:
   566  000A52  EC4E  F009         	call	_BusyADC	;wreg free
   567  000A56  0900               	iorlw	0
   568  000A58  A4D8               	btfss	status,2,c
   569  000A5A  D7FB               	goto	l1934
   570                           
   571                           ;main.c: 52: adcin = ReadADC();
   572  000A5C  EC46  F009         	call	_ReadADC	;wreg free
   573  000A60  C001  F02B         	movff	?_ReadADC,main@adcin
   574  000A64  C002  F02C         	movff	?_ReadADC+1,main@adcin+1
   575                           
   576                           ;main.c: 54: dcf = (1-lamda)*dcf + lamda*adcin;
   577  000A68  C034  F01C         	movff	_dcf,___ftmul@f2
   578  000A6C  C035  F01D         	movff	_dcf+1,___ftmul@f2+1
   579  000A70  C036  F01E         	movff	_dcf+2,___ftmul@f2+2
   580  000A74  0E00               	movlw	0
   581  000A76  6E10               	movwf	___ftadd@f2,c
   582  000A78  0E80               	movlw	128
   583  000A7A  6E11               	movwf	___ftadd@f2+1,c
   584  000A7C  0E3F               	movlw	63
   585  000A7E  6E12               	movwf	___ftadd@f2+2,c
   586  000A80  C03B  F001         	movff	_lamda,___ftneg@f1
   587  000A84  C03C  F002         	movff	_lamda+1,___ftneg@f1+1
   588  000A88  C03D  F003         	movff	_lamda+2,___ftneg@f1+2
   589  000A8C  ECF6  F008         	call	___ftneg	;wreg free
   590  000A90  C001  F00D         	movff	?___ftneg,___ftadd@f1
   591  000A94  C002  F00E         	movff	?___ftneg+1,___ftadd@f1+1
   592  000A98  C003  F00F         	movff	?___ftneg+2,___ftadd@f1+2
   593  000A9C  EC24  F004         	call	___ftadd	;wreg free
   594  000AA0  C00D  F019         	movff	?___ftadd,___ftmul@f1
   595  000AA4  C00E  F01A         	movff	?___ftadd+1,___ftmul@f1+1
   596  000AA8  C00F  F01B         	movff	?___ftadd+2,___ftmul@f1+2
   597  000AAC  ECAC  F005         	call	___ftmul	;wreg free
   598  000AB0  C019  F028         	movff	?___ftmul,_main$1378
   599  000AB4  C01A  F029         	movff	?___ftmul+1,_main$1378+1
   600  000AB8  C01B  F02A         	movff	?___ftmul+2,_main$1378+2
   601                           
   602                           ;main.c: 54: dcf = (1-lamda)*dcf + lamda*adcin;
   603  000ABC  C028  F00D         	movff	_main$1378,___ftadd@f1
   604  000AC0  C029  F00E         	movff	_main$1378+1,___ftadd@f1+1
   605  000AC4  C02A  F00F         	movff	_main$1378+2,___ftadd@f1+2
   606  000AC8  C03B  F01C         	movff	_lamda,___ftmul@f2
   607  000ACC  C03C  F01D         	movff	_lamda+1,___ftmul@f2+1
   608  000AD0  C03D  F01E         	movff	_lamda+2,___ftmul@f2+2
   609  000AD4  C02B  F009         	movff	main@adcin,___awtoft@c
   610  000AD8  C02C  F00A         	movff	main@adcin+1,___awtoft@c+1
   611  000ADC  EC63  F008         	call	___awtoft	;wreg free
   612  000AE0  C009  F019         	movff	?___awtoft,___ftmul@f1
   613  000AE4  C00A  F01A         	movff	?___awtoft+1,___ftmul@f1+1
   614  000AE8  C00B  F01B         	movff	?___awtoft+2,___ftmul@f1+2
   615  000AEC  ECAC  F005         	call	___ftmul	;wreg free
   616  000AF0  C019  F010         	movff	?___ftmul,___ftadd@f2
   617  000AF4  C01A  F011         	movff	?___ftmul+1,___ftadd@f2+1
   618  000AF8  C01B  F012         	movff	?___ftmul+2,___ftadd@f2+2
   619  000AFC  EC24  F004         	call	___ftadd	;wreg free
   620  000B00  C00D  F034         	movff	?___ftadd,_dcf
   621  000B04  C00E  F035         	movff	?___ftadd+1,_dcf+1
   622  000B08  C00F  F036         	movff	?___ftadd+2,_dcf+2
   623                           
   624                           ;main.c: 55: HD44780_CursorSet(0,1);
   625  000B0C  0E01               	movlw	1
   626  000B0E  6E09               	movwf	HD44780_CursorSet@row,c
   627  000B10  0E00               	movlw	0
   628  000B12  EC41  F008         	call	_HD44780_CursorSet
   629                           
   630                           ;main.c: 56: printf("%4d", 1023-(int)dcf);
   631  000B16  0E16               	movlw	low STR_2
   632  000B18  6E10               	movwf	printf@f,c
   633  000B1A  0E06               	movlw	high STR_2
   634  000B1C  6E11               	movwf	printf@f+1,c
   635  000B1E  C034  F001         	movff	_dcf,___fttol@f1
   636  000B22  C035  F002         	movff	_dcf+1,___fttol@f1+1
   637  000B26  C036  F003         	movff	_dcf+2,___fttol@f1+2
   638  000B2A  EC28  F006         	call	___fttol	;wreg free
   639  000B2E  1E01               	comf	?___fttol,f,c
   640  000B30  1E02               	comf	?___fttol+1,f,c
   641  000B32  4A01               	infsnz	?___fttol,f,c
   642  000B34  2A02               	incf	?___fttol+1,f,c
   643  000B36  0EFF               	movlw	255
   644  000B38  2401               	addwf	?___fttol,w,c
   645  000B3A  6E12               	movwf	?_printf+2,c
   646  000B3C  0E03               	movlw	3
   647  000B3E  2002               	addwfc	?___fttol+1,w,c
   648  000B40  6E13               	movwf	?_printf+3,c
   649  000B42  EC0E  F003         	call	_printf	;wreg free
   650                           
   651                           ;main.c: 57: Delayms(1);
   652  000B46  0E00               	movlw	0
   653  000B48  6E02               	movwf	Delayms@ms+1,c
   654  000B4A  0E01               	movlw	1
   655  000B4C  6E01               	movwf	Delayms@ms,c
   656  000B4E  EC9C  F008         	call	_Delayms	;wreg free
   657  000B52  D77C               	goto	l1932
   658  000B54  EF00  F000         	goto	start
   659  000B58                     __end_of_main:
   660                           	opt stack 0
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           status	equ	0xFD8
   670                           
   671 ;; *************** function _printf *****************
   672 ;; Defined at:
   673 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  f               2   15[COMRAM] PTR const unsigned char 
   676 ;;		 -> STR_2(4), STR_1(11), 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  tmpval          4    0        struct .
   679 ;;  cp              3    0        PTR const unsigned char 
   680 ;;  width           2   29[COMRAM] int 
   681 ;;  val             2   27[COMRAM] unsigned int 
   682 ;;  ap              2   23[COMRAM] PTR void [1]
   683 ;;		 -> ?_printf(2), 
   684 ;;  len             2    0        unsigned int 
   685 ;;  c               1   31[COMRAM] char 
   686 ;;  flag            1   26[COMRAM] unsigned char 
   687 ;;  prec            1   25[COMRAM] char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  2   15[COMRAM] int 
   690 ;; Registers used:
   691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   697 ;;      Params:         4       0       0       0       0       0       0
   698 ;;      Locals:         9       0       0       0       0       0       0
   699 ;;      Temps:          4       0       0       0       0       0       0
   700 ;;      Totals:        17       0       0       0       0       0       0
   701 ;;Total ram usage:       17 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    5
   704 ;; This function calls:
   705 ;;		___lwdiv
   706 ;;		___lwmod
   707 ;;		___wmul
   708 ;;		_isdigit
   709 ;;		_putch
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text1
   716  00061C                     __ptext1:
   717                           	opt stack 0
   718  00061C                     _printf:
   719                           	opt stack 25
   720                           
   721                           ;doprnt.c: 466: va_list ap;
   722                           ;doprnt.c: 499: signed char c;
   723                           ;doprnt.c: 501: int width;
   724                           ;doprnt.c: 506: signed char prec;
   725                           ;doprnt.c: 508: unsigned char flag;
   726                           ;doprnt.c: 523: union {
   727                           ;doprnt.c: 524: unsigned long vd;
   728                           ;doprnt.c: 525: double integ;
   729                           ;doprnt.c: 526: } tmpval;
   730                           ;doprnt.c: 528: unsigned int val;
   731                           ;doprnt.c: 529: unsigned len;
   732                           ;doprnt.c: 530: const char * cp;
   733                           ;doprnt.c: 533: *ap = __va_start();
   734                           
   735                           ;incstack = 0
   736  00061C  0E12               	movlw	low (?_printf+2)
   737  00061E  6E18               	movwf	printf@ap,c
   738  000620  0E00               	movlw	high (?_printf+2)
   739  000622  6E19               	movwf	printf@ap+1,c
   740                           
   741                           ;doprnt.c: 536: while(c = *f++) {
   742  000624  D102               	goto	l1732
   743  000626                     l1656:
   744                           
   745                           ;doprnt.c: 538: if(c != '%')
   746  000626  0E25               	movlw	37
   747  000628  1820               	xorwf	printf@c,w,c
   748  00062A  B4D8               	btfsc	status,2,c
   749  00062C  D004               	goto	l1660
   750                           
   751                           ;doprnt.c: 540: {
   752                           ;doprnt.c: 541: (putch(c) );
   753  00062E  5020               	movf	printf@c,w,c
   754  000630  ECF2  F007         	call	_putch
   755                           
   756                           ;doprnt.c: 542: continue;
   757  000634  D0FA               	goto	l1732
   758  000636                     l1660:
   759                           
   760                           ;doprnt.c: 543: }
   761                           ;doprnt.c: 546: width = 0;
   762  000636  0E00               	movlw	0
   763  000638  6E1F               	movwf	printf@width+1,c
   764  00063A  0E00               	movlw	0
   765  00063C  6E1E               	movwf	printf@width,c
   766                           
   767                           ;doprnt.c: 548: flag = 0;
   768  00063E  0E00               	movlw	0
   769  000640  6E1B               	movwf	printf@flag,c
   770                           
   771                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
   772  000642  C010  FFF6         	movff	printf@f,tblptrl
   773  000646  C011  FFF7         	movff	printf@f+1,tblptrh
   774  00064A                     	if	0	;tblptru may be non-zero
   775  00064A                     	endif
   776  00064A                     	if	0	;tblptru may be non-zero
   777  00064A                     	endif
   778  00064A  0008               	tblrd		*
   779  00064C  50F5               	movf	tablat,w,c
   780  00064E  EC08  F009         	call	_isdigit
   781  000652  A0D8               	btfss	status,0,c
   782  000654  D039               	goto	l1676
   783                           
   784                           ;doprnt.c: 598: width = 0;
   785  000656  0E00               	movlw	0
   786  000658  6E1F               	movwf	printf@width+1,c
   787  00065A  0E00               	movlw	0
   788  00065C  6E1E               	movwf	printf@width,c
   789  00065E  D000               	goto	l1666
   790  000660                     l1666:
   791                           
   792                           ;doprnt.c: 600: width *= 10;
   793  000660  C01E  F001         	movff	printf@width,___wmul@multiplier
   794  000664  C01F  F002         	movff	printf@width+1,___wmul@multiplier+1
   795  000668  0E00               	movlw	0
   796  00066A  6E04               	movwf	___wmul@multiplicand+1,c
   797  00066C  0E0A               	movlw	10
   798  00066E  6E03               	movwf	___wmul@multiplicand,c
   799  000670  ECE2  F008         	call	___wmul	;wreg free
   800  000674  C001  F01E         	movff	?___wmul,printf@width
   801  000678  C002  F01F         	movff	?___wmul+1,printf@width+1
   802                           
   803                           ;doprnt.c: 601: width += *f++ - '0';
   804  00067C  0ED0               	movlw	208
   805  00067E  6E14               	movwf	??_printf& (0+255),c
   806  000680  0EFF               	movlw	255
   807  000682  6E15               	movwf	(??_printf+1)& (0+255),c
   808  000684  C010  FFF6         	movff	printf@f,tblptrl
   809  000688  C011  FFF7         	movff	printf@f+1,tblptrh
   810  00068C                     	if	0	;tblptru may be non-zero
   811  00068C                     	endif
   812  00068C                     	if	0	;tblptru may be non-zero
   813  00068C                     	endif
   814  00068C  0008               	tblrd		*
   815  00068E  50F5               	movf	tablat,w,c
   816  000690  6E16               	movwf	(??_printf+2)& (0+255),c
   817  000692  6A17               	clrf	(??_printf+3)& (0+255),c
   818  000694  5014               	movf	??_printf,w,c
   819  000696  2616               	addwf	??_printf+2,f,c
   820  000698  5015               	movf	??_printf+1,w,c
   821  00069A  2217               	addwfc	??_printf+3,f,c
   822  00069C  5016               	movf	??_printf+2,w,c
   823  00069E  261E               	addwf	printf@width,f,c
   824  0006A0  5017               	movf	??_printf+3,w,c
   825  0006A2  221F               	addwfc	printf@width+1,f,c
   826  0006A4  4A10               	infsnz	printf@f,f,c
   827  0006A6  2A11               	incf	printf@f+1,f,c
   828                           
   829                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
   830  0006A8  C010  FFF6         	movff	printf@f,tblptrl
   831  0006AC  C011  FFF7         	movff	printf@f+1,tblptrh
   832  0006B0                     	if	0	;tblptru may be non-zero
   833  0006B0                     	endif
   834  0006B0                     	if	0	;tblptru may be non-zero
   835  0006B0                     	endif
   836  0006B0  0008               	tblrd		*
   837  0006B2  50F5               	movf	tablat,w,c
   838  0006B4  EC08  F009         	call	_isdigit
   839  0006B8  A0D8               	btfss	status,0,c
   840  0006BA  D006               	goto	l1676
   841  0006BC  D7D1               	goto	l1666
   842                           
   843                           ;doprnt.c: 608: }
   844                           ;doprnt.c: 635: switch(c = *f++) {
   845  0006BE  D004               	goto	l1676
   846                           
   847                           ;doprnt.c: 638: goto alldone;
   848                           
   849                           ;doprnt.c: 637: case 0:
   850  0006C0  D0C2               	goto	l190
   851                           
   852                           ;doprnt.c: 698: case 'i':
   853                           ;doprnt.c: 699: break;
   854                           
   855                           ;doprnt.c: 697: case 'd':
   856  0006C2  D015               	goto	l1678
   857                           
   858                           ;doprnt.c: 813: continue;
   859                           
   860                           ;doprnt.c: 802: default:
   861  0006C4  D0B2               	goto	l1732
   862                           
   863                           ;doprnt.c: 822: }
   864  0006C6  D013               	goto	l1678
   865  0006C8                     l1676:
   866  0006C8  C010  FFF6         	movff	printf@f,tblptrl
   867  0006CC  C011  FFF7         	movff	printf@f+1,tblptrh
   868  0006D0  4A10               	infsnz	printf@f,f,c
   869  0006D2  2A11               	incf	printf@f+1,f,c
   870  0006D4                     	if	0	;tblptru may be non-zero
   871  0006D4                     	endif
   872  0006D4                     	if	0	;tblptru may be non-zero
   873  0006D4                     	endif
   874  0006D4  0008               	tblrd		*
   875  0006D6  CFF5 F020          	movff	tablat,printf@c
   876  0006DA  5020               	movf	printf@c,w,c
   877                           
   878                           ; Switch size 1, requested type "space"
   879                           ; Number of cases is 3, Range of values is 0 to 105
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte           10     6 (average)
   883                           ;	Chosen strategy is simple_byte
   884  0006DC  0A00               	xorlw	0	; case 0
   885  0006DE  B4D8               	btfsc	status,2,c
   886  0006E0  D0B2               	goto	l190
   887  0006E2  0A64               	xorlw	100	; case 100
   888  0006E4  B4D8               	btfsc	status,2,c
   889  0006E6  D003               	goto	l1678
   890  0006E8  0A0D               	xorlw	13	; case 105
   891  0006EA  A4D8               	btfss	status,2,c
   892  0006EC  D09E               	goto	l1732
   893  0006EE                     l1678:
   894                           
   895                           ;doprnt.c: 1253: {
   896                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   897  0006EE  C018  FFD9         	movff	printf@ap,fsr2l
   898  0006F2  C019  FFDA         	movff	printf@ap+1,fsr2h
   899  0006F6  CFDE F01C          	movff	postinc2,printf@val
   900  0006FA  CFDD F01D          	movff	postdec2,printf@val+1
   901  0006FE  0E02               	movlw	2
   902  000700  2618               	addwf	printf@ap,f,c
   903  000702  0E00               	movlw	0
   904  000704  2219               	addwfc	printf@ap+1,f,c
   905                           
   906                           ;doprnt.c: 1261: if((int)val < 0) {
   907  000706  AE1D               	btfss	printf@val+1,7,c
   908  000708  D007               	goto	l1688
   909                           
   910                           ;doprnt.c: 1262: flag |= 0x03;
   911  00070A  0E03               	movlw	3
   912  00070C  121B               	iorwf	printf@flag,f,c
   913                           
   914                           ;doprnt.c: 1263: val = -val;
   915  00070E  6C1C               	negf	printf@val,c
   916  000710  1E1D               	comf	printf@val+1,f,c
   917  000712  B0D8               	btfsc	status,0,c
   918  000714  2A1D               	incf	printf@val+1,f,c
   919  000716  D000               	goto	l1688
   920  000718                     l1688:
   921                           
   922                           ;doprnt.c: 1264: }
   923                           ;doprnt.c: 1266: }
   924                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   925  000718  0E01               	movlw	1
   926  00071A  6E20               	movwf	printf@c,c
   927  00071C                     l1690:
   928  00071C  0E05               	movlw	5
   929  00071E  1820               	xorwf	printf@c,w,c
   930  000720  B4D8               	btfsc	status,2,c
   931  000722  D016               	goto	l1702
   932  000724  D001               	goto	l1694
   933  000726  D014               	goto	l1702
   934  000728                     l1694:
   935                           
   936                           ;doprnt.c: 1306: if(val < dpowers[c])
   937  000728  5020               	movf	printf@c,w,c
   938  00072A  0D02               	mullw	2
   939  00072C  0E01               	movlw	low _dpowers
   940  00072E  24F3               	addwf	prodl,w,c
   941  000730  6EF6               	movwf	tblptrl,c
   942  000732  0E06               	movlw	high _dpowers
   943  000734  20F4               	addwfc	prodh,w,c
   944  000736  6EF7               	movwf	tblptrh,c
   945  000738                     	if	0	;There are less than 3 active tblptr bytes
   946  000738                     	endif
   947  000738  0009               	tblrd		*+
   948  00073A  50F5               	movf	tablat,w,c
   949  00073C  5C1C               	subwf	printf@val,w,c
   950  00073E  0009               	tblrd		*+
   951  000740  50F5               	movf	tablat,w,c
   952  000742  581D               	subwfb	printf@val+1,w,c
   953  000744  A0D8               	btfss	status,0,c
   954  000746  D004               	goto	l1702
   955  000748  D001               	goto	l1698
   956                           
   957                           ;doprnt.c: 1307: break;
   958  00074A  D002               	goto	l1702
   959  00074C                     l1698:
   960  00074C  2A20               	incf	printf@c,f,c
   961  00074E  D7E6               	goto	l1690
   962  000750                     l1702:
   963                           
   964                           ;doprnt.c: 1345: if(width && flag & 0x03)
   965  000750  501E               	movf	printf@width,w,c
   966  000752  101F               	iorwf	printf@width+1,w,c
   967  000754  B4D8               	btfsc	status,2,c
   968  000756  D00A               	goto	l1708
   969  000758  C01B  F014         	movff	printf@flag,??_printf
   970  00075C  0E03               	movlw	3
   971  00075E  1614               	andwf	??_printf,f,c
   972  000760  B4D8               	btfsc	status,2,c
   973  000762  D004               	goto	l1708
   974                           
   975                           ;doprnt.c: 1346: width--;
   976  000764  061E               	decf	printf@width,f,c
   977  000766  A0D8               	btfss	status,0,c
   978  000768  061F               	decf	printf@width+1,f,c
   979  00076A  D000               	goto	l1708
   980  00076C                     l1708:
   981                           
   982                           ;doprnt.c: 1381: if(width > c)
   983  00076C  0E80               	movlw	128
   984  00076E  BE20               	btfsc	printf@c,7,c
   985  000770  0E7F               	movlw	127
   986  000772  6E14               	movwf	??_printf& (0+255),c
   987  000774  501E               	movf	printf@width,w,c
   988  000776  5C20               	subwf	printf@c,w,c
   989  000778  501F               	movf	printf@width+1,w,c
   990  00077A  0A80               	xorlw	128
   991  00077C  5814               	subwfb	??_printf& (0+255),w,c
   992  00077E  B0D8               	btfsc	status,0,c
   993  000780  D007               	goto	l1712
   994                           
   995                           ;doprnt.c: 1382: width -= c;
   996  000782  5020               	movf	printf@c,w,c
   997  000784  5E1E               	subwf	printf@width,f,c
   998  000786  0E00               	movlw	0
   999  000788  BE20               	btfsc	printf@c,7,c
  1000  00078A  0EFF               	movlw	255
  1001  00078C  5A1F               	subwfb	printf@width+1,f,c
  1002  00078E  D005               	goto	l1714
  1003  000790                     l1712:
  1004                           
  1005                           ;doprnt.c: 1383: else
  1006                           ;doprnt.c: 1384: width = 0;
  1007  000790  0E00               	movlw	0
  1008  000792  6E1F               	movwf	printf@width+1,c
  1009  000794  0E00               	movlw	0
  1010  000796  6E1E               	movwf	printf@width,c
  1011  000798  D000               	goto	l1714
  1012  00079A                     l1714:
  1013                           
  1014                           ;doprnt.c: 1422: {
  1015                           ;doprnt.c: 1424: if(width
  1016                           ;doprnt.c: 1428: )
  1017  00079A  501E               	movf	printf@width,w,c
  1018  00079C  101F               	iorwf	printf@width+1,w,c
  1019  00079E  B4D8               	btfsc	status,2,c
  1020  0007A0  D00C               	goto	l1720
  1021  0007A2                     l1716:
  1022                           
  1023                           ;doprnt.c: 1430: (putch(' ') );
  1024  0007A2  0E20               	movlw	32
  1025  0007A4  ECF2  F007         	call	_putch
  1026                           
  1027                           ;doprnt.c: 1431: while(--width);
  1028  0007A8  061E               	decf	printf@width,f,c
  1029  0007AA  A0D8               	btfss	status,0,c
  1030  0007AC  061F               	decf	printf@width+1,f,c
  1031  0007AE  501E               	movf	printf@width,w,c
  1032  0007B0  101F               	iorwf	printf@width+1,w,c
  1033  0007B2  B4D8               	btfsc	status,2,c
  1034  0007B4  D002               	goto	l1720
  1035  0007B6  D7F5               	goto	l1716
  1036  0007B8  D000               	goto	l1720
  1037  0007BA                     l1720:
  1038                           
  1039                           ;doprnt.c: 1438: if(flag & 0x03)
  1040  0007BA  C01B  F014         	movff	printf@flag,??_printf
  1041  0007BE  0E03               	movlw	3
  1042  0007C0  1614               	andwf	??_printf,f,c
  1043  0007C2  B4D8               	btfsc	status,2,c
  1044  0007C4  D004               	goto	l1724
  1045                           
  1046                           ;doprnt.c: 1439: (putch('-') );
  1047  0007C6  0E2D               	movlw	45
  1048  0007C8  ECF2  F007         	call	_putch
  1049  0007CC  D000               	goto	l1724
  1050  0007CE                     l1724:
  1051                           
  1052                           ;doprnt.c: 1469: }
  1053                           ;doprnt.c: 1472: prec = c;
  1054  0007CE  C020  F01A         	movff	printf@c,printf@prec
  1055                           
  1056                           ;doprnt.c: 1474: while(prec--) {
  1057  0007D2  D025               	goto	l1730
  1058  0007D4                     l1726:
  1059                           
  1060                           ;doprnt.c: 1478: {
  1061                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1062  0007D4  501A               	movf	printf@prec,w,c
  1063  0007D6  0D02               	mullw	2
  1064  0007D8  0E01               	movlw	low _dpowers
  1065  0007DA  24F3               	addwf	prodl,w,c
  1066  0007DC  6EF6               	movwf	tblptrl,c
  1067  0007DE  0E06               	movlw	high _dpowers
  1068  0007E0  20F4               	addwfc	prodh,w,c
  1069  0007E2  6EF7               	movwf	tblptrh,c
  1070  0007E4                     	if	0	;There are less than 3 active tblptr bytes
  1071  0007E4                     	endif
  1072  0007E4  0009               	tblrd		*+
  1073  0007E6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1074  0007EA  000A               	tblrd		*-
  1075  0007EC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1076  0007F0  C01C  F001         	movff	printf@val,___lwdiv@dividend
  1077  0007F4  C01D  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1078  0007F8  ECC4  F007         	call	___lwdiv	;wreg free
  1079  0007FC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1080  000800  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1081  000804  0E00               	movlw	0
  1082  000806  6E0B               	movwf	___lwmod@divisor+1,c
  1083  000808  0E0A               	movlw	10
  1084  00080A  6E0A               	movwf	___lwmod@divisor,c
  1085  00080C  EC1B  F008         	call	___lwmod	;wreg free
  1086  000810  5008               	movf	?___lwmod,w,c
  1087  000812  0F30               	addlw	48
  1088  000814  6E20               	movwf	printf@c,c
  1089                           
  1090                           ;doprnt.c: 1523: }
  1091                           ;doprnt.c: 1524: (putch(c) );
  1092  000816  5020               	movf	printf@c,w,c
  1093  000818  ECF2  F007         	call	_putch
  1094  00081C  D000               	goto	l1730
  1095  00081E                     l1730:
  1096  00081E  061A               	decf	printf@prec,f,c
  1097  000820  281A               	incf	printf@prec,w,c
  1098  000822  B4D8               	btfsc	status,2,c
  1099  000824  D002               	goto	l1732
  1100  000826  D7D6               	goto	l1726
  1101  000828  D000               	goto	l1732
  1102  00082A                     l1732:
  1103  00082A  C010  FFF6         	movff	printf@f,tblptrl
  1104  00082E  C011  FFF7         	movff	printf@f+1,tblptrh
  1105  000832  4A10               	infsnz	printf@f,f,c
  1106  000834  2A11               	incf	printf@f+1,f,c
  1107  000836                     	if	0	;tblptru may be non-zero
  1108  000836                     	endif
  1109  000836                     	if	0	;tblptru may be non-zero
  1110  000836                     	endif
  1111  000836  0008               	tblrd		*
  1112  000838  CFF5 F020          	movff	tablat,printf@c
  1113  00083C  5020               	movf	printf@c,w,c
  1114  00083E  B4D8               	btfsc	status,2,c
  1115  000840  D002               	goto	l190
  1116  000842  D6F1               	goto	l1656
  1117  000844  D000               	goto	l190
  1118  000846                     l190:
  1119  000846  0012               	return		;funcret
  1120  000848                     __end_of_printf:
  1121                           	opt stack 0
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           postdec1	equ	0xFE5
  1131                           fsr1l	equ	0xFE1
  1132                           postinc2	equ	0xFDE
  1133                           postdec2	equ	0xFDD
  1134                           fsr2h	equ	0xFDA
  1135                           fsr2l	equ	0xFD9
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _putch *****************
  1139 ;; Defined at:
  1140 ;;		line 87 in file "../Libraries/pic18f4520_hd44780.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  c               1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  c               1   14[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         0       0       0       0       0       0       0
  1155 ;;      Locals:         1       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0
  1157 ;;      Totals:         1       0       0       0       0       0       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    4
  1161 ;; This function calls:
  1162 ;;		_HD44780_CursorSet
  1163 ;;		_HD44780_Data
  1164 ;; This function is called by:
  1165 ;;		_printf
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text2
  1170  000FE4                     __ptext2:
  1171                           	opt stack 0
  1172  000FE4                     _putch:
  1173                           	opt stack 25
  1174                           
  1175                           ;incstack = 0
  1176                           ;putch@c stored from wreg
  1177  000FE4  6E0F               	movwf	putch@c,c
  1178                           
  1179                           ;pic18f4520_hd44780.c: 89: if (HD44780_Opts.currentX >= HD44780_Opts.Cols) {
  1180  000FE6  5031               	movf	_HD44780_Opts+4,w,c
  1181  000FE8  5C32               	subwf	_HD44780_Opts+5,w,c
  1182  000FEA  A0D8               	btfss	status,0,c
  1183  000FEC  D009               	goto	l1468
  1184                           
  1185                           ;pic18f4520_hd44780.c: 90: HD44780_Opts.currentX = 0;
  1186  000FEE  0E00               	movlw	0
  1187  000FF0  6E32               	movwf	_HD44780_Opts+5,c
  1188                           
  1189                           ;pic18f4520_hd44780.c: 91: HD44780_Opts.currentY++;
  1190  000FF2  2A33               	incf	_HD44780_Opts+6,f,c
  1191                           
  1192                           ;pic18f4520_hd44780.c: 92: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.current
      +                          Y);
  1193  000FF4  C033  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  1194  000FF8  5032               	movf	_HD44780_Opts+5,w,c
  1195  000FFA  EC41  F008         	call	_HD44780_CursorSet
  1196  000FFE  D000               	goto	l1468
  1197  001000                     l1468:
  1198                           
  1199                           ;pic18f4520_hd44780.c: 93: }
  1200                           ;pic18f4520_hd44780.c: 94: if (c == '\n') {
  1201  001000  0E0A               	movlw	10
  1202  001002  180F               	xorwf	putch@c,w,c
  1203  001004  A4D8               	btfss	status,2,c
  1204  001006  D007               	goto	l1474
  1205                           
  1206                           ;pic18f4520_hd44780.c: 95: HD44780_Opts.currentY++;
  1207  001008  2A33               	incf	_HD44780_Opts+6,f,c
  1208                           
  1209                           ;pic18f4520_hd44780.c: 96: HD44780_CursorSet(HD44780_Opts.currentX, HD44780_Opts.current
      +                          Y);
  1210  00100A  C033  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  1211  00100E  5032               	movf	_HD44780_Opts+5,w,c
  1212  001010  EC41  F008         	call	_HD44780_CursorSet
  1213                           
  1214                           ;pic18f4520_hd44780.c: 97: } else if (c == '\r') {
  1215  001014  D00F               	goto	l75
  1216  001016                     l1474:
  1217  001016  0E0D               	movlw	13
  1218  001018  180F               	xorwf	putch@c,w,c
  1219  00101A  A4D8               	btfss	status,2,c
  1220  00101C  D006               	goto	l1478
  1221                           
  1222                           ;pic18f4520_hd44780.c: 98: HD44780_CursorSet(0, HD44780_Opts.currentY);
  1223  00101E  C033  F009         	movff	_HD44780_Opts+6,HD44780_CursorSet@row
  1224  001022  0E00               	movlw	0
  1225  001024  EC41  F008         	call	_HD44780_CursorSet
  1226                           
  1227                           ;pic18f4520_hd44780.c: 99: } else {
  1228  001028  D005               	goto	l75
  1229  00102A                     l1478:
  1230                           
  1231                           ;pic18f4520_hd44780.c: 100: HD44780_Data(c);
  1232  00102A  500F               	movf	putch@c,w,c
  1233  00102C  EC26  F009         	call	_HD44780_Data
  1234                           
  1235                           ;pic18f4520_hd44780.c: 101: HD44780_Opts.currentX++;
  1236  001030  2A32               	incf	_HD44780_Opts+5,f,c
  1237  001032  D000               	goto	l75
  1238  001034                     l75:
  1239  001034  0012               	return		;funcret
  1240  001036                     __end_of_putch:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           prodh	equ	0xFF4
  1247                           prodl	equ	0xFF3
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           postdec1	equ	0xFE5
  1251                           fsr1l	equ	0xFE1
  1252                           postinc2	equ	0xFDE
  1253                           postdec2	equ	0xFDD
  1254                           fsr2h	equ	0xFDA
  1255                           fsr2l	equ	0xFD9
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _HD44780_Data *****************
  1259 ;; Defined at:
  1260 ;;		line 273 in file "../Libraries/pic18f4520_hd44780.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  data            1    wreg     unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  data            1    7[COMRAM] unsigned char 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1274 ;;      Params:         0       0       0       0       0       0       0
  1275 ;;      Locals:         1       0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0
  1277 ;;      Totals:         1       0       0       0       0       0       0
  1278 ;;Total ram usage:        1 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    2
  1281 ;; This function calls:
  1282 ;;		_HD44780_Cmd4bit
  1283 ;; This function is called by:
  1284 ;;		_putch
  1285 ;;		_HD44780_Puts
  1286 ;;		_HD44780_CreateChar
  1287 ;;		_HD44780_PutCustom
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text3
  1292  00124C                     __ptext3:
  1293                           	opt stack 0
  1294  00124C                     _HD44780_Data:
  1295                           	opt stack 26
  1296                           
  1297                           ;incstack = 0
  1298                           ;HD44780_Data@data stored from wreg
  1299  00124C  6E08               	movwf	HD44780_Data@data,c
  1300                           
  1301                           ;pic18f4520_hd44780.c: 275: PORTBbits.RB2 = 1;
  1302  00124E  8481               	bsf	3969,2,c	;volatile
  1303                           
  1304                           ;pic18f4520_hd44780.c: 278: HD44780_Cmd4bit(data >> 4);
  1305  001250  3808               	swapf	HD44780_Data@data,w,c
  1306  001252  0B0F               	andlw	15
  1307  001254  EC51  F007         	call	_HD44780_Cmd4bit
  1308                           
  1309                           ;pic18f4520_hd44780.c: 280: HD44780_Cmd4bit(data & 0x0F);
  1310  001258  5008               	movf	HD44780_Data@data,w,c
  1311  00125A  0B0F               	andlw	15
  1312  00125C  EC51  F007         	call	_HD44780_Cmd4bit
  1313  001260  0012               	return		;funcret
  1314  001262                     __end_of_HD44780_Data:
  1315                           	opt stack 0
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           prodh	equ	0xFF4
  1321                           prodl	equ	0xFF3
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           postinc2	equ	0xFDE
  1327                           postdec2	equ	0xFDD
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function _HD44780_CursorSet *****************
  1333 ;; Defined at:
  1334 ;;		line 246 in file "../Libraries/pic18f4520_hd44780.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  col             1    wreg     unsigned char 
  1337 ;;  row             1    8[COMRAM] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  col             1   13[COMRAM] unsigned char 
  1340 ;;  row_offsets     4    9[COMRAM] unsigned char [4]
  1341 ;; Return value:  Size  Location     Type
  1342 ;;		None               void
  1343 ;; Registers used:
  1344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         1       0       0       0       0       0       0
  1351 ;;      Locals:         5       0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0
  1353 ;;      Totals:         6       0       0       0       0       0       0
  1354 ;;Total ram usage:        6 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    3
  1357 ;; This function calls:
  1358 ;;		_HD44780_Cmd
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;;		_putch
  1362 ;;		_HD44780_Puts
  1363 ;;		_HD44780_PutCustom
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text4
  1368  001082                     __ptext4:
  1369                           	opt stack 0
  1370  001082                     _HD44780_CursorSet:
  1371                           	opt stack 25
  1372                           
  1373                           ;incstack = 0
  1374                           ;HD44780_CursorSet@col stored from wreg
  1375  001082  6E0E               	movwf	HD44780_CursorSet@col,c
  1376                           
  1377                           ;pic18f4520_hd44780.c: 247: char row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  1378  001084  C037  F00A         	movff	HD44780_CursorSet@F4400,HD44780_CursorSet@row_offsets
  1379  001088  C038  F00B         	movff	HD44780_CursorSet@F4400+1,HD44780_CursorSet@row_offsets+1
  1380  00108C  C039  F00C         	movff	HD44780_CursorSet@F4400+2,HD44780_CursorSet@row_offsets+2
  1381  001090  C03A  F00D         	movff	HD44780_CursorSet@F4400+3,HD44780_CursorSet@row_offsets+3
  1382                           
  1383                           ;pic18f4520_hd44780.c: 250: if (row >= HD44780_Opts.Rows) {
  1384  001094  5030               	movf	_HD44780_Opts+3,w,c
  1385  001096  5C09               	subwf	HD44780_CursorSet@row,w,c
  1386  001098  A0D8               	btfss	status,0,c
  1387  00109A  D003               	goto	l1450
  1388                           
  1389                           ;pic18f4520_hd44780.c: 251: row = 0;
  1390  00109C  0E00               	movlw	0
  1391  00109E  6E09               	movwf	HD44780_CursorSet@row,c
  1392  0010A0  D000               	goto	l1450
  1393  0010A2                     l1450:
  1394                           
  1395                           ;pic18f4520_hd44780.c: 252: }
  1396                           ;pic18f4520_hd44780.c: 255: HD44780_Opts.currentX = col;
  1397  0010A2  C00E  F032         	movff	HD44780_CursorSet@col,_HD44780_Opts+5
  1398                           
  1399                           ;pic18f4520_hd44780.c: 256: HD44780_Opts.currentY = row;
  1400  0010A6  C009  F033         	movff	HD44780_CursorSet@row,_HD44780_Opts+6
  1401                           
  1402                           ;pic18f4520_hd44780.c: 259: HD44780_Cmd(0x80 | (col + row_offsets[row]));
  1403  0010AA  5009               	movf	HD44780_CursorSet@row,w,c
  1404  0010AC  0D01               	mullw	1
  1405  0010AE  0E0A               	movlw	low HD44780_CursorSet@row_offsets
  1406  0010B0  24F3               	addwf	prodl,w,c
  1407  0010B2  6ED9               	movwf	fsr2l,c
  1408  0010B4  0E00               	movlw	high HD44780_CursorSet@row_offsets
  1409  0010B6  20F4               	addwfc	prodh,w,c
  1410  0010B8  6EDA               	movwf	fsr2h,c
  1411  0010BA  50DF               	movf	indf2,w,c
  1412  0010BC  240E               	addwf	HD44780_CursorSet@col,w,c
  1413  0010BE  0980               	iorlw	128
  1414  0010C0  EC31  F009         	call	_HD44780_Cmd
  1415  0010C4  0012               	return		;funcret
  1416  0010C6                     __end_of_HD44780_CursorSet:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           prodh	equ	0xFF4
  1423                           prodl	equ	0xFF3
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postdec1	equ	0xFE5
  1427                           fsr1l	equ	0xFE1
  1428                           indf2	equ	0xFDF
  1429                           postinc2	equ	0xFDE
  1430                           postdec2	equ	0xFDD
  1431                           fsr2h	equ	0xFDA
  1432                           fsr2l	equ	0xFD9
  1433                           status	equ	0xFD8
  1434                           
  1435 ;; *************** function _isdigit *****************
  1436 ;; Defined at:
  1437 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  c               1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  c               1    2[COMRAM] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;		None               void
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1451 ;;      Params:         0       0       0       0       0       0       0
  1452 ;;      Locals:         2       0       0       0       0       0       0
  1453 ;;      Temps:          1       0       0       0       0       0       0
  1454 ;;      Totals:         3       0       0       0       0       0       0
  1455 ;;Total ram usage:        3 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_printf
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text5
  1465  001210                     __ptext5:
  1466                           	opt stack 0
  1467  001210                     _isdigit:
  1468                           	opt stack 29
  1469                           
  1470                           ;incstack = 0
  1471                           ;isdigit@c stored from wreg
  1472  001210  6E03               	movwf	isdigit@c,c
  1473  001212  0E00               	movlw	0
  1474  001214  6E02               	movwf	_isdigit$1122,c
  1475  001216  0E3A               	movlw	58
  1476  001218  6003               	cpfslt	isdigit@c,c
  1477  00121A  D006               	goto	l1498
  1478  00121C  0E2F               	movlw	47
  1479  00121E  6403               	cpfsgt	isdigit@c,c
  1480  001220  D003               	goto	l1498
  1481  001222  0E01               	movlw	1
  1482  001224  6E02               	movwf	_isdigit$1122,c
  1483  001226  D000               	goto	l1498
  1484  001228                     l1498:
  1485  001228  C002  F001         	movff	_isdigit$1122,??_isdigit
  1486  00122C  3001               	rrcf	??_isdigit,w,c
  1487  00122E  D000               	goto	l659
  1488  001230                     l659:
  1489  001230  0012               	return		;funcret
  1490  001232                     __end_of_isdigit:
  1491                           	opt stack 0
  1492                           tblptru	equ	0xFF8
  1493                           tblptrh	equ	0xFF7
  1494                           tblptrl	equ	0xFF6
  1495                           tablat	equ	0xFF5
  1496                           prodh	equ	0xFF4
  1497                           prodl	equ	0xFF3
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           indf2	equ	0xFDF
  1503                           postinc2	equ	0xFDE
  1504                           postdec2	equ	0xFDD
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function ___wmul *****************
  1510 ;; Defined at:
  1511 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  multiplier      2    0[COMRAM] unsigned int 
  1514 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  product         2    4[COMRAM] unsigned int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    0[COMRAM] unsigned int 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, prodl, prodh
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         4       0       0       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         6       0       0       0       0       0       0
  1530 ;;Total ram usage:        6 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_printf
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text6
  1540  0011C4                     __ptext6:
  1541                           	opt stack 0
  1542  0011C4                     ___wmul:
  1543                           	opt stack 29
  1544                           
  1545                           ;incstack = 0
  1546  0011C4  5001               	movf	___wmul@multiplier,w,c
  1547  0011C6  0203               	mulwf	___wmul@multiplicand,c
  1548  0011C8  CFF3 F005          	movff	prodl,___wmul@product
  1549  0011CC  CFF4 F006          	movff	prodh,___wmul@product+1
  1550  0011D0  5001               	movf	___wmul@multiplier,w,c
  1551  0011D2  0204               	mulwf	___wmul@multiplicand+1,c
  1552  0011D4  50F3               	movf	prodl,w,c
  1553  0011D6  2606               	addwf	___wmul@product+1,f,c
  1554  0011D8  5002               	movf	___wmul@multiplier+1,w,c
  1555  0011DA  0203               	mulwf	___wmul@multiplicand,c
  1556  0011DC  50F3               	movf	prodl,w,c
  1557  0011DE  2606               	addwf	___wmul@product+1,f,c
  1558  0011E0  C005  F001         	movff	___wmul@product,?___wmul
  1559  0011E4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1560  0011E8  D000               	goto	l228
  1561  0011EA                     l228:
  1562  0011EA  0012               	return		;funcret
  1563  0011EC                     __end_of___wmul:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           prodh	equ	0xFF4
  1570                           prodl	equ	0xFF3
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           postdec1	equ	0xFE5
  1574                           fsr1l	equ	0xFE1
  1575                           indf2	equ	0xFDF
  1576                           postinc2	equ	0xFDE
  1577                           postdec2	equ	0xFDD
  1578                           fsr2h	equ	0xFDA
  1579                           fsr2l	equ	0xFD9
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function ___lwmod *****************
  1583 ;; Defined at:
  1584 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  dividend        2    7[COMRAM] unsigned int 
  1587 ;;  divisor         2    9[COMRAM] unsigned int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  counter         1   11[COMRAM] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2    7[COMRAM] unsigned int 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1599 ;;      Params:         4       0       0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0
  1602 ;;      Totals:         5       0       0       0       0       0       0
  1603 ;;Total ram usage:        5 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_printf
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text7
  1613  001036                     __ptext7:
  1614                           	opt stack 0
  1615  001036                     ___lwmod:
  1616                           	opt stack 29
  1617                           
  1618                           ;incstack = 0
  1619  001036  500A               	movf	___lwmod@divisor,w,c
  1620  001038  100B               	iorwf	___lwmod@divisor+1,w,c
  1621  00103A  B4D8               	btfsc	status,2,c
  1622  00103C  D01D               	goto	l761
  1623  00103E  0E01               	movlw	1
  1624  001040  6E0C               	movwf	___lwmod@counter,c
  1625  001042  D005               	goto	l1572
  1626  001044                     l1570:
  1627  001044  90D8               	bcf	status,0,c
  1628  001046  360A               	rlcf	___lwmod@divisor,f,c
  1629  001048  360B               	rlcf	___lwmod@divisor+1,f,c
  1630  00104A  2A0C               	incf	___lwmod@counter,f,c
  1631  00104C  D000               	goto	l1572
  1632  00104E                     l1572:
  1633  00104E  BE0B               	btfsc	___lwmod@divisor+1,7,c
  1634  001050  D002               	goto	l1574
  1635  001052  D7F8               	goto	l1570
  1636  001054  D000               	goto	l1574
  1637  001056                     l1574:
  1638  001056  500A               	movf	___lwmod@divisor,w,c
  1639  001058  5C08               	subwf	___lwmod@dividend,w,c
  1640  00105A  500B               	movf	___lwmod@divisor+1,w,c
  1641  00105C  5809               	subwfb	___lwmod@dividend+1,w,c
  1642  00105E  A0D8               	btfss	status,0,c
  1643  001060  D005               	goto	l1578
  1644  001062  500A               	movf	___lwmod@divisor,w,c
  1645  001064  5E08               	subwf	___lwmod@dividend,f,c
  1646  001066  500B               	movf	___lwmod@divisor+1,w,c
  1647  001068  5A09               	subwfb	___lwmod@dividend+1,f,c
  1648  00106A  D000               	goto	l1578
  1649  00106C                     l1578:
  1650  00106C  90D8               	bcf	status,0,c
  1651  00106E  320B               	rrcf	___lwmod@divisor+1,f,c
  1652  001070  320A               	rrcf	___lwmod@divisor,f,c
  1653  001072  2E0C               	decfsz	___lwmod@counter,f,c
  1654  001074  D7F0               	goto	l1574
  1655  001076  D000               	goto	l761
  1656  001078                     l761:
  1657  001078  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1658  00107C  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1659  001080  0012               	return		;funcret
  1660  001082                     __end_of___lwmod:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           postdec1	equ	0xFE5
  1671                           fsr1l	equ	0xFE1
  1672                           indf2	equ	0xFDF
  1673                           postinc2	equ	0xFDE
  1674                           postdec2	equ	0xFDD
  1675                           fsr2h	equ	0xFDA
  1676                           fsr2l	equ	0xFD9
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function ___lwdiv *****************
  1680 ;; Defined at:
  1681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  dividend        2    0[COMRAM] unsigned int 
  1684 ;;  divisor         2    2[COMRAM] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  quotient        2    4[COMRAM] unsigned int 
  1687 ;;  counter         1    6[COMRAM] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  2    0[COMRAM] unsigned int 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1697 ;;      Params:         4       0       0       0       0       0       0
  1698 ;;      Locals:         3       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0
  1700 ;;      Totals:         7       0       0       0       0       0       0
  1701 ;;Total ram usage:        7 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_printf
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text8
  1711  000F88                     __ptext8:
  1712                           	opt stack 0
  1713  000F88                     ___lwdiv:
  1714                           	opt stack 29
  1715                           
  1716                           ;incstack = 0
  1717  000F88  0E00               	movlw	0
  1718  000F8A  6E06               	movwf	___lwdiv@quotient+1,c
  1719  000F8C  0E00               	movlw	0
  1720  000F8E  6E05               	movwf	___lwdiv@quotient,c
  1721  000F90  5003               	movf	___lwdiv@divisor,w,c
  1722  000F92  1004               	iorwf	___lwdiv@divisor+1,w,c
  1723  000F94  B4D8               	btfsc	status,2,c
  1724  000F96  D021               	goto	l751
  1725  000F98  0E01               	movlw	1
  1726  000F9A  6E07               	movwf	___lwdiv@counter,c
  1727  000F9C  D005               	goto	l1552
  1728  000F9E                     l1550:
  1729  000F9E  90D8               	bcf	status,0,c
  1730  000FA0  3603               	rlcf	___lwdiv@divisor,f,c
  1731  000FA2  3604               	rlcf	___lwdiv@divisor+1,f,c
  1732  000FA4  2A07               	incf	___lwdiv@counter,f,c
  1733  000FA6  D000               	goto	l1552
  1734  000FA8                     l1552:
  1735  000FA8  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1736  000FAA  D002               	goto	l1554
  1737  000FAC  D7F8               	goto	l1550
  1738  000FAE  D000               	goto	l1554
  1739  000FB0                     l1554:
  1740  000FB0  90D8               	bcf	status,0,c
  1741  000FB2  3605               	rlcf	___lwdiv@quotient,f,c
  1742  000FB4  3606               	rlcf	___lwdiv@quotient+1,f,c
  1743  000FB6  5003               	movf	___lwdiv@divisor,w,c
  1744  000FB8  5C01               	subwf	___lwdiv@dividend,w,c
  1745  000FBA  5004               	movf	___lwdiv@divisor+1,w,c
  1746  000FBC  5802               	subwfb	___lwdiv@dividend+1,w,c
  1747  000FBE  A0D8               	btfss	status,0,c
  1748  000FC0  D006               	goto	l1562
  1749  000FC2  5003               	movf	___lwdiv@divisor,w,c
  1750  000FC4  5E01               	subwf	___lwdiv@dividend,f,c
  1751  000FC6  5004               	movf	___lwdiv@divisor+1,w,c
  1752  000FC8  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1753  000FCA  8005               	bsf	___lwdiv@quotient,0,c
  1754  000FCC  D000               	goto	l1562
  1755  000FCE                     l1562:
  1756  000FCE  90D8               	bcf	status,0,c
  1757  000FD0  3204               	rrcf	___lwdiv@divisor+1,f,c
  1758  000FD2  3203               	rrcf	___lwdiv@divisor,f,c
  1759  000FD4  2E07               	decfsz	___lwdiv@counter,f,c
  1760  000FD6  D7EC               	goto	l1554
  1761  000FD8  D000               	goto	l751
  1762  000FDA                     l751:
  1763  000FDA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1764  000FDE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1765  000FE2  0012               	return		;funcret
  1766  000FE4                     __end_of___lwdiv:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           postinc0	equ	0xFEE
  1775                           wreg	equ	0xFE8
  1776                           postdec1	equ	0xFE5
  1777                           fsr1l	equ	0xFE1
  1778                           indf2	equ	0xFDF
  1779                           postinc2	equ	0xFDE
  1780                           postdec2	equ	0xFDD
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function ___fttol *****************
  1786 ;; Defined at:
  1787 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  f1              3    0[COMRAM] float 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  lval            4   10[COMRAM] unsigned long 
  1792 ;;  exp1            1   14[COMRAM] unsigned char 
  1793 ;;  sign1           1    9[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  4    0[COMRAM] long 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1803 ;;      Params:         4       0       0       0       0       0       0
  1804 ;;      Locals:         6       0       0       0       0       0       0
  1805 ;;      Temps:          5       0       0       0       0       0       0
  1806 ;;      Totals:        15       0       0       0       0       0       0
  1807 ;;Total ram usage:       15 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text9
  1817  000C50                     __ptext9:
  1818                           	opt stack 0
  1819  000C50                     ___fttol:
  1820                           	opt stack 30
  1821                           
  1822                           ;incstack = 0
  1823  000C50  C003  F005         	movff	___fttol@f1+2,??___fttol
  1824  000C54  6A06               	clrf	(??___fttol+1)& (0+255),c
  1825  000C56  6A07               	clrf	(??___fttol+2)& (0+255),c
  1826  000C58  3402               	rlcf	___fttol@f1+1,w,c
  1827  000C5A  3605               	rlcf	??___fttol& (0+255),f,c
  1828  000C5C  E301               	bnc	u1721
  1829  000C5E  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1830  000C60                     u1721:
  1831  000C60  5005               	movf	??___fttol,w,c
  1832  000C62  6E0F               	movwf	___fttol@exp1,c
  1833  000C64  500F               	movf	___fttol@exp1,w,c
  1834  000C66  A4D8               	btfss	status,2,c
  1835  000C68  D002               	goto	l1884
  1836  000C6A  D039               	goto	l1908
  1837  000C6C  D063               	goto	l644
  1838  000C6E                     l1884:
  1839  000C6E  0E17               	movlw	23
  1840  000C70  6E05               	movwf	??___fttol& (0+255),c
  1841  000C72  C001  F006         	movff	___fttol@f1,??___fttol+1
  1842  000C76  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1843  000C7A  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1844  000C7E  2805               	incf	??___fttol,w,c
  1845  000C80  6E09               	movwf	(??___fttol+4)& (0+255),c
  1846  000C82  D004               	goto	u1740
  1847  000C84                     u1745:
  1848  000C84  90D8               	bcf	status,0,c
  1849  000C86  3208               	rrcf	??___fttol+3,f,c
  1850  000C88  3207               	rrcf	??___fttol+2,f,c
  1851  000C8A  3206               	rrcf	??___fttol+1,f,c
  1852  000C8C                     u1740:
  1853  000C8C  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1854  000C8E  D7FA               	goto	u1745
  1855  000C90  5006               	movf	??___fttol+1,w,c
  1856  000C92  6E0A               	movwf	___fttol@sign1,c
  1857  000C94  8E02               	bsf	___fttol@f1+1,7,c
  1858  000C96  0EFF               	movlw	255
  1859  000C98  1601               	andwf	___fttol@f1,f,c
  1860  000C9A  0EFF               	movlw	255
  1861  000C9C  1602               	andwf	___fttol@f1+1,f,c
  1862  000C9E  0E00               	movlw	0
  1863  000CA0  1603               	andwf	___fttol@f1+2,f,c
  1864  000CA2  5001               	movf	___fttol@f1,w,c
  1865  000CA4  6E0B               	movwf	___fttol@lval,c
  1866  000CA6  5002               	movf	___fttol@f1+1,w,c
  1867  000CA8  6E0C               	movwf	___fttol@lval+1,c
  1868  000CAA  5003               	movf	___fttol@f1+2,w,c
  1869  000CAC  6E0D               	movwf	___fttol@lval+2,c
  1870  000CAE  6A0E               	clrf	___fttol@lval+3,c
  1871  000CB0  0E8E               	movlw	142
  1872  000CB2  5E0F               	subwf	___fttol@exp1,f,c
  1873  000CB4  AE0F               	btfss	___fttol@exp1,7,c
  1874  000CB6  D010               	goto	l1906
  1875  000CB8  500F               	movf	___fttol@exp1,w,c
  1876  000CBA  0A80               	xorlw	128
  1877  000CBC  0F8F               	addlw	143
  1878  000CBE  B0D8               	btfsc	status,0,c
  1879  000CC0  D003               	goto	l1902
  1880  000CC2  D00D               	goto	l1908
  1881  000CC4  D037               	goto	l644
  1882  000CC6  D000               	goto	l1902
  1883  000CC8                     l1902:
  1884  000CC8  90D8               	bcf	status,0,c
  1885  000CCA  320E               	rrcf	___fttol@lval+3,f,c
  1886  000CCC  320D               	rrcf	___fttol@lval+2,f,c
  1887  000CCE  320C               	rrcf	___fttol@lval+1,f,c
  1888  000CD0  320B               	rrcf	___fttol@lval,f,c
  1889  000CD2  3E0F               	incfsz	___fttol@exp1,f,c
  1890  000CD4  D7F9               	goto	l1902
  1891  000CD6  D019               	goto	l1916
  1892  000CD8                     l1906:
  1893  000CD8  0E17               	movlw	23
  1894  000CDA  640F               	cpfsgt	___fttol@exp1,c
  1895  000CDC  D011               	goto	l1914
  1896  000CDE                     l1908:
  1897  000CDE  0E00               	movlw	0
  1898  000CE0  6E01               	movwf	?___fttol,c
  1899  000CE2  0E00               	movlw	0
  1900  000CE4  6E02               	movwf	?___fttol+1,c
  1901  000CE6  0E00               	movlw	0
  1902  000CE8  6E03               	movwf	?___fttol+2,c
  1903  000CEA  0E00               	movlw	0
  1904  000CEC  6E04               	movwf	?___fttol+3,c
  1905  000CEE  D022               	goto	l644
  1906  000CF0  D007               	goto	l1914
  1907  000CF2                     l1912:
  1908  000CF2  90D8               	bcf	status,0,c
  1909  000CF4  360B               	rlcf	___fttol@lval,f,c
  1910  000CF6  360C               	rlcf	___fttol@lval+1,f,c
  1911  000CF8  360D               	rlcf	___fttol@lval+2,f,c
  1912  000CFA  360E               	rlcf	___fttol@lval+3,f,c
  1913  000CFC  060F               	decf	___fttol@exp1,f,c
  1914  000CFE  D000               	goto	l1914
  1915  000D00                     l1914:
  1916  000D00  500F               	movf	___fttol@exp1,w,c
  1917  000D02  B4D8               	btfsc	status,2,c
  1918  000D04  D002               	goto	l1916
  1919  000D06  D7F5               	goto	l1912
  1920  000D08  D000               	goto	l1916
  1921  000D0A                     l1916:
  1922  000D0A  500A               	movf	___fttol@sign1,w,c
  1923  000D0C  B4D8               	btfsc	status,2,c
  1924  000D0E  D009               	goto	l1920
  1925  000D10  1E0E               	comf	___fttol@lval+3,f,c
  1926  000D12  1E0D               	comf	___fttol@lval+2,f,c
  1927  000D14  1E0C               	comf	___fttol@lval+1,f,c
  1928  000D16  6C0B               	negf	___fttol@lval,c
  1929  000D18  0E00               	movlw	0
  1930  000D1A  220C               	addwfc	___fttol@lval+1,f,c
  1931  000D1C  220D               	addwfc	___fttol@lval+2,f,c
  1932  000D1E  220E               	addwfc	___fttol@lval+3,f,c
  1933  000D20  D000               	goto	l1920
  1934  000D22                     l1920:
  1935  000D22  C00B  F001         	movff	___fttol@lval,?___fttol
  1936  000D26  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1937  000D2A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1938  000D2E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1939  000D32  D000               	goto	l644
  1940  000D34                     l644:
  1941  000D34  0012               	return		;funcret
  1942  000D36                     __end_of___fttol:
  1943                           	opt stack 0
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           prodh	equ	0xFF4
  1949                           prodl	equ	0xFF3
  1950                           postinc0	equ	0xFEE
  1951                           wreg	equ	0xFE8
  1952                           postdec1	equ	0xFE5
  1953                           fsr1l	equ	0xFE1
  1954                           indf2	equ	0xFDF
  1955                           postinc2	equ	0xFDE
  1956                           postdec2	equ	0xFDD
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function ___ftneg *****************
  1962 ;; Defined at:
  1963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  f1              3    0[COMRAM] float 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  3    0[COMRAM] float 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1977 ;;      Params:         3       0       0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0
  1980 ;;      Totals:         3       0       0       0       0       0       0
  1981 ;;Total ram usage:        3 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text10
  1991  0011EC                     __ptext10:
  1992                           	opt stack 0
  1993  0011EC                     ___ftneg:
  1994                           	opt stack 30
  1995                           
  1996                           ;incstack = 0
  1997  0011EC  5001               	movf	___ftneg@f1,w,c
  1998  0011EE  1002               	iorwf	___ftneg@f1+1,w,c
  1999  0011F0  1003               	iorwf	___ftneg@f1+2,w,c
  2000  0011F2  B4D8               	btfsc	status,2,c
  2001  0011F4  D006               	goto	l633
  2002  0011F6  0E00               	movlw	0
  2003  0011F8  1A01               	xorwf	___ftneg@f1,f,c
  2004  0011FA  0E00               	movlw	0
  2005  0011FC  1A02               	xorwf	___ftneg@f1+1,f,c
  2006  0011FE  0E80               	movlw	128
  2007  001200  1A03               	xorwf	___ftneg@f1+2,f,c
  2008  001202                     l633:
  2009  001202  C001  F001         	movff	___ftneg@f1,?___ftneg
  2010  001206  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  2011  00120A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  2012  00120E  0012               	return		;funcret
  2013  001210                     __end_of___ftneg:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1l	equ	0xFE1
  2025                           indf2	equ	0xFDF
  2026                           postinc2	equ	0xFDE
  2027                           postdec2	equ	0xFDD
  2028                           fsr2h	equ	0xFDA
  2029                           fsr2l	equ	0xFD9
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function ___ftmul *****************
  2033 ;; Defined at:
  2034 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  f1              3   24[COMRAM] float 
  2037 ;;  f2              3   27[COMRAM] float 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  f3_as_produc    3   34[COMRAM] unsigned um
  2040 ;;  sign            1   38[COMRAM] unsigned char 
  2041 ;;  cntr            1   37[COMRAM] unsigned char 
  2042 ;;  exp             1   33[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  3   24[COMRAM] float 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2052 ;;      Params:         6       0       0       0       0       0       0
  2053 ;;      Locals:         6       0       0       0       0       0       0
  2054 ;;      Temps:          3       0       0       0       0       0       0
  2055 ;;      Totals:        15       0       0       0       0       0       0
  2056 ;;Total ram usage:       15 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    1
  2059 ;; This function calls:
  2060 ;;		___ftpack
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text11
  2067  000B58                     __ptext11:
  2068                           	opt stack 0
  2069  000B58                     ___ftmul:
  2070                           	opt stack 29
  2071                           
  2072                           ;incstack = 0
  2073  000B58  C01B  F01F         	movff	___ftmul@f1+2,??___ftmul
  2074  000B5C  6A20               	clrf	(??___ftmul+1)& (0+255),c
  2075  000B5E  6A21               	clrf	(??___ftmul+2)& (0+255),c
  2076  000B60  341A               	rlcf	___ftmul@f1+1,w,c
  2077  000B62  361F               	rlcf	??___ftmul& (0+255),f,c
  2078  000B64  E301               	bnc	u1641
  2079  000B66  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  2080  000B68                     u1641:
  2081  000B68  501F               	movf	??___ftmul,w,c
  2082  000B6A  6E22               	movwf	___ftmul@exp,c
  2083  000B6C  5022               	movf	___ftmul@exp,w,c
  2084  000B6E  A4D8               	btfss	status,2,c
  2085  000B70  D002               	goto	l1820
  2086  000B72  D00E               	goto	l1822
  2087  000B74  D06C               	goto	l623
  2088  000B76                     l1820:
  2089  000B76  C01E  F01F         	movff	___ftmul@f2+2,??___ftmul
  2090  000B7A  6A20               	clrf	(??___ftmul+1)& (0+255),c
  2091  000B7C  6A21               	clrf	(??___ftmul+2)& (0+255),c
  2092  000B7E  341D               	rlcf	___ftmul@f2+1,w,c
  2093  000B80  361F               	rlcf	??___ftmul& (0+255),f,c
  2094  000B82  E301               	bnc	u1661
  2095  000B84  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  2096  000B86                     u1661:
  2097  000B86  501F               	movf	??___ftmul,w,c
  2098  000B88  6E27               	movwf	___ftmul@sign,c
  2099  000B8A  5027               	movf	___ftmul@sign,w,c
  2100  000B8C  A4D8               	btfss	status,2,c
  2101  000B8E  D007               	goto	l1826
  2102  000B90                     l1822:
  2103  000B90  0E00               	movlw	0
  2104  000B92  6E19               	movwf	?___ftmul,c
  2105  000B94  0E00               	movlw	0
  2106  000B96  6E1A               	movwf	?___ftmul+1,c
  2107  000B98  0E00               	movlw	0
  2108  000B9A  6E1B               	movwf	?___ftmul+2,c
  2109  000B9C  D058               	goto	l623
  2110  000B9E                     l1826:
  2111  000B9E  5027               	movf	___ftmul@sign,w,c
  2112  000BA0  0F7B               	addlw	123
  2113  000BA2  2622               	addwf	___ftmul@exp,f,c
  2114  000BA4  C01B  F027         	movff	___ftmul@f1+2,___ftmul@sign
  2115  000BA8  501E               	movf	___ftmul@f2+2,w,c
  2116  000BAA  1A27               	xorwf	___ftmul@sign,f,c
  2117  000BAC  0E80               	movlw	128
  2118  000BAE  1627               	andwf	___ftmul@sign,f,c
  2119  000BB0  8E1A               	bsf	___ftmul@f1+1,7,c
  2120  000BB2  8E1D               	bsf	___ftmul@f2+1,7,c
  2121  000BB4  0EFF               	movlw	255
  2122  000BB6  161C               	andwf	___ftmul@f2,f,c
  2123  000BB8  0EFF               	movlw	255
  2124  000BBA  161D               	andwf	___ftmul@f2+1,f,c
  2125  000BBC  0E00               	movlw	0
  2126  000BBE  161E               	andwf	___ftmul@f2+2,f,c
  2127  000BC0  0E00               	movlw	0
  2128  000BC2  6E23               	movwf	___ftmul@f3_as_product,c
  2129  000BC4  0E00               	movlw	0
  2130  000BC6  6E24               	movwf	___ftmul@f3_as_product+1,c
  2131  000BC8  0E00               	movlw	0
  2132  000BCA  6E25               	movwf	___ftmul@f3_as_product+2,c
  2133  000BCC  0E07               	movlw	7
  2134  000BCE  6E26               	movwf	___ftmul@cntr,c
  2135  000BD0  D000               	goto	l1840
  2136  000BD2                     l1840:
  2137  000BD2  A019               	btfss	___ftmul@f1,0,c
  2138  000BD4  D007               	goto	l1844
  2139  000BD6  501C               	movf	___ftmul@f2,w,c
  2140  000BD8  2623               	addwf	___ftmul@f3_as_product,f,c
  2141  000BDA  501D               	movf	___ftmul@f2+1,w,c
  2142  000BDC  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  2143  000BDE  501E               	movf	___ftmul@f2+2,w,c
  2144  000BE0  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  2145  000BE2  D000               	goto	l1844
  2146  000BE4                     l1844:
  2147  000BE4  90D8               	bcf	status,0,c
  2148  000BE6  321B               	rrcf	___ftmul@f1+2,f,c
  2149  000BE8  321A               	rrcf	___ftmul@f1+1,f,c
  2150  000BEA  3219               	rrcf	___ftmul@f1,f,c
  2151  000BEC  90D8               	bcf	status,0,c
  2152  000BEE  361C               	rlcf	___ftmul@f2,f,c
  2153  000BF0  361D               	rlcf	___ftmul@f2+1,f,c
  2154  000BF2  361E               	rlcf	___ftmul@f2+2,f,c
  2155  000BF4  2E26               	decfsz	___ftmul@cntr,f,c
  2156  000BF6  D7ED               	goto	l1840
  2157  000BF8  D000               	goto	l1848
  2158  000BFA                     l1848:
  2159  000BFA  0E09               	movlw	9
  2160  000BFC  6E26               	movwf	___ftmul@cntr,c
  2161  000BFE  D000               	goto	l1850
  2162  000C00                     l1850:
  2163  000C00  A019               	btfss	___ftmul@f1,0,c
  2164  000C02  D007               	goto	l1854
  2165  000C04  501C               	movf	___ftmul@f2,w,c
  2166  000C06  2623               	addwf	___ftmul@f3_as_product,f,c
  2167  000C08  501D               	movf	___ftmul@f2+1,w,c
  2168  000C0A  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  2169  000C0C  501E               	movf	___ftmul@f2+2,w,c
  2170  000C0E  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  2171  000C10  D000               	goto	l1854
  2172  000C12                     l1854:
  2173  000C12  90D8               	bcf	status,0,c
  2174  000C14  321B               	rrcf	___ftmul@f1+2,f,c
  2175  000C16  321A               	rrcf	___ftmul@f1+1,f,c
  2176  000C18  3219               	rrcf	___ftmul@f1,f,c
  2177  000C1A  90D8               	bcf	status,0,c
  2178  000C1C  3225               	rrcf	___ftmul@f3_as_product+2,f,c
  2179  000C1E  3224               	rrcf	___ftmul@f3_as_product+1,f,c
  2180  000C20  3223               	rrcf	___ftmul@f3_as_product,f,c
  2181  000C22  2E26               	decfsz	___ftmul@cntr,f,c
  2182  000C24  D7ED               	goto	l1850
  2183  000C26  D000               	goto	l1858
  2184  000C28                     l1858:
  2185  000C28  C023  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2186  000C2C  C024  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2187  000C30  C025  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2188  000C34  C022  F004         	movff	___ftmul@exp,___ftpack@exp
  2189  000C38  C027  F005         	movff	___ftmul@sign,___ftpack@sign
  2190  000C3C  EC9B  F006         	call	___ftpack	;wreg free
  2191  000C40  C001  F019         	movff	?___ftpack,?___ftmul
  2192  000C44  C002  F01A         	movff	?___ftpack+1,?___ftmul+1
  2193  000C48  C003  F01B         	movff	?___ftpack+2,?___ftmul+2
  2194  000C4C  D000               	goto	l623
  2195  000C4E                     l623:
  2196  000C4E  0012               	return		;funcret
  2197  000C50                     __end_of___ftmul:
  2198                           	opt stack 0
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           prodh	equ	0xFF4
  2204                           prodl	equ	0xFF3
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1l	equ	0xFE1
  2209                           indf2	equ	0xFDF
  2210                           postinc2	equ	0xFDE
  2211                           postdec2	equ	0xFDD
  2212                           fsr2h	equ	0xFDA
  2213                           fsr2l	equ	0xFD9
  2214                           status	equ	0xFD8
  2215                           
  2216 ;; *************** function ___ftadd *****************
  2217 ;; Defined at:
  2218 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  f1              3   12[COMRAM] float 
  2221 ;;  f2              3   15[COMRAM] float 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  exp1            1   23[COMRAM] unsigned char 
  2224 ;;  exp2            1   22[COMRAM] unsigned char 
  2225 ;;  sign            1   21[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  3   12[COMRAM] float 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2235 ;;      Params:         6       0       0       0       0       0       0
  2236 ;;      Locals:         3       0       0       0       0       0       0
  2237 ;;      Temps:          3       0       0       0       0       0       0
  2238 ;;      Totals:        12       0       0       0       0       0       0
  2239 ;;Total ram usage:       12 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    1
  2242 ;; This function calls:
  2243 ;;		___ftpack
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text12
  2250  000848                     __ptext12:
  2251                           	opt stack 0
  2252  000848                     ___ftadd:
  2253                           	opt stack 29
  2254                           
  2255                           ;incstack = 0
  2256  000848  C00F  F013         	movff	___ftadd@f1+2,??___ftadd
  2257  00084C  6A14               	clrf	(??___ftadd+1)& (0+255),c
  2258  00084E  6A15               	clrf	(??___ftadd+2)& (0+255),c
  2259  000850  340E               	rlcf	___ftadd@f1+1,w,c
  2260  000852  3613               	rlcf	??___ftadd& (0+255),f,c
  2261  000854  E301               	bnc	u1431
  2262  000856  8014               	bsf	(??___ftadd+1)& (0+255),0,c
  2263  000858                     u1431:
  2264  000858  5013               	movf	??___ftadd,w,c
  2265  00085A  6E18               	movwf	___ftadd@exp1,c
  2266  00085C  C012  F013         	movff	___ftadd@f2+2,??___ftadd
  2267  000860  6A14               	clrf	(??___ftadd+1)& (0+255),c
  2268  000862  6A15               	clrf	(??___ftadd+2)& (0+255),c
  2269  000864  3411               	rlcf	___ftadd@f2+1,w,c
  2270  000866  3613               	rlcf	??___ftadd& (0+255),f,c
  2271  000868  E301               	bnc	u1441
  2272  00086A  8014               	bsf	(??___ftadd+1)& (0+255),0,c
  2273  00086C                     u1441:
  2274  00086C  5013               	movf	??___ftadd,w,c
  2275  00086E  6E17               	movwf	___ftadd@exp2,c
  2276  000870  5018               	movf	___ftadd@exp1,w,c
  2277  000872  B4D8               	btfsc	status,2,c
  2278  000874  D00B               	goto	l576
  2279  000876  5017               	movf	___ftadd@exp2,w,c
  2280  000878  5C18               	subwf	___ftadd@exp1,w,c
  2281  00087A  B0D8               	btfsc	status,0,c
  2282  00087C  D00E               	goto	l1752
  2283  00087E  5018               	movf	___ftadd@exp1,w,c
  2284  000880  0800               	sublw	0
  2285  000882  2417               	addwf	___ftadd@exp2,w,c
  2286  000884  6E13               	movwf	??___ftadd& (0+255),c
  2287  000886  0E18               	movlw	24
  2288  000888  6413               	cpfsgt	??___ftadd,c
  2289  00088A  D007               	goto	l1752
  2290  00088C                     l576:
  2291  00088C  C010  F00D         	movff	___ftadd@f2,?___ftadd
  2292  000890  C011  F00E         	movff	___ftadd@f2+1,?___ftadd+1
  2293  000894  C012  F00F         	movff	___ftadd@f2+2,?___ftadd+2
  2294  000898  D0B8               	goto	l577
  2295  00089A                     l1752:
  2296  00089A  5017               	movf	___ftadd@exp2,w,c
  2297  00089C  B4D8               	btfsc	status,2,c
  2298  00089E  D00B               	goto	l580
  2299  0008A0  5018               	movf	___ftadd@exp1,w,c
  2300  0008A2  5C17               	subwf	___ftadd@exp2,w,c
  2301  0008A4  B0D8               	btfsc	status,0,c
  2302  0008A6  D00E               	goto	l1758
  2303  0008A8  5017               	movf	___ftadd@exp2,w,c
  2304  0008AA  0800               	sublw	0
  2305  0008AC  2418               	addwf	___ftadd@exp1,w,c
  2306  0008AE  6E13               	movwf	??___ftadd& (0+255),c
  2307  0008B0  0E18               	movlw	24
  2308  0008B2  6413               	cpfsgt	??___ftadd,c
  2309  0008B4  D007               	goto	l1758
  2310  0008B6                     l580:
  2311  0008B6  C00D  F00D         	movff	___ftadd@f1,?___ftadd
  2312  0008BA  C00E  F00E         	movff	___ftadd@f1+1,?___ftadd+1
  2313  0008BE  C00F  F00F         	movff	___ftadd@f1+2,?___ftadd+2
  2314  0008C2  D0A3               	goto	l577
  2315  0008C4                     l1758:
  2316  0008C4  0E06               	movlw	6
  2317  0008C6  6E16               	movwf	___ftadd@sign,c
  2318  0008C8  AE0F               	btfss	___ftadd@f1+2,7,c
  2319  0008CA  D002               	goto	l1764
  2320  0008CC  8E16               	bsf	___ftadd@sign,7,c
  2321  0008CE  D000               	goto	l1764
  2322  0008D0                     l1764:
  2323  0008D0  BE12               	btfsc	___ftadd@f2+2,7,c
  2324  0008D2  8C16               	bsf	___ftadd@sign,6,c
  2325  0008D4  8E0E               	bsf	___ftadd@f1+1,7,c
  2326  0008D6  0EFF               	movlw	255
  2327  0008D8  160D               	andwf	___ftadd@f1,f,c
  2328  0008DA  0EFF               	movlw	255
  2329  0008DC  160E               	andwf	___ftadd@f1+1,f,c
  2330  0008DE  0E00               	movlw	0
  2331  0008E0  160F               	andwf	___ftadd@f1+2,f,c
  2332  0008E2  8E11               	bsf	___ftadd@f2+1,7,c
  2333  0008E4  0EFF               	movlw	255
  2334  0008E6  1610               	andwf	___ftadd@f2,f,c
  2335  0008E8  0EFF               	movlw	255
  2336  0008EA  1611               	andwf	___ftadd@f2+1,f,c
  2337  0008EC  0E00               	movlw	0
  2338  0008EE  1612               	andwf	___ftadd@f2+2,f,c
  2339  0008F0  5017               	movf	___ftadd@exp2,w,c
  2340  0008F2  5C18               	subwf	___ftadd@exp1,w,c
  2341  0008F4  B0D8               	btfsc	status,0,c
  2342  0008F6  D01E               	goto	l1784
  2343  0008F8                     l1774:
  2344  0008F8  90D8               	bcf	status,0,c
  2345  0008FA  3610               	rlcf	___ftadd@f2,f,c
  2346  0008FC  3611               	rlcf	___ftadd@f2+1,f,c
  2347  0008FE  3612               	rlcf	___ftadd@f2+2,f,c
  2348  000900  0617               	decf	___ftadd@exp2,f,c
  2349  000902  5018               	movf	___ftadd@exp1,w,c
  2350  000904  1817               	xorwf	___ftadd@exp2,w,c
  2351  000906  B4D8               	btfsc	status,2,c
  2352  000908  D00F               	goto	l1782
  2353  00090A  0616               	decf	___ftadd@sign,f,c
  2354  00090C  C016  F013         	movff	___ftadd@sign,??___ftadd
  2355  000910  0E07               	movlw	7
  2356  000912  1613               	andwf	??___ftadd,f,c
  2357  000914  B4D8               	btfsc	status,2,c
  2358  000916  D008               	goto	l1782
  2359  000918  D7EF               	goto	l1774
  2360  00091A  D006               	goto	l1782
  2361  00091C                     l1780:
  2362  00091C  90D8               	bcf	status,0,c
  2363  00091E  320F               	rrcf	___ftadd@f1+2,f,c
  2364  000920  320E               	rrcf	___ftadd@f1+1,f,c
  2365  000922  320D               	rrcf	___ftadd@f1,f,c
  2366  000924  2A18               	incf	___ftadd@exp1,f,c
  2367  000926  D000               	goto	l1782
  2368  000928                     l1782:
  2369  000928  5017               	movf	___ftadd@exp2,w,c
  2370  00092A  1818               	xorwf	___ftadd@exp1,w,c
  2371  00092C  B4D8               	btfsc	status,2,c
  2372  00092E  D024               	goto	l591
  2373  000930  D7F5               	goto	l1780
  2374  000932  D022               	goto	l591
  2375  000934                     l1784:
  2376  000934  5018               	movf	___ftadd@exp1,w,c
  2377  000936  5C17               	subwf	___ftadd@exp2,w,c
  2378  000938  B0D8               	btfsc	status,0,c
  2379  00093A  D01E               	goto	l591
  2380  00093C                     l1786:
  2381  00093C  90D8               	bcf	status,0,c
  2382  00093E  360D               	rlcf	___ftadd@f1,f,c
  2383  000940  360E               	rlcf	___ftadd@f1+1,f,c
  2384  000942  360F               	rlcf	___ftadd@f1+2,f,c
  2385  000944  0618               	decf	___ftadd@exp1,f,c
  2386  000946  5018               	movf	___ftadd@exp1,w,c
  2387  000948  1817               	xorwf	___ftadd@exp2,w,c
  2388  00094A  B4D8               	btfsc	status,2,c
  2389  00094C  D00F               	goto	l1794
  2390  00094E  0616               	decf	___ftadd@sign,f,c
  2391  000950  C016  F013         	movff	___ftadd@sign,??___ftadd
  2392  000954  0E07               	movlw	7
  2393  000956  1613               	andwf	??___ftadd,f,c
  2394  000958  B4D8               	btfsc	status,2,c
  2395  00095A  D008               	goto	l1794
  2396  00095C  D7EF               	goto	l1786
  2397  00095E  D006               	goto	l1794
  2398  000960                     l1792:
  2399  000960  90D8               	bcf	status,0,c
  2400  000962  3212               	rrcf	___ftadd@f2+2,f,c
  2401  000964  3211               	rrcf	___ftadd@f2+1,f,c
  2402  000966  3210               	rrcf	___ftadd@f2,f,c
  2403  000968  2A17               	incf	___ftadd@exp2,f,c
  2404  00096A  D000               	goto	l1794
  2405  00096C                     l1794:
  2406  00096C  5017               	movf	___ftadd@exp2,w,c
  2407  00096E  1818               	xorwf	___ftadd@exp1,w,c
  2408  000970  B4D8               	btfsc	status,2,c
  2409  000972  D002               	goto	l591
  2410  000974  D7F5               	goto	l1792
  2411  000976  D000               	goto	l591
  2412  000978                     l591:
  2413  000978  AE16               	btfss	___ftadd@sign,7,c
  2414  00097A  D00C               	goto	l600
  2415  00097C  0EFF               	movlw	255
  2416  00097E  1A0D               	xorwf	___ftadd@f1,f,c
  2417  000980  0EFF               	movlw	255
  2418  000982  1A0E               	xorwf	___ftadd@f1+1,f,c
  2419  000984  0EFF               	movlw	255
  2420  000986  1A0F               	xorwf	___ftadd@f1+2,f,c
  2421  000988  0E01               	movlw	1
  2422  00098A  260D               	addwf	___ftadd@f1,f,c
  2423  00098C  0E00               	movlw	0
  2424  00098E  220E               	addwfc	___ftadd@f1+1,f,c
  2425  000990  0E00               	movlw	0
  2426  000992  220F               	addwfc	___ftadd@f1+2,f,c
  2427  000994                     l600:
  2428  000994  AC16               	btfss	___ftadd@sign,6,c
  2429  000996  D00D               	goto	l1800
  2430  000998  0EFF               	movlw	255
  2431  00099A  1A10               	xorwf	___ftadd@f2,f,c
  2432  00099C  0EFF               	movlw	255
  2433  00099E  1A11               	xorwf	___ftadd@f2+1,f,c
  2434  0009A0  0EFF               	movlw	255
  2435  0009A2  1A12               	xorwf	___ftadd@f2+2,f,c
  2436  0009A4  0E01               	movlw	1
  2437  0009A6  2610               	addwf	___ftadd@f2,f,c
  2438  0009A8  0E00               	movlw	0
  2439  0009AA  2211               	addwfc	___ftadd@f2+1,f,c
  2440  0009AC  0E00               	movlw	0
  2441  0009AE  2212               	addwfc	___ftadd@f2+2,f,c
  2442  0009B0  D000               	goto	l1800
  2443  0009B2                     l1800:
  2444  0009B2  0E00               	movlw	0
  2445  0009B4  6E16               	movwf	___ftadd@sign,c
  2446  0009B6  500D               	movf	___ftadd@f1,w,c
  2447  0009B8  2610               	addwf	___ftadd@f2,f,c
  2448  0009BA  500E               	movf	___ftadd@f1+1,w,c
  2449  0009BC  2211               	addwfc	___ftadd@f2+1,f,c
  2450  0009BE  500F               	movf	___ftadd@f1+2,w,c
  2451  0009C0  2212               	addwfc	___ftadd@f2+2,f,c
  2452  0009C2  AE12               	btfss	___ftadd@f2+2,7,c
  2453  0009C4  D00F               	goto	l1810
  2454  0009C6  0EFF               	movlw	255
  2455  0009C8  1A10               	xorwf	___ftadd@f2,f,c
  2456  0009CA  0EFF               	movlw	255
  2457  0009CC  1A11               	xorwf	___ftadd@f2+1,f,c
  2458  0009CE  0EFF               	movlw	255
  2459  0009D0  1A12               	xorwf	___ftadd@f2+2,f,c
  2460  0009D2  0E01               	movlw	1
  2461  0009D4  2610               	addwf	___ftadd@f2,f,c
  2462  0009D6  0E00               	movlw	0
  2463  0009D8  2211               	addwfc	___ftadd@f2+1,f,c
  2464  0009DA  0E00               	movlw	0
  2465  0009DC  2212               	addwfc	___ftadd@f2+2,f,c
  2466  0009DE  0E01               	movlw	1
  2467  0009E0  6E16               	movwf	___ftadd@sign,c
  2468  0009E2  D000               	goto	l1810
  2469  0009E4                     l1810:
  2470  0009E4  C010  F001         	movff	___ftadd@f2,___ftpack@arg
  2471  0009E8  C011  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2472  0009EC  C012  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2473  0009F0  C018  F004         	movff	___ftadd@exp1,___ftpack@exp
  2474  0009F4  C016  F005         	movff	___ftadd@sign,___ftpack@sign
  2475  0009F8  EC9B  F006         	call	___ftpack	;wreg free
  2476  0009FC  C001  F00D         	movff	?___ftpack,?___ftadd
  2477  000A00  C002  F00E         	movff	?___ftpack+1,?___ftadd+1
  2478  000A04  C003  F00F         	movff	?___ftpack+2,?___ftadd+2
  2479  000A08  D000               	goto	l577
  2480  000A0A                     l577:
  2481  000A0A  0012               	return		;funcret
  2482  000A0C                     __end_of___ftadd:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           prodh	equ	0xFF4
  2489                           prodl	equ	0xFF3
  2490                           postinc0	equ	0xFEE
  2491                           wreg	equ	0xFE8
  2492                           postdec1	equ	0xFE5
  2493                           fsr1l	equ	0xFE1
  2494                           indf2	equ	0xFDF
  2495                           postinc2	equ	0xFDE
  2496                           postdec2	equ	0xFDD
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8
  2500                           
  2501 ;; *************** function ___awtoft *****************
  2502 ;; Defined at:
  2503 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  c               2    8[COMRAM] int 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  sign            1   11[COMRAM] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  3    8[COMRAM] float 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2517 ;;      Params:         3       0       0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0
  2520 ;;      Totals:         4       0       0       0       0       0       0
  2521 ;;Total ram usage:        4 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    1
  2524 ;; This function calls:
  2525 ;;		___ftpack
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text13
  2532  0010C6                     __ptext13:
  2533                           	opt stack 0
  2534  0010C6                     ___awtoft:
  2535                           	opt stack 29
  2536                           
  2537                           ;incstack = 0
  2538  0010C6  0E00               	movlw	0
  2539  0010C8  6E0C               	movwf	___awtoft@sign,c
  2540  0010CA  AE0A               	btfss	___awtoft@c+1,7,c
  2541  0010CC  D007               	goto	l1870
  2542  0010CE  6C09               	negf	___awtoft@c,c
  2543  0010D0  1E0A               	comf	___awtoft@c+1,f,c
  2544  0010D2  B0D8               	btfsc	status,0,c
  2545  0010D4  2A0A               	incf	___awtoft@c+1,f,c
  2546  0010D6  0E01               	movlw	1
  2547  0010D8  6E0C               	movwf	___awtoft@sign,c
  2548  0010DA  D000               	goto	l1870
  2549  0010DC                     l1870:
  2550  0010DC  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2551  0010E0  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2552  0010E4  6A03               	clrf	___ftpack@arg+2,c
  2553  0010E6  0E8E               	movlw	142
  2554  0010E8  6E04               	movwf	___ftpack@exp,c
  2555  0010EA  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2556  0010EE  EC9B  F006         	call	___ftpack	;wreg free
  2557  0010F2  C001  F009         	movff	?___ftpack,?___awtoft
  2558  0010F6  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2559  0010FA  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2560  0010FE  D000               	goto	l446
  2561  001100                     l446:
  2562  001100  0012               	return		;funcret
  2563  001102                     __end_of___awtoft:
  2564                           	opt stack 0
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           prodh	equ	0xFF4
  2570                           prodl	equ	0xFF3
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           postdec1	equ	0xFE5
  2574                           fsr1l	equ	0xFE1
  2575                           indf2	equ	0xFDF
  2576                           postinc2	equ	0xFDE
  2577                           postdec2	equ	0xFDD
  2578                           fsr2h	equ	0xFDA
  2579                           fsr2l	equ	0xFD9
  2580                           status	equ	0xFD8
  2581                           
  2582 ;; *************** function ___ftpack *****************
  2583 ;; Defined at:
  2584 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  arg             3    0[COMRAM] unsigned um
  2587 ;;  exp             1    3[COMRAM] unsigned char 
  2588 ;;  sign            1    4[COMRAM] unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  3    0[COMRAM] float 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2600 ;;      Params:         5       0       0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0
  2602 ;;      Temps:          3       0       0       0       0       0       0
  2603 ;;      Totals:         8       0       0       0       0       0       0
  2604 ;;Total ram usage:        8 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		___awtoft
  2610 ;;		___ftadd
  2611 ;;		___ftmul
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text14
  2616  000D36                     __ptext14:
  2617                           	opt stack 0
  2618  000D36                     ___ftpack:
  2619                           	opt stack 29
  2620                           
  2621                           ;incstack = 0
  2622  000D36  5004               	movf	___ftpack@exp,w,c
  2623  000D38  B4D8               	btfsc	status,2,c
  2624  000D3A  D005               	goto	l1512
  2625  000D3C  5001               	movf	___ftpack@arg,w,c
  2626  000D3E  1002               	iorwf	___ftpack@arg+1,w,c
  2627  000D40  1003               	iorwf	___ftpack@arg+2,w,c
  2628  000D42  A4D8               	btfss	status,2,c
  2629  000D44  D00E               	goto	l1518
  2630  000D46                     l1512:
  2631  000D46  0E00               	movlw	0
  2632  000D48  6E01               	movwf	?___ftpack,c
  2633  000D4A  0E00               	movlw	0
  2634  000D4C  6E02               	movwf	?___ftpack+1,c
  2635  000D4E  0E00               	movlw	0
  2636  000D50  6E03               	movwf	?___ftpack+2,c
  2637  000D52  D053               	goto	l536
  2638  000D54  D006               	goto	l1518
  2639  000D56                     l1516:
  2640  000D56  2A04               	incf	___ftpack@exp,f,c
  2641  000D58  90D8               	bcf	status,0,c
  2642  000D5A  3203               	rrcf	___ftpack@arg+2,f,c
  2643  000D5C  3202               	rrcf	___ftpack@arg+1,f,c
  2644  000D5E  3201               	rrcf	___ftpack@arg,f,c
  2645  000D60  D000               	goto	l1518
  2646  000D62                     l1518:
  2647  000D62  0E00               	movlw	0
  2648  000D64  1401               	andwf	___ftpack@arg,w,c
  2649  000D66  6E06               	movwf	??___ftpack& (0+255),c
  2650  000D68  0E00               	movlw	0
  2651  000D6A  1402               	andwf	___ftpack@arg+1,w,c
  2652  000D6C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2653  000D6E  0EFE               	movlw	254
  2654  000D70  1403               	andwf	___ftpack@arg+2,w,c
  2655  000D72  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2656  000D74  5006               	movf	??___ftpack,w,c
  2657  000D76  1007               	iorwf	??___ftpack+1,w,c
  2658  000D78  1008               	iorwf	??___ftpack+2,w,c
  2659  000D7A  B4D8               	btfsc	status,2,c
  2660  000D7C  D00E               	goto	l1524
  2661  000D7E  D7EB               	goto	l1516
  2662  000D80  D00C               	goto	l1524
  2663  000D82                     l1520:
  2664  000D82  2A04               	incf	___ftpack@exp,f,c
  2665  000D84  0E01               	movlw	1
  2666  000D86  2601               	addwf	___ftpack@arg,f,c
  2667  000D88  0E00               	movlw	0
  2668  000D8A  2202               	addwfc	___ftpack@arg+1,f,c
  2669  000D8C  0E00               	movlw	0
  2670  000D8E  2203               	addwfc	___ftpack@arg+2,f,c
  2671  000D90  90D8               	bcf	status,0,c
  2672  000D92  3203               	rrcf	___ftpack@arg+2,f,c
  2673  000D94  3202               	rrcf	___ftpack@arg+1,f,c
  2674  000D96  3201               	rrcf	___ftpack@arg,f,c
  2675  000D98  D000               	goto	l1524
  2676  000D9A                     l1524:
  2677  000D9A  0E00               	movlw	0
  2678  000D9C  1401               	andwf	___ftpack@arg,w,c
  2679  000D9E  6E06               	movwf	??___ftpack& (0+255),c
  2680  000DA0  0E00               	movlw	0
  2681  000DA2  1402               	andwf	___ftpack@arg+1,w,c
  2682  000DA4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2683  000DA6  0EFF               	movlw	255
  2684  000DA8  1403               	andwf	___ftpack@arg+2,w,c
  2685  000DAA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2686  000DAC  5006               	movf	??___ftpack,w,c
  2687  000DAE  1007               	iorwf	??___ftpack+1,w,c
  2688  000DB0  1008               	iorwf	??___ftpack+2,w,c
  2689  000DB2  B4D8               	btfsc	status,2,c
  2690  000DB4  D008               	goto	l1528
  2691  000DB6  D7E5               	goto	l1520
  2692  000DB8  D006               	goto	l1528
  2693  000DBA                     l1526:
  2694  000DBA  0604               	decf	___ftpack@exp,f,c
  2695  000DBC  90D8               	bcf	status,0,c
  2696  000DBE  3601               	rlcf	___ftpack@arg,f,c
  2697  000DC0  3602               	rlcf	___ftpack@arg+1,f,c
  2698  000DC2  3603               	rlcf	___ftpack@arg+2,f,c
  2699  000DC4  D000               	goto	l1528
  2700  000DC6                     l1528:
  2701  000DC6  BE02               	btfsc	___ftpack@arg+1,7,c
  2702  000DC8  D004               	goto	l547
  2703  000DCA  0E02               	movlw	2
  2704  000DCC  6004               	cpfslt	___ftpack@exp,c
  2705  000DCE  D7F5               	goto	l1526
  2706  000DD0  D000               	goto	l547
  2707  000DD2                     l547:
  2708  000DD2  B004               	btfsc	___ftpack@exp,0,c
  2709  000DD4  D002               	goto	l1534
  2710  000DD6  9E02               	bcf	___ftpack@arg+1,7,c
  2711  000DD8  D000               	goto	l1534
  2712  000DDA                     l1534:
  2713  000DDA  90D8               	bcf	status,0,c
  2714  000DDC  3204               	rrcf	___ftpack@exp,f,c
  2715  000DDE  5004               	movf	___ftpack@exp,w,c
  2716  000DE0  1203               	iorwf	___ftpack@arg+2,f,c
  2717  000DE2  5005               	movf	___ftpack@sign,w,c
  2718  000DE4  B4D8               	btfsc	status,2,c
  2719  000DE6  D002               	goto	l1540
  2720  000DE8  8E03               	bsf	___ftpack@arg+2,7,c
  2721  000DEA  D000               	goto	l1540
  2722  000DEC                     l1540:
  2723  000DEC  C001  F001         	movff	___ftpack@arg,?___ftpack
  2724  000DF0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2725  000DF4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2726  000DF8  D000               	goto	l536
  2727  000DFA                     l536:
  2728  000DFA  0012               	return		;funcret
  2729  000DFC                     __end_of___ftpack:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           postdec1	equ	0xFE5
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           postinc2	equ	0xFDE
  2743                           postdec2	equ	0xFDD
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _ReadADC *****************
  2749 ;; Defined at:
  2750 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2    0[COMRAM] int 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2764 ;;      Params:         2       0       0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0
  2766 ;;      Temps:          2       0       0       0       0       0       0
  2767 ;;      Totals:         4       0       0       0       0       0       0
  2768 ;;Total ram usage:        4 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text15
  2778  00128C                     __ptext15:
  2779                           	opt stack 0
  2780  00128C                     _ReadADC:
  2781                           	opt stack 30
  2782                           
  2783                           ;incstack = 0
  2784  00128C  50C4               	movf	4036,w,c	;volatile
  2785  00128E  6E03               	movwf	??_ReadADC& (0+255),c
  2786  001290  50C3               	movf	4035,w,c	;volatile
  2787  001292  6E01               	movwf	?_ReadADC,c
  2788  001294  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  2789  001298  D000               	goto	l225
  2790  00129A                     l225:
  2791  00129A  0012               	return		;funcret
  2792  00129C                     __end_of_ReadADC:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           postdec1	equ	0xFE5
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           postdec2	equ	0xFDD
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _OpenADC *****************
  2812 ;; Defined at:
  2813 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  config          1    wreg     unsigned char 
  2816 ;;  config2         1    0[COMRAM] unsigned char 
  2817 ;;  portconfig      1    1[COMRAM] unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  config          1    4[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2829 ;;      Params:         2       0       0       0       0       0       0
  2830 ;;      Locals:         1       0       0       0       0       0       0
  2831 ;;      Temps:          2       0       0       0       0       0       0
  2832 ;;      Totals:         5       0       0       0       0       0       0
  2833 ;;Total ram usage:        5 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text16
  2843  000F2A                     __ptext16:
  2844                           	opt stack 0
  2845  000F2A                     _OpenADC:
  2846                           	opt stack 30
  2847                           
  2848                           ;incstack = 0
  2849                           ;OpenADC@config stored from wreg
  2850  000F2A  6E05               	movwf	OpenADC@config,c
  2851  000F2C  0E00               	movlw	0
  2852  000F2E  6EC2               	movwf	4034,c	;volatile
  2853  000F30  0E00               	movlw	0
  2854  000F32  6EC0               	movwf	4032,c	;volatile
  2855  000F34  90D8               	bcf	status,0,c
  2856  000F36  3001               	rrcf	OpenADC@config2,w,c
  2857  000F38  0B3C               	andlw	60
  2858  000F3A  6EC2               	movwf	4034,c	;volatile
  2859  000F3C  C001  F003         	movff	OpenADC@config2,??_OpenADC
  2860  000F40  3A03               	swapf	??_OpenADC,f,c
  2861  000F42  0EF0               	movlw	240
  2862  000F44  1603               	andwf	??_OpenADC,f,c
  2863  000F46  0E30               	movlw	48
  2864  000F48  1603               	andwf	??_OpenADC,f,c
  2865  000F4A  5002               	movf	OpenADC@portconfig,w,c
  2866  000F4C  0B0F               	andlw	15
  2867  000F4E  1003               	iorwf	??_OpenADC,w,c
  2868  000F50  6EC1               	movwf	4033,c	;volatile
  2869  000F52  C005  F003         	movff	OpenADC@config,??_OpenADC
  2870  000F56  90D8               	bcf	status,0,c
  2871  000F58  3603               	rlcf	??_OpenADC,f,c
  2872  000F5A  90D8               	bcf	status,0,c
  2873  000F5C  3603               	rlcf	??_OpenADC,f,c
  2874  000F5E  0E38               	movlw	56
  2875  000F60  1603               	andwf	??_OpenADC,f,c
  2876  000F62  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  2877  000F66  3A04               	swapf	??_OpenADC+1,f,c
  2878  000F68  0E0F               	movlw	15
  2879  000F6A  1604               	andwf	??_OpenADC+1,f,c
  2880  000F6C  0E07               	movlw	7
  2881  000F6E  1604               	andwf	??_OpenADC+1,f,c
  2882  000F70  5005               	movf	OpenADC@config,w,c
  2883  000F72  0B80               	andlw	128
  2884  000F74  1004               	iorwf	??_OpenADC+1,w,c
  2885  000F76  1003               	iorwf	??_OpenADC,w,c
  2886  000F78  6EC0               	movwf	4032,c	;volatile
  2887  000F7A  AE01               	btfss	OpenADC@config2,7,c
  2888  000F7C  D003               	goto	l217
  2889  000F7E  9C9E               	bcf	3998,6,c	;volatile
  2890  000F80  8C9D               	bsf	3997,6,c	;volatile
  2891  000F82  8CF2               	bsf	intcon,6,c	;volatile
  2892  000F84                     l217:
  2893  000F84  80C2               	bsf	4034,0,c	;volatile
  2894  000F86  0012               	return		;funcret
  2895  000F88                     __end_of_OpenADC:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           postdec1	equ	0xFE5
  2907                           fsr1l	equ	0xFE1
  2908                           indf2	equ	0xFDF
  2909                           postinc2	equ	0xFDE
  2910                           postdec2	equ	0xFDD
  2911                           fsr2h	equ	0xFDA
  2912                           fsr2l	equ	0xFD9
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function _HD44780_Init *****************
  2916 ;; Defined at:
  2917 ;;		line 111 in file "../Libraries/pic18f4520_hd44780.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  cols            1    wreg     unsigned char 
  2920 ;;  rows            1    8[COMRAM] unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  cols            1    9[COMRAM] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2932 ;;      Params:         1       0       0       0       0       0       0
  2933 ;;      Locals:         1       0       0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0
  2935 ;;      Totals:         2       0       0       0       0       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    4
  2939 ;; This function calls:
  2940 ;;		_HD44780_Clear
  2941 ;;		_HD44780_Cmd
  2942 ;;		_HD44780_Cmd4bit
  2943 ;;		_HD44780_Delay
  2944 ;;		_HD44780_DisplayOn
  2945 ;;		_HD44780_InitPins
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text17
  2952  000DFC                     __ptext17:
  2953                           	opt stack 0
  2954  000DFC                     _HD44780_Init:
  2955                           	opt stack 26
  2956                           
  2957                           ;incstack = 0
  2958                           ;HD44780_Init@cols stored from wreg
  2959  000DFC  6E0A               	movwf	HD44780_Init@cols,c
  2960                           
  2961                           ;pic18f4520_hd44780.c: 114: HD44780_InitPins();
  2962  000DFE  EC19  F009         	call	_HD44780_InitPins	;wreg free
  2963                           
  2964                           ;pic18f4520_hd44780.c: 117: HD44780_Delay(45000);
  2965  000E02  0EAF               	movlw	175
  2966  000E04  6E02               	movwf	HD44780_Delay@us+1,c
  2967  000E06  0EC8               	movlw	200
  2968  000E08  6E01               	movwf	HD44780_Delay@us,c
  2969  000E0A  ECB6  F008         	call	_HD44780_Delay	;wreg free
  2970                           
  2971                           ;pic18f4520_hd44780.c: 120: HD44780_Opts.Rows = rows;
  2972  000E0E  C009  F030         	movff	HD44780_Init@rows,_HD44780_Opts+3
  2973                           
  2974                           ;pic18f4520_hd44780.c: 121: HD44780_Opts.Cols = cols;
  2975  000E12  C00A  F031         	movff	HD44780_Init@cols,_HD44780_Opts+4
  2976                           
  2977                           ;pic18f4520_hd44780.c: 124: HD44780_Opts.currentX = 0;
  2978  000E16  0E00               	movlw	0
  2979  000E18  6E32               	movwf	_HD44780_Opts+5,c
  2980                           
  2981                           ;pic18f4520_hd44780.c: 125: HD44780_Opts.currentY = 0;
  2982  000E1A  0E00               	movlw	0
  2983  000E1C  6E33               	movwf	_HD44780_Opts+6,c
  2984                           
  2985                           ;pic18f4520_hd44780.c: 127: HD44780_Opts.DisplayFunction = 0x00 | 0x00 | 0x00;
  2986  000E1E  0E00               	movlw	0
  2987  000E20  6E2E               	movwf	_HD44780_Opts+1,c
  2988                           
  2989                           ;pic18f4520_hd44780.c: 128: if (rows > 1) {
  2990  000E22  0E01               	movlw	1
  2991  000E24  6409               	cpfsgt	HD44780_Init@rows,c
  2992  000E26  D002               	goto	l1612
  2993                           
  2994                           ;pic18f4520_hd44780.c: 129: HD44780_Opts.DisplayFunction |= 0x08;
  2995  000E28  862E               	bsf	_HD44780_Opts+1,3,c
  2996  000E2A  D000               	goto	l1612
  2997  000E2C                     l1612:
  2998                           
  2999                           ;pic18f4520_hd44780.c: 130: }
  3000                           ;pic18f4520_hd44780.c: 133: HD44780_Cmd4bit(0x03);
  3001  000E2C  0E03               	movlw	3
  3002  000E2E  EC51  F007         	call	_HD44780_Cmd4bit
  3003                           
  3004                           ;pic18f4520_hd44780.c: 134: HD44780_Delay(4500);
  3005  000E32  0E11               	movlw	17
  3006  000E34  6E02               	movwf	HD44780_Delay@us+1,c
  3007  000E36  0E94               	movlw	148
  3008  000E38  6E01               	movwf	HD44780_Delay@us,c
  3009  000E3A  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3010                           
  3011                           ;pic18f4520_hd44780.c: 137: HD44780_Cmd4bit(0x03);
  3012  000E3E  0E03               	movlw	3
  3013  000E40  EC51  F007         	call	_HD44780_Cmd4bit
  3014                           
  3015                           ;pic18f4520_hd44780.c: 138: HD44780_Delay(4500);
  3016  000E44  0E11               	movlw	17
  3017  000E46  6E02               	movwf	HD44780_Delay@us+1,c
  3018  000E48  0E94               	movlw	148
  3019  000E4A  6E01               	movwf	HD44780_Delay@us,c
  3020  000E4C  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3021                           
  3022                           ;pic18f4520_hd44780.c: 141: HD44780_Cmd4bit(0x03);
  3023  000E50  0E03               	movlw	3
  3024  000E52  EC51  F007         	call	_HD44780_Cmd4bit
  3025                           
  3026                           ;pic18f4520_hd44780.c: 142: HD44780_Delay(4500);
  3027  000E56  0E11               	movlw	17
  3028  000E58  6E02               	movwf	HD44780_Delay@us+1,c
  3029  000E5A  0E94               	movlw	148
  3030  000E5C  6E01               	movwf	HD44780_Delay@us,c
  3031  000E5E  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3032                           
  3033                           ;pic18f4520_hd44780.c: 145: HD44780_Cmd4bit(0x02);
  3034  000E62  0E02               	movlw	2
  3035  000E64  EC51  F007         	call	_HD44780_Cmd4bit
  3036                           
  3037                           ;pic18f4520_hd44780.c: 146: HD44780_Delay(100);
  3038  000E68  0E00               	movlw	0
  3039  000E6A  6E02               	movwf	HD44780_Delay@us+1,c
  3040  000E6C  0E64               	movlw	100
  3041  000E6E  6E01               	movwf	HD44780_Delay@us,c
  3042  000E70  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3043                           
  3044                           ;pic18f4520_hd44780.c: 149: HD44780_Cmd(0x20 | HD44780_Opts.DisplayFunction);
  3045  000E74  502E               	movf	_HD44780_Opts+1,w,c
  3046  000E76  0920               	iorlw	32
  3047  000E78  EC31  F009         	call	_HD44780_Cmd
  3048                           
  3049                           ;pic18f4520_hd44780.c: 152: HD44780_Opts.DisplayControl = 0x04;
  3050  000E7C  0E04               	movlw	4
  3051  000E7E  6E2D               	movwf	_HD44780_Opts,c
  3052                           
  3053                           ;pic18f4520_hd44780.c: 153: HD44780_DisplayOn();
  3054  000E80  EC55  F009         	call	_HD44780_DisplayOn	;wreg free
  3055                           
  3056                           ;pic18f4520_hd44780.c: 156: HD44780_Clear();
  3057  000E84  EC3C  F009         	call	_HD44780_Clear	;wreg free
  3058                           
  3059                           ;pic18f4520_hd44780.c: 159: HD44780_Opts.DisplayMode = 0x02 | 0x00;
  3060  000E88  0E02               	movlw	2
  3061  000E8A  6E2F               	movwf	_HD44780_Opts+2,c
  3062                           
  3063                           ;pic18f4520_hd44780.c: 160: HD44780_Cmd(0x04 | HD44780_Opts.DisplayMode);
  3064  000E8C  502F               	movf	_HD44780_Opts+2,w,c
  3065  000E8E  0904               	iorlw	4
  3066  000E90  EC31  F009         	call	_HD44780_Cmd
  3067                           
  3068                           ;pic18f4520_hd44780.c: 163: HD44780_Delay(4500);
  3069  000E94  0E11               	movlw	17
  3070  000E96  6E02               	movwf	HD44780_Delay@us+1,c
  3071  000E98  0E94               	movlw	148
  3072  000E9A  6E01               	movwf	HD44780_Delay@us,c
  3073  000E9C  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3074  000EA0  0012               	return		;funcret
  3075  000EA2                     __end_of_HD44780_Init:
  3076                           	opt stack 0
  3077                           tblptru	equ	0xFF8
  3078                           tblptrh	equ	0xFF7
  3079                           tblptrl	equ	0xFF6
  3080                           tablat	equ	0xFF5
  3081                           prodh	equ	0xFF4
  3082                           prodl	equ	0xFF3
  3083                           intcon	equ	0xFF2
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec1	equ	0xFE5
  3087                           fsr1l	equ	0xFE1
  3088                           indf2	equ	0xFDF
  3089                           postinc2	equ	0xFDE
  3090                           postdec2	equ	0xFDD
  3091                           fsr2h	equ	0xFDA
  3092                           fsr2l	equ	0xFD9
  3093                           status	equ	0xFD8
  3094                           
  3095 ;; *************** function _HD44780_InitPins *****************
  3096 ;; Defined at:
  3097 ;;		line 292 in file "../Libraries/pic18f4520_hd44780.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;		None               void
  3104 ;; Registers used:
  3105 ;;		None
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_HD44780_Init
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text18
  3125  001232                     __ptext18:
  3126                           	opt stack 0
  3127  001232                     _HD44780_InitPins:
  3128                           	opt stack 29
  3129                           
  3130                           ;pic18f4520_hd44780.c: 294: TRISBbits.RB2 = 0;
  3131                           
  3132                           ;incstack = 0
  3133  001232  9493               	bcf	3987,2,c	;volatile
  3134                           
  3135                           ;pic18f4520_hd44780.c: 295: TRISBbits.RB3 = 0;
  3136  001234  9693               	bcf	3987,3,c	;volatile
  3137                           
  3138                           ;pic18f4520_hd44780.c: 296: TRISBbits.RB4 = 0;
  3139  001236  9893               	bcf	3987,4,c	;volatile
  3140                           
  3141                           ;pic18f4520_hd44780.c: 297: TRISBbits.RB5 = 0;
  3142  001238  9A93               	bcf	3987,5,c	;volatile
  3143                           
  3144                           ;pic18f4520_hd44780.c: 298: TRISBbits.RB6 = 0;
  3145  00123A  9C93               	bcf	3987,6,c	;volatile
  3146                           
  3147                           ;pic18f4520_hd44780.c: 299: TRISBbits.RB7 = 0;
  3148  00123C  9E93               	bcf	3987,7,c	;volatile
  3149                           
  3150                           ;pic18f4520_hd44780.c: 302: PORTBbits.RB2 = 0;
  3151  00123E  9481               	bcf	3969,2,c	;volatile
  3152                           
  3153                           ;pic18f4520_hd44780.c: 303: PORTBbits.RB3 = 0;
  3154  001240  9681               	bcf	3969,3,c	;volatile
  3155                           
  3156                           ;pic18f4520_hd44780.c: 304: PORTBbits.RB4 = 0;
  3157  001242  9881               	bcf	3969,4,c	;volatile
  3158                           
  3159                           ;pic18f4520_hd44780.c: 305: PORTBbits.RB5 = 0;
  3160  001244  9A81               	bcf	3969,5,c	;volatile
  3161                           
  3162                           ;pic18f4520_hd44780.c: 306: PORTBbits.RB6 = 0;
  3163  001246  9C81               	bcf	3969,6,c	;volatile
  3164                           
  3165                           ;pic18f4520_hd44780.c: 307: PORTBbits.RB7 = 0;
  3166  001248  9E81               	bcf	3969,7,c	;volatile
  3167  00124A  0012               	return		;funcret
  3168  00124C                     __end_of_HD44780_InitPins:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           postdec1	equ	0xFE5
  3180                           fsr1l	equ	0xFE1
  3181                           indf2	equ	0xFDF
  3182                           postinc2	equ	0xFDE
  3183                           postdec2	equ	0xFDD
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _HD44780_DisplayOn *****************
  3189 ;; Defined at:
  3190 ;;		line 192 in file "../Libraries/pic18f4520_hd44780.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;		None               void
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3204 ;;      Params:         0       0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    3
  3211 ;; This function calls:
  3212 ;;		_HD44780_Cmd
  3213 ;; This function is called by:
  3214 ;;		_HD44780_Init
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text19
  3219  0012AA                     __ptext19:
  3220                           	opt stack 0
  3221  0012AA                     _HD44780_DisplayOn:
  3222                           	opt stack 26
  3223                           
  3224                           ;pic18f4520_hd44780.c: 193: HD44780_Opts.DisplayControl |= 0x04;
  3225                           
  3226                           ;incstack = 0
  3227  0012AA  842D               	bsf	_HD44780_Opts,2,c
  3228                           
  3229                           ;pic18f4520_hd44780.c: 194: HD44780_Cmd(0x08 | HD44780_Opts.DisplayControl);
  3230  0012AC  502D               	movf	_HD44780_Opts,w,c
  3231  0012AE  0908               	iorlw	8
  3232  0012B0  EC31  F009         	call	_HD44780_Cmd
  3233  0012B4  0012               	return		;funcret
  3234  0012B6                     __end_of_HD44780_DisplayOn:
  3235                           	opt stack 0
  3236                           tblptru	equ	0xFF8
  3237                           tblptrh	equ	0xFF7
  3238                           tblptrl	equ	0xFF6
  3239                           tablat	equ	0xFF5
  3240                           prodh	equ	0xFF4
  3241                           prodl	equ	0xFF3
  3242                           intcon	equ	0xFF2
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           postdec1	equ	0xFE5
  3246                           fsr1l	equ	0xFE1
  3247                           indf2	equ	0xFDF
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _HD44780_Clear *****************
  3255 ;; Defined at:
  3256 ;;		line 166 in file "../Libraries/pic18f4520_hd44780.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;		None               void
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3270 ;;      Params:         0       0       0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    3
  3277 ;; This function calls:
  3278 ;;		_HD44780_Cmd
  3279 ;;		_HD44780_Delay
  3280 ;; This function is called by:
  3281 ;;		_HD44780_Init
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text20
  3286  001278                     __ptext20:
  3287                           	opt stack 0
  3288  001278                     _HD44780_Clear:
  3289                           	opt stack 26
  3290                           
  3291                           ;pic18f4520_hd44780.c: 167: HD44780_Cmd(0x01);
  3292                           
  3293                           ;incstack = 0
  3294  001278  0E01               	movlw	1
  3295  00127A  EC31  F009         	call	_HD44780_Cmd
  3296                           
  3297                           ;pic18f4520_hd44780.c: 168: HD44780_Delay(3000);
  3298  00127E  0E0B               	movlw	11
  3299  001280  6E02               	movwf	HD44780_Delay@us+1,c
  3300  001282  0EB8               	movlw	184
  3301  001284  6E01               	movwf	HD44780_Delay@us,c
  3302  001286  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3303  00128A  0012               	return		;funcret
  3304  00128C                     __end_of_HD44780_Clear:
  3305                           	opt stack 0
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           intcon	equ	0xFF2
  3313                           postinc0	equ	0xFEE
  3314                           wreg	equ	0xFE8
  3315                           postdec1	equ	0xFE5
  3316                           fsr1l	equ	0xFE1
  3317                           indf2	equ	0xFDF
  3318                           postinc2	equ	0xFDE
  3319                           postdec2	equ	0xFDD
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _HD44780_Cmd *****************
  3325 ;; Defined at:
  3326 ;;		line 263 in file "../Libraries/pic18f4520_hd44780.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  cmd             1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  cmd             1    7[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         0       0       0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0
  3343 ;;      Totals:         1       0       0       0       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    2
  3347 ;; This function calls:
  3348 ;;		_HD44780_Cmd4bit
  3349 ;; This function is called by:
  3350 ;;		_HD44780_Init
  3351 ;;		_HD44780_Clear
  3352 ;;		_HD44780_DisplayOn
  3353 ;;		_HD44780_CursorSet
  3354 ;;		_HD44780_DisplayOff
  3355 ;;		_HD44780_BlinkOn
  3356 ;;		_HD44780_BlinkOff
  3357 ;;		_HD44780_CursorOn
  3358 ;;		_HD44780_CursorOff
  3359 ;;		_HD44780_ScrollLeft
  3360 ;;		_HD44780_ScrollRight
  3361 ;;		_HD44780_CreateChar
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text21
  3366  001262                     __ptext21:
  3367                           	opt stack 0
  3368  001262                     _HD44780_Cmd:
  3369                           	opt stack 25
  3370                           
  3371                           ;incstack = 0
  3372                           ;HD44780_Cmd@cmd stored from wreg
  3373  001262  6E08               	movwf	HD44780_Cmd@cmd,c
  3374                           
  3375                           ;pic18f4520_hd44780.c: 265: PORTBbits.RB2 = 0;
  3376  001264  9481               	bcf	3969,2,c	;volatile
  3377                           
  3378                           ;pic18f4520_hd44780.c: 268: HD44780_Cmd4bit(cmd >> 4);
  3379  001266  3808               	swapf	HD44780_Cmd@cmd,w,c
  3380  001268  0B0F               	andlw	15
  3381  00126A  EC51  F007         	call	_HD44780_Cmd4bit
  3382                           
  3383                           ;pic18f4520_hd44780.c: 270: HD44780_Cmd4bit(cmd & 0x0F);
  3384  00126E  5008               	movf	HD44780_Cmd@cmd,w,c
  3385  001270  0B0F               	andlw	15
  3386  001272  EC51  F007         	call	_HD44780_Cmd4bit
  3387  001276  0012               	return		;funcret
  3388  001278                     __end_of_HD44780_Cmd:
  3389                           	opt stack 0
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           prodh	equ	0xFF4
  3395                           prodl	equ	0xFF3
  3396                           intcon	equ	0xFF2
  3397                           postinc0	equ	0xFEE
  3398                           wreg	equ	0xFE8
  3399                           postdec1	equ	0xFE5
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           postdec2	equ	0xFDD
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function _HD44780_Cmd4bit *****************
  3409 ;; Defined at:
  3410 ;;		line 283 in file "../Libraries/pic18f4520_hd44780.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  cmd             1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  cmd             1    6[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;		None               void
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3424 ;;      Params:         0       0       0       0       0       0       0
  3425 ;;      Locals:         1       0       0       0       0       0       0
  3426 ;;      Temps:          1       0       0       0       0       0       0
  3427 ;;      Totals:         2       0       0       0       0       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    1
  3431 ;; This function calls:
  3432 ;;		_HD44780_Delay
  3433 ;; This function is called by:
  3434 ;;		_HD44780_Init
  3435 ;;		_HD44780_Cmd
  3436 ;;		_HD44780_Data
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text22
  3441  000EA2                     __ptext22:
  3442                           	opt stack 0
  3443  000EA2                     _HD44780_Cmd4bit:
  3444                           	opt stack 26
  3445                           
  3446                           ;incstack = 0
  3447                           ;HD44780_Cmd4bit@cmd stored from wreg
  3448  000EA2  6E07               	movwf	HD44780_Cmd4bit@cmd,c
  3449                           
  3450                           ;pic18f4520_hd44780.c: 285: PORTBbits.RB7 = (cmd & 0x08) ? 1 : 0;
  3451  000EA4  A607               	btfss	HD44780_Cmd4bit@cmd,3,c
  3452  000EA6  D003               	goto	u950
  3453  000EA8  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3454  000EAA  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3455  000EAC  D001               	goto	u968
  3456  000EAE                     u950:
  3457  000EAE  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3458  000EB0                     u968:
  3459  000EB0  3206               	rrcf	??_HD44780_Cmd4bit,f,c
  3460  000EB2  3206               	rrcf	??_HD44780_Cmd4bit,f,c
  3461  000EB4  5081               	movf	3969,w,c	;volatile
  3462  000EB6  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3463  000EB8  0B7F               	andlw	-129
  3464  000EBA  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3465  000EBC  6E81               	movwf	3969,c	;volatile
  3466                           
  3467                           ;pic18f4520_hd44780.c: 286: PORTBbits.RB6 = (cmd & 0x04) ? 1 : 0;
  3468  000EBE  A407               	btfss	HD44780_Cmd4bit@cmd,2,c
  3469  000EC0  D003               	goto	u970
  3470  000EC2  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3471  000EC4  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3472  000EC6  D001               	goto	u988
  3473  000EC8                     u970:
  3474  000EC8  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3475  000ECA                     u988:
  3476  000ECA  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  3477  000ECC  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  3478  000ECE  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  3479  000ED0  5081               	movf	3969,w,c	;volatile
  3480  000ED2  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3481  000ED4  0BBF               	andlw	-65
  3482  000ED6  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3483  000ED8  6E81               	movwf	3969,c	;volatile
  3484                           
  3485                           ;pic18f4520_hd44780.c: 287: PORTBbits.RB5 = (cmd & 0x02) ? 1 : 0;
  3486  000EDA  A207               	btfss	HD44780_Cmd4bit@cmd,1,c
  3487  000EDC  D003               	goto	u990
  3488  000EDE  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3489  000EE0  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3490  000EE2  D001               	goto	u1008
  3491  000EE4                     u990:
  3492  000EE4  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3493  000EE6                     u1008:
  3494  000EE6  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  3495  000EE8  4606               	rlncf	??_HD44780_Cmd4bit,f,c
  3496  000EEA  5081               	movf	3969,w,c	;volatile
  3497  000EEC  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3498  000EEE  0BDF               	andlw	-33
  3499  000EF0  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3500  000EF2  6E81               	movwf	3969,c	;volatile
  3501                           
  3502                           ;pic18f4520_hd44780.c: 288: PORTBbits.RB4 = (cmd & 0x01) ? 1 : 0;
  3503  000EF4  A007               	btfss	HD44780_Cmd4bit@cmd,0,c
  3504  000EF6  D003               	goto	u1010
  3505  000EF8  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3506  000EFA  2A06               	incf	??_HD44780_Cmd4bit& (0+255),f,c
  3507  000EFC  D001               	goto	u1028
  3508  000EFE                     u1010:
  3509  000EFE  6A06               	clrf	??_HD44780_Cmd4bit& (0+255),c
  3510  000F00                     u1028:
  3511  000F00  3A06               	swapf	??_HD44780_Cmd4bit,f,c
  3512  000F02  5081               	movf	3969,w,c	;volatile
  3513  000F04  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3514  000F06  0BEF               	andlw	-17
  3515  000F08  1806               	xorwf	??_HD44780_Cmd4bit,w,c
  3516  000F0A  6E81               	movwf	3969,c	;volatile
  3517                           
  3518                           ;pic18f4520_hd44780.c: 289: PORTBbits.RB3 = 1; HD44780_Delay(20); PORTBbits.RB3 = 0; HD4
      +                          4780_Delay(20);
  3519  000F0C  8681               	bsf	3969,3,c	;volatile
  3520  000F0E  0E00               	movlw	0
  3521  000F10  6E02               	movwf	HD44780_Delay@us+1,c
  3522  000F12  0E14               	movlw	20
  3523  000F14  6E01               	movwf	HD44780_Delay@us,c
  3524  000F16  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3525  000F1A  9681               	bcf	3969,3,c	;volatile
  3526  000F1C  0E00               	movlw	0
  3527  000F1E  6E02               	movwf	HD44780_Delay@us+1,c
  3528  000F20  0E14               	movlw	20
  3529  000F22  6E01               	movwf	HD44780_Delay@us,c
  3530  000F24  ECB6  F008         	call	_HD44780_Delay	;wreg free
  3531  000F28  0012               	return		;funcret
  3532  000F2A                     __end_of_HD44780_Cmd4bit:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           intcon	equ	0xFF2
  3541                           postinc0	equ	0xFEE
  3542                           wreg	equ	0xFE8
  3543                           postdec1	equ	0xFE5
  3544                           fsr1l	equ	0xFE1
  3545                           indf2	equ	0xFDF
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _HD44780_Delay *****************
  3553 ;; Defined at:
  3554 ;;		line 106 in file "../Libraries/pic18f4520_hd44780.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  us              2    0[COMRAM] int 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  i               2    3[COMRAM] int 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;		None               void
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3568 ;;      Params:         2       0       0       0       0       0       0
  3569 ;;      Locals:         2       0       0       0       0       0       0
  3570 ;;      Temps:          1       0       0       0       0       0       0
  3571 ;;      Totals:         5       0       0       0       0       0       0
  3572 ;;Total ram usage:        5 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_HD44780_Init
  3578 ;;		_HD44780_Clear
  3579 ;;		_HD44780_Cmd4bit
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text23
  3584  00116C                     __ptext23:
  3585                           	opt stack 0
  3586  00116C                     _HD44780_Delay:
  3587                           	opt stack 26
  3588                           
  3589                           ;pic18f4520_hd44780.c: 108: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(3200000
      +                          0/4000000.0)));
  3590                           
  3591                           ;incstack = 0
  3592  00116C  0E00               	movlw	0
  3593  00116E  6E05               	movwf	HD44780_Delay@i+1,c
  3594  001170  0E00               	movlw	0
  3595  001172  6E04               	movwf	HD44780_Delay@i,c
  3596  001174  D006               	goto	l78
  3597  001176                     l1426:
  3598  001176  0E02               	movlw	2
  3599  001178                     u1877:
  3600  001178  2EE8               	decfsz	wreg,f,c
  3601  00117A  D7FE               	goto	u1877
  3602  00117C  D000               	nop2		;nop
  3603  00117E  4A04               	infsnz	HD44780_Delay@i,f,c
  3604  001180  2A05               	incf	HD44780_Delay@i+1,f,c
  3605  001182                     l78:
  3606  001182  5001               	movf	HD44780_Delay@us,w,c
  3607  001184  5C04               	subwf	HD44780_Delay@i,w,c
  3608  001186  5005               	movf	HD44780_Delay@i+1,w,c
  3609  001188  0A80               	xorlw	128
  3610  00118A  6E03               	movwf	??_HD44780_Delay& (0+255),c
  3611  00118C  5002               	movf	HD44780_Delay@us+1,w,c
  3612  00118E  0A80               	xorlw	128
  3613  001190  5803               	subwfb	??_HD44780_Delay& (0+255),w,c
  3614  001192  A0D8               	btfss	status,0,c
  3615  001194  D7F0               	goto	l1426
  3616  001196  0012               	return		;funcret
  3617  001198                     __end_of_HD44780_Delay:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           postdec1	equ	0xFE5
  3629                           fsr1l	equ	0xFE1
  3630                           indf2	equ	0xFDF
  3631                           postinc2	equ	0xFDE
  3632                           postdec2	equ	0xFDD
  3633                           fsr2h	equ	0xFDA
  3634                           fsr2l	equ	0xFD9
  3635                           status	equ	0xFD8
  3636                           
  3637 ;; *************** function _Delayms *****************
  3638 ;; Defined at:
  3639 ;;		line 66 in file "../Libraries\pic18f4520_delay.h"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  ms              2    0[COMRAM] int 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  i               2    3[COMRAM] int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3653 ;;      Params:         2       0       0       0       0       0       0
  3654 ;;      Locals:         2       0       0       0       0       0       0
  3655 ;;      Temps:          1       0       0       0       0       0       0
  3656 ;;      Totals:         5       0       0       0       0       0       0
  3657 ;;Total ram usage:        5 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text24
  3667  001138                     __ptext24:
  3668                           	opt stack 0
  3669  001138                     _Delayms:
  3670                           	opt stack 30
  3671                           
  3672                           ;Libraries\pic18f4520_delay.h: 68: for(int i=0; i<ms ; i++) _delay((unsigned long)((1)*(
      +                          32000000/4000.0)));
  3673                           
  3674                           ;incstack = 0
  3675  001138  0E00               	movlw	0
  3676  00113A  6E05               	movwf	Delayms@i+1,c
  3677  00113C  0E00               	movlw	0
  3678  00113E  6E04               	movwf	Delayms@i,c
  3679  001140  D00A               	goto	l23
  3680  001142                     l1584:
  3681  001142  0E0B               	movlw	11
  3682  001144  6E03               	movwf	??_Delayms& (0+255),c
  3683  001146  0E62               	movlw	98
  3684  001148                     u1887:
  3685  001148  2EE8               	decfsz	wreg,f,c
  3686  00114A  D7FE               	goto	u1887
  3687  00114C  2E03               	decfsz	??_Delayms& (0+255),f,c
  3688  00114E  D7FC               	goto	u1887
  3689  001150  D000               	nop2	
  3690  001152  4A04               	infsnz	Delayms@i,f,c
  3691  001154  2A05               	incf	Delayms@i+1,f,c
  3692  001156                     l23:
  3693  001156  5001               	movf	Delayms@ms,w,c
  3694  001158  5C04               	subwf	Delayms@i,w,c
  3695  00115A  5005               	movf	Delayms@i+1,w,c
  3696  00115C  0A80               	xorlw	128
  3697  00115E  6E03               	movwf	??_Delayms& (0+255),c
  3698  001160  5002               	movf	Delayms@ms+1,w,c
  3699  001162  0A80               	xorlw	128
  3700  001164  5803               	subwfb	??_Delayms& (0+255),w,c
  3701  001166  A0D8               	btfss	status,0,c
  3702  001168  D7EC               	goto	l1584
  3703  00116A  0012               	return		;funcret
  3704  00116C                     __end_of_Delayms:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           postinc0	equ	0xFEE
  3714                           wreg	equ	0xFE8
  3715                           postdec1	equ	0xFE5
  3716                           fsr1l	equ	0xFE1
  3717                           indf2	equ	0xFDF
  3718                           postinc2	equ	0xFDE
  3719                           postdec2	equ	0xFDD
  3720                           fsr2h	equ	0xFDA
  3721                           fsr2l	equ	0xFD9
  3722                           status	equ	0xFD8
  3723                           
  3724 ;; *************** function _Delay *****************
  3725 ;; Defined at:
  3726 ;;		line 76 in file "../Libraries\pic18f4520_delay.h"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  us              2    0[COMRAM] int 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  i               2    3[COMRAM] int 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         2       0       0       0       0       0       0
  3741 ;;      Locals:         2       0       0       0       0       0       0
  3742 ;;      Temps:          1       0       0       0       0       0       0
  3743 ;;      Totals:         5       0       0       0       0       0       0
  3744 ;;Total ram usage:        5 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text25
  3754  001198                     __ptext25:
  3755                           	opt stack 0
  3756  001198                     _Delay:
  3757                           	opt stack 30
  3758                           
  3759                           ;Libraries\pic18f4520_delay.h: 78: for(int i=0; i<us ; i++) _delay((unsigned long)((1)*(
      +                          32000000/4000000.0)));
  3760                           
  3761                           ;incstack = 0
  3762  001198  0E00               	movlw	0
  3763  00119A  6E05               	movwf	Delay@i+1,c
  3764  00119C  0E00               	movlw	0
  3765  00119E  6E04               	movwf	Delay@i,c
  3766  0011A0  D006               	goto	l29
  3767  0011A2                     l1590:
  3768  0011A2  0E02               	movlw	2
  3769  0011A4                     u1897:
  3770  0011A4  2EE8               	decfsz	wreg,f,c
  3771  0011A6  D7FE               	goto	u1897
  3772  0011A8  D000               	nop2		;nop
  3773  0011AA  4A04               	infsnz	Delay@i,f,c
  3774  0011AC  2A05               	incf	Delay@i+1,f,c
  3775  0011AE                     l29:
  3776  0011AE  5001               	movf	Delay@us,w,c
  3777  0011B0  5C04               	subwf	Delay@i,w,c
  3778  0011B2  5005               	movf	Delay@i+1,w,c
  3779  0011B4  0A80               	xorlw	128
  3780  0011B6  6E03               	movwf	??_Delay& (0+255),c
  3781  0011B8  5002               	movf	Delay@us+1,w,c
  3782  0011BA  0A80               	xorlw	128
  3783  0011BC  5803               	subwfb	??_Delay& (0+255),w,c
  3784  0011BE  A0D8               	btfss	status,0,c
  3785  0011C0  D7F0               	goto	l1590
  3786  0011C2  0012               	return		;funcret
  3787  0011C4                     __end_of_Delay:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1l	equ	0xFE1
  3800                           indf2	equ	0xFDF
  3801                           postinc2	equ	0xFDE
  3802                           postdec2	equ	0xFDD
  3803                           fsr2h	equ	0xFDA
  3804                           fsr2l	equ	0xFD9
  3805                           status	equ	0xFD8
  3806                           
  3807 ;; *************** function _ConvertADC *****************
  3808 ;; Defined at:
  3809 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;		None               void
  3816 ;; Registers used:
  3817 ;;		None
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3823 ;;      Params:         0       0       0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text26
  3837  0012BE                     __ptext26:
  3838                           	opt stack 0
  3839  0012BE                     _ConvertADC:
  3840                           	opt stack 30
  3841                           
  3842                           ;incstack = 0
  3843  0012BE  82C2               	bsf	4034,1,c	;volatile
  3844  0012C0  0012               	return		;funcret
  3845  0012C2                     __end_of_ConvertADC:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           prodh	equ	0xFF4
  3852                           prodl	equ	0xFF3
  3853                           intcon	equ	0xFF2
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           postdec1	equ	0xFE5
  3857                           fsr1l	equ	0xFE1
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           postdec2	equ	0xFDD
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function _BusyADC *****************
  3866 ;; Defined at:
  3867 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3881 ;;      Params:         0       0       0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text27
  3895  00129C                     __ptext27:
  3896                           	opt stack 0
  3897  00129C                     _BusyADC:
  3898                           	opt stack 30
  3899                           
  3900                           ;incstack = 0
  3901  00129C  A2C2               	btfss	4034,1,c	;volatile
  3902  00129E  D002               	goto	u1420
  3903  0012A0  0E01               	movlw	1
  3904  0012A2  D002               	goto	l195
  3905  0012A4                     u1420:
  3906  0012A4  0E00               	movlw	0
  3907  0012A6  D000               	goto	l195
  3908  0012A8                     l195:
  3909  0012A8  0012               	return		;funcret
  3910  0012AA                     __end_of_BusyADC:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           intcon	equ	0xFF2
  3919                           postinc0	equ	0xFEE
  3920                           wreg	equ	0xFE8
  3921                           postdec1	equ	0xFE5
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           postinc2	equ	0xFDE
  3925                           postdec2	equ	0xFDD
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           postdec1	equ	0xFE5
  3939                           fsr1l	equ	0xFE1
  3940                           indf2	equ	0xFDF
  3941                           postinc2	equ	0xFDE
  3942                           postdec2	equ	0xFDD
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8
  3946                           
  3947                           	psect	rparam
  3948  0000                     tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           postinc2	equ	0xFDE
  3961                           postdec2	equ	0xFDD
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    10
    Data        7
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      61
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[4]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _printf->___fttol
    _printf->_putch
    _putch->_HD44780_CursorSet
    _HD44780_Data->_HD44780_Cmd4bit
    _HD44780_CursorSet->_HD44780_Cmd
    ___lwmod->___lwdiv
    ___ftmul->___ftadd
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _HD44780_Init->_HD44780_Cmd
    _HD44780_DisplayOn->_HD44780_Cmd
    _HD44780_Clear->_HD44780_Cmd
    _HD44780_Cmd->_HD44780_Cmd4bit
    _HD44780_Cmd4bit->_HD44780_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   19125
                                             39 COMRAM     5     5      0
                            _BusyADC
                         _ConvertADC
                              _Delay
                            _Delayms
                  _HD44780_CursorSet
                       _HD44780_Init
                            _OpenADC
                            _ReadADC
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    22      4    4045
                                             15 COMRAM    17    13      4
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0    2349
                                             14 COMRAM     1     1      0
                  _HD44780_CursorSet
                       _HD44780_Data
 ---------------------------------------------------------------------------------
 (3) _HD44780_Data                                         1     1      0     754
                                              7 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (3) _HD44780_CursorSet                                    6     5      1    1529
                                              8 COMRAM     6     5      1
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2715
                                             24 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3331
                                             12 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     282
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _HD44780_Init                                         2     1      1    4346
                                              8 COMRAM     2     1      1
                      _HD44780_Clear
                        _HD44780_Cmd
                    _HD44780_Cmd4bit
                      _HD44780_Delay
                  _HD44780_DisplayOn
                   _HD44780_InitPins
 ---------------------------------------------------------------------------------
 (2) _HD44780_InitPins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HD44780_DisplayOn                                    0     0      0     754
                        _HD44780_Cmd
 ---------------------------------------------------------------------------------
 (2) _HD44780_Clear                                        0     0      0    1376
                        _HD44780_Cmd
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd                                          1     1      0     754
                                              7 COMRAM     1     1      0
                    _HD44780_Cmd4bit
 ---------------------------------------------------------------------------------
 (4) _HD44780_Cmd4bit                                      2     2      0     710
                                              5 COMRAM     2     2      0
                      _HD44780_Delay
 ---------------------------------------------------------------------------------
 (5) _HD44780_Delay                                        5     3      2     622
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delayms                                              5     3      2     110
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     3      2     110
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay
   _Delayms
   _HD44780_CursorSet
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
   _HD44780_Init
     _HD44780_Clear
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
       _HD44780_Delay
     _HD44780_Cmd
       _HD44780_Cmd4bit
         _HD44780_Delay
     _HD44780_Cmd4bit
       _HD44780_Delay
     _HD44780_Delay
     _HD44780_DisplayOn
       _HD44780_Cmd
         _HD44780_Cmd4bit
           _HD44780_Delay
     _HD44780_InitPins
   _OpenADC
   _ReadADC
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   _printf
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _HD44780_CursorSet
         _HD44780_Cmd
           _HD44780_Cmd4bit
             _HD44780_Delay
       _HD44780_Data
         _HD44780_Cmd4bit
           _HD44780_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      3D       1       48.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      15        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Mar 20 18:50:17 2016

                          l23 1156                            l29 11AE                            l75 1034  
                          l78 1182           ___wmul@multiplicand 0003                   __CFG_BORV$2 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  ___ftadd@exp1 0018                  ___ftadd@exp2 0017  
                ___ftadd@sign 0016                           l217 0F84                           l225 129A  
                         l228 11EA                           l190 0846                           l600 0994  
                         l195 12A8                           l446 1100                           l623 0C4E  
                         l536 0DFA                           l633 1202                           l547 0DD2  
                         l580 08B6                           l644 0D34                           l591 0978  
                         l751 0FDA                           l576 088C                           l577 0A0A  
                         l761 1078                           l659 1230                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           u950 0EAE                           u970 0EC8  
                         u990 0EE4                           u968 0EB0                           u988 0ECA  
                         _dcf 0034                           prod 000FF3                           wreg 000FE8  
                __CFG_LVP$OFF 000000      __size_of_HD44780_Cmd4bit 0088                  __CFG_WDT$OFF 000000  
                        l1520 0D82                          l1512 0D46                          l1426 1176  
                        l1450 10A2                          l1612 0E2C                          l1540 0DEC  
                        l1524 0D9A                          l1516 0D56                          l1534 0DDA  
                        l1526 0DBA                          l1518 0D62                          l1550 0F9E  
                        l1702 0750                          l1528 0DC6                          l1800 09B2  
                        l1552 0FA8                          l1720 07BA                          l1712 0790  
                        l1810 09E4                          l1562 0FCE                          l1554 0FB0  
                        l1570 1044                          l1474 1016                          l1730 081E  
                        l1714 079A                          l1820 0B76                          l1572 104E  
                        l1468 1000                          l1724 07CE                          l1716 07A2  
                        l1708 076C                          l1660 0636                          l1732 082A  
                        l1590 11A2                          l1822 0B90                          l1902 0CC8  
                        l1574 1056                          l1478 102A                          l1726 07D4  
                        l1584 1142                          l1752 089A                          l1840 0BD2  
                        l1920 0D22                          l1912 0CF2                          l1656 0626  
                        l1850 0C00                          l1826 0B9E                          l1914 0D00  
                        l1906 0CD8                          l1578 106C                          l1498 1228  
                        l1690 071C                          l1666 0660                          l1780 091C  
                        l1764 08D0                          l1844 0BE4                          l1908 0CDE  
                        l1916 0D0A                          l1676 06C8                          l1932 0A4C  
                        l1870 10DC                          l1782 0928                          l1774 08F8  
                        l1758 08C4                          l1854 0C12                          l1694 0728  
                        l1678 06EE                          l1934 0A52                          l1792 0960  
                        l1784 0934                          l1848 0BFA                          l1688 0718  
                        l1794 096C                          l1786 093C                          l1858 0C28  
                        l1698 074C                          l1884 0C6E                          STR_1 060B  
                        STR_2 0616                          u1010 0EFE                          u1008 0EE6  
                        u1028 0F00                          u1420 12A4                          u1431 0858  
                        u1441 086C                          u1641 0B68                          u1721 0C60  
                        u1740 0C8C                          u1661 0B86                          u1745 0C84  
                        u1877 1178                          u1887 1148                          u1897 11A4  
             ??_HD44780_Delay 0003               ??_HD44780_Clear 0009                          _main 0A0C  
                ___ftpack@arg 0001                  ___ftpack@exp 0004                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
               __CFG_BOREN$ON 000000                          prodh 000FF4                          prodl 000FF3  
                        start 0000                 __CFG_IESO$OFF 000000               __end_of_Delayms 116C  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0026                  ___param_bank 000010  
                ___ftmul@sign 0027               __end_of_BusyADC 12AA               __end_of_ReadADC 129C  
             __end_of_OpenADC 0F88                  ___fttol@exp1 000F                  ___fttol@lval 000B  
                       ?_main 0001               __end_of___ftadd 0A0C               __end_of___ftneg 1210  
             __end_of___ftmul 0C50               __end_of___fttol 0D36               __end_of___lwdiv 0FE4  
             __end_of___lwmod 1082                         _Delay 1198                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                 ___awtoft@sign 000C               __end_of_dpowers 060B  
                       _lamda 003B               __end_of_isdigit 1232                 ___ftpack@sign 0005  
                       _putch 0FE4                    _ConvertADC 12BE                         tablat 000FF5  
                       status 000FD8               __initialization 1102      __end_of_HD44780_InitPins 124C  
                __end_of_main 0B58                __CFG_OSC$HSPLL 000000                        ??_main 0028  
               ___fttol@sign1 000A                 __activetblptr 000002                        ?_Delay 0001  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _ADRESH 000FC4                        _ADRESL 000FC3              __end_of___awtoft 1102  
                      ?_putch 0001              __end_of___ftpack 0DFC                        Delay@i 0004  
                   ??_Delayms 0003                     ??_BusyADC 0001                     ??_ReadADC 0003  
           ??_HD44780_Cmd4bit 0006                     ??_OpenADC 0003                __CFG_XINST$OFF 000000  
                      ___wmul 11C4                     ??___ftadd 0013                __CFG_STVREN$ON 000000  
                   ??___ftneg 0004                     ??___ftmul 001F                     ??___fttol 0005  
                   ??___lwdiv 0005                     ??___lwmod 000C                        clear_0 1108  
                      _printf 061C         ___ftmul@f3_as_product 0023                  __pdataCOMRAM 0037  
                   ??_isdigit 0001                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 000F  
                 ?_ConvertADC 0001                    __accesstop 0080       __end_of__initialization 112E  
             __CFG_PBADEN$OFF 000000                    ___ftadd@f1 000D                    ___ftadd@f2 0010  
               ___rparam_used 000001                    ___ftneg@f1 0001                 ??_HD44780_Cmd 0008  
                  ___awtoft@c 0009                 __end_of_Delay 11C4                    ___ftmul@f1 0019  
                  ___ftmul@f2 001C                    ___fttol@f1 0001                __pcstackCOMRAM 0001  
               __end_of_putch 1036                       ??_Delay 0003                       ??_putch 000F  
                     ?___wmul 0001           __end_of_HD44780_Cmd 1278           __size_of_ConvertADC 0004  
                   ?___awtoft 0009                     ?___ftpack 0001                       ?_printf 0010  
                     Delay@us 0001                       _Delayms 1138                       _BusyADC 129C  
                     _ReadADC 128C         __end_of_HD44780_Delay 1198         __end_of_HD44780_Clear 128C  
                     _OpenADC 0F2A                       __Hparam 0000                       __Lparam 0000  
           ?_HD44780_InitPins 0001                       ___ftadd 0848                       ___ftneg 11EC  
             __size_of___wmul 0028                       ___ftmul 0B58                       ___fttol 0C50  
                     ___lwdiv 0F88                       ___lwmod 1036                  __psmallconst 0600  
          ??_HD44780_InitPins 0001                       __pcinit 1102                    ??___awtoft 000C  
                  ??___ftpack 0006                       __ramtop 0600                       __ptext0 0A0C  
                     __ptext1 061C                       __ptext2 0FE4                       __ptext3 124C  
                     __ptext4 1082                       __ptext5 1210                       __ptext6 11C4  
                     __ptext7 1036                       __ptext8 0F88                       __ptext9 0C50  
             __size_of_printf 022C                       _dpowers 0601                       _isdigit 1210  
             _HD44780_Cmd4bit 0EA2                OpenADC@config2 0001          end_of_initialization 112E  
               __Lmediumconst 0000                     Delayms@ms 0001                 ?_HD44780_Data 0001  
               ?_HD44780_Init 0009                   _HD44780_Cmd 1262                       printf@c 0020  
                     printf@f 0010                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                     _PORTAbits 000F80  
                   _PORTBbits 000F81          HD44780_CursorSet@col 000E          HD44780_CursorSet@row 0009  
                   _TRISAbits 000F92                     _TRISBbits 000F93                  ??_ConvertADC 0001  
                 printf@width 001E                ??_HD44780_Data 0008                ??_HD44780_Init 000A  
                 ___ftmul@exp 0022                __end_of___wmul 11EC                 __pidataCOMRAM 12B6  
          __end_of_ConvertADC 12C2       __end_of_HD44780_Cmd4bit 0F2A                __end_of_printf 0848  
         start_initialization 1102            HD44780_Cmd4bit@cmd 0007                      ??___wmul 0005  
            __CFG_LPT1OSC$OFF 000000                      ??_printf 0014             __size_of___awtoft 003C  
           __size_of___ftpack 00C6                   __pbssCOMRAM 002D                  _isdigit$1122 0002  
                    ?_Delayms 0001                      ?_BusyADC 0001                      ?_ReadADC 0001  
           OpenADC@portconfig 0002                      ?_OpenADC 0001                     _main$1378 0028  
            ___lwdiv@dividend 0001             __CFG_CCP2MX$PORTC 000000                      ?___ftadd 000D  
                    ?___ftneg 0001                      ?___ftmul 0019                      ?___fttol 0001  
                    ?___lwdiv 0001                      ?___lwmod 0008              ?_HD44780_Cmd4bit 0001  
                 __smallconst 0600                      ?_isdigit 0001          __end_of_HD44780_Data 1262  
        __end_of_HD44780_Init 0EA2                __size_of_Delay 002C     __size_of_HD44780_InitPins 001A  
            ___lwdiv@quotient 0005                __size_of_putch 0052                ___wmul@product 0005  
               OpenADC@config 0005                      _PIE1bits 000F9D                      Delayms@i 0004  
                ?_HD44780_Cmd 0001                      _PIR1bits 000F9E              __CFG_WDTPS$32768 000000  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0001                     main@adcin 002B  
                  printf@flag 001B                    printf@prec 001A        __size_of_HD44780_Delay 002C  
      __size_of_HD44780_Clear 0014                     copy_data0 1122  HD44780_CursorSet@row_offsets 000A  
           _HD44780_DisplayOn 12AA              __size_of_Delayms 0034            ?_HD44780_DisplayOn 0001  
            __size_of_BusyADC 000E              __size_of_ReadADC 0010                      __Hrparam 0000  
            __size_of_OpenADC 005E                      __Lrparam 0000             _HD44780_CursorSet 1082  
         ??_HD44780_DisplayOn 0009              __size_of___ftadd 01C4              __size_of___ftneg 0024  
            __size_of___ftmul 00F8              __size_of___fttol 00E6              __size_of___lwdiv 005C  
            __size_of___lwmod 004C            ?_HD44780_CursorSet 0009                      ___awtoft 10C6  
                    ___ftpack 0D36           ??_HD44780_CursorSet 000A              __size_of_isdigit 0022  
             ___lwdiv@divisor 0003               ___lwdiv@counter 0007                      __ptext10 11EC  
                    __ptext11 0B58                      __ptext20 1278                      __ptext12 0848  
                    __ptext21 1262                      __ptext13 10C6                      __ptext22 0EA2  
                    __ptext14 0D36                      __ptext23 116C                      __ptext15 128C  
                    __ptext24 1138                      __ptext16 0F2A                      __ptext25 1198  
                    __ptext17 0DFC                      __ptext26 12BE                      __ptext18 1232  
                    __ptext27 129C                      __ptext19 12AA     __end_of_HD44780_DisplayOn 12B6  
               __size_of_main 014C                 _HD44780_Delay 116C                 _HD44780_Clear 1278  
   __end_of_HD44780_CursorSet 10C6                     printf@val 001C         __size_of_HD44780_Data 0016  
       __size_of_HD44780_Init 00A6                    _INTCONbits 000FF2              _HD44780_InitPins 1232  
                    isdigit@c 0003              HD44780_Data@data 0008              ___lwmod@dividend 0008  
              ?_HD44780_Delay 0001                ?_HD44780_Clear 0001        HD44780_CursorSet@F4400 0037  
                _HD44780_Data 124C                  _HD44780_Init 0DFC                  _HD44780_Opts 002D  
                    printf@ap 0018          __size_of_HD44780_Cmd 0016              HD44780_Init@cols 000A  
            HD44780_Init@rows 0009               HD44780_Delay@us 0001               ___lwmod@divisor 000A  
             ___lwmod@counter 000C    __size_of_HD44780_DisplayOn 000C                HD44780_Cmd@cmd 0008  
              HD44780_Delay@i 0004    __size_of_HD44780_CursorSet 0044  
